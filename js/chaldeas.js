(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}




var _List_Nil = { $: 0 };
var _List_Nil_UNUSED = { $: '[]' };

function _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;
	}));
});



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	/**_UNUSED/
	if (x.$ === 'Set_elm_builtin')
	{
		x = elm$core$Set$toList(x);
		y = elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = elm$core$Dict$toList(x);
		y = elm$core$Dict$toList(y);
	}
	//*/

	/**/
	if (x.$ < 0)
	{
		x = elm$core$Dict$toList(x);
		y = elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**_UNUSED/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**/
	if (!x.$)
	//*/
	/**_UNUSED/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0 = 0;
var _Utils_Tuple0_UNUSED = { $: '#0' };

function _Utils_Tuple2(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr(c) { return c; }
function _Utils_chr_UNUSED(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log = F2(function(tag, value)
{
	return value;
});

var _Debug_log_UNUSED = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString(value)
{
	return '<internals>';
}

function _Debug_toString_UNUSED(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[94m' + string + '\x1b[0m' : string;
}



// CRASH


function _Debug_crash(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.a0.I === region.ap.I)
	{
		return 'on line ' + region.a0.I;
	}
	return 'on lines ' + region.a0.I + ' through ' + region.ap.I;
}



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800)
			+
			String.fromCharCode(code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return word
		? elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? elm$core$Maybe$Nothing
		: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




/**_UNUSED/
function _Json_errorToString(error)
{
	return elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

var _Json_decodeInt = { $: 2 };
var _Json_decodeBool = { $: 3 };
var _Json_decodeFloat = { $: 4 };
var _Json_decodeValue = { $: 5 };
var _Json_decodeString = { $: 6 };

function _Json_decodeList(decoder) { return { $: 7, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 8, b: decoder }; }

function _Json_decodeNull(value) { return { $: 9, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 10,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 11,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 12,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 13,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 14,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 15,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 3:
			return (typeof value === 'boolean')
				? elm$core$Result$Ok(value)
				: _Json_expecting('a BOOL', value);

		case 2:
			if (typeof value !== 'number') {
				return _Json_expecting('an INT', value);
			}

			if (-2147483647 < value && value < 2147483647 && (value | 0) === value) {
				return elm$core$Result$Ok(value);
			}

			if (isFinite(value) && !(value % 1)) {
				return elm$core$Result$Ok(value);
			}

			return _Json_expecting('an INT', value);

		case 4:
			return (typeof value === 'number')
				? elm$core$Result$Ok(value)
				: _Json_expecting('a FLOAT', value);

		case 6:
			return (typeof value === 'string')
				? elm$core$Result$Ok(value)
				: (value instanceof String)
					? elm$core$Result$Ok(value + '')
					: _Json_expecting('a STRING', value);

		case 9:
			return (value === null)
				? elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 5:
			return elm$core$Result$Ok(_Json_wrap(value));

		case 7:
			if (!Array.isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 8:
			if (!Array.isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 10:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));

		case 11:
			var index = decoder.e;
			if (!Array.isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));

		case 12:
			if (typeof value !== 'object' || value === null || Array.isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!elm$core$Result$isOk(result))
					{
						return elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));

		case 13:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return elm$core$Result$Ok(answer);

		case 14:
			var result = _Json_runHelp(decoder.b, value);
			return (!elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 15:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if (elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));

		case 1:
			return elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!elm$core$Result$isOk(result))
		{
			return elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return elm$core$Result$Ok(toElmValue(array));
}

function _Json_toElmArray(array)
{
	return A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 3:
		case 2:
		case 4:
		case 6:
		case 5:
			return true;

		case 9:
			return x.c === y.c;

		case 7:
		case 8:
		case 12:
			return _Json_equality(x.b, y.b);

		case 10:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 11:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 13:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 14:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 15:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }
function _Json_unwrap_UNUSED(value) { return value.a; }

function _Json_wrap(value) { return value; }
function _Json_unwrap(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.bD,
		impl.cb,
		impl.b4,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);
	var managers = {};
	result = init(result.a);
	var model = result.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		result = A2(update, msg, model);
		stepper(model = result.a, viewMetadata);
		_Platform_dispatchEffects(managers, result.b, subscriptions(model));
	}

	_Platform_dispatchEffects(managers, result.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				p: bag.n,
				q: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.q)
		{
			x = temp.p(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		r: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		r: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**/
	var node = args['node'];
	//*/
	/**_UNUSED/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2(elm$json$Json$Decode$map, func, handler.a)
				:
			A3(elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		o: func(record.o),
		af: record.af,
		ae: record.ae
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		(key !== 'value' || key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		value
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		value
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.o;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.af;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.ae) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			var oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			var newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}



// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.bD,
		impl.cb,
		impl.b4,
		function(sendToApp, initialModel) {
			var view = impl.ce;
			/**/
			var domNode = args['node'];
			//*/
			/**_UNUSED/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.bD,
		impl.cb,
		impl.b4,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.K && impl.K(sendToApp)
			var view = impl.ce;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.bc);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.b8) && (_VirtualDom_doc.title = title = doc.b8);
			});
		}
	);
});



// ANIMATION


var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.bP;
	var onUrlRequest = impl.bQ;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		K: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.download)
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.aS === next.aS
							&& curr.az === next.az
							&& curr.aO.a === next.aO.a
						)
							? elm$browser$Browser$Internal(next)
							: elm$browser$Browser$External(href)
					));
				}
			});
		},
		bD: function(flags)
		{
			return A3(impl.bD, flags, _Browser_getUrl(), key);
		},
		ce: impl.ce,
		cb: impl.cb,
		b4: impl.b4
	});
}

function _Browser_getUrl()
{
	return elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { bz: 'hidden', G: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { bz: 'mozHidden', G: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { bz: 'msHidden', G: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { bz: 'webkitHidden', G: 'webkitvisibilitychange' }
		: { bz: 'hidden', G: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		aY: _Browser_getScene(),
		a4: {
			X: _Browser_window.pageXOffset,
			Y: _Browser_window.pageYOffset,
			E: _Browser_doc.documentElement.clientWidth,
			x: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		E: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		x: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			aY: {
				E: node.scrollWidth,
				x: node.scrollHeight
			},
			a4: {
				X: node.scrollLeft,
				Y: node.scrollTop,
				E: node.clientWidth,
				x: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			aY: _Browser_getScene(),
			a4: {
				X: x,
				Y: y,
				E: _Browser_doc.documentElement.clientWidth,
				x: _Browser_doc.documentElement.clientHeight
			},
			br: {
				X: x + rect.left,
				Y: y + rect.top,
				E: rect.width,
				x: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}



var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});


// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.aI) { flags += 'm'; }
	if (options.ak) { flags += 'i'; }

	try
	{
		return elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? elm$core$Maybe$Just(submatch)
				: elm$core$Maybe$Nothing;
		}
		out.push(A4(elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? elm$core$Maybe$Just(submatch)
				: elm$core$Maybe$Nothing;
		}
		return replacer(A4(elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;
var elm$core$Array$branchFactor = 32;
var elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var elm$core$Basics$EQ = 1;
var elm$core$Basics$GT = 2;
var elm$core$Basics$LT = 0;
var elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === -2) {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3(elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var elm$core$List$cons = _List_cons;
var elm$core$Dict$toList = function (dict) {
	return A3(
		elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var elm$core$Dict$keys = function (dict) {
	return A3(
		elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2(elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var elm$core$Set$toList = function (_n0) {
	var dict = _n0;
	return elm$core$Dict$keys(dict);
};
var elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var elm$core$Array$foldr = F3(
	function (func, baseCase, _n0) {
		var tree = _n0.c;
		var tail = _n0.d;
		var helper = F2(
			function (node, acc) {
				if (!node.$) {
					var subTree = node.a;
					return A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3(elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			elm$core$Elm$JsArray$foldr,
			helper,
			A3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var elm$core$Array$toList = function (array) {
	return A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);
};
var elm$core$Basics$ceiling = _Basics_ceiling;
var elm$core$Basics$fdiv = _Basics_fdiv;
var elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var elm$core$Basics$toFloat = _Basics_toFloat;
var elm$core$Array$shiftStep = elm$core$Basics$ceiling(
	A2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));
var elm$core$Elm$JsArray$empty = _JsArray_empty;
var elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);
var elm$core$Array$Leaf = function (a) {
	return {$: 1, a: a};
};
var elm$core$Array$SubTree = function (a) {
	return {$: 0, a: a};
};
var elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var elm$core$List$reverse = function (list) {
	return A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);
};
var elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);
			var node = _n0.a;
			var remainingNodes = _n0.b;
			var newAcc = A2(
				elm$core$List$cons,
				elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var elm$core$Basics$eq = _Utils_equal;
var elm$core$Tuple$first = function (_n0) {
	var x = _n0.a;
	return x;
};
var elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var elm$core$Basics$add = _Basics_add;
var elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var elm$core$Basics$floor = _Basics_floor;
var elm$core$Basics$gt = _Utils_gt;
var elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var elm$core$Basics$mul = _Basics_mul;
var elm$core$Basics$sub = _Basics_sub;
var elm$core$Elm$JsArray$length = _JsArray_length;
var elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.a) {
			return A4(
				elm$core$Array$Array_elm_builtin,
				elm$core$Elm$JsArray$length(builder.c),
				elm$core$Array$shiftStep,
				elm$core$Elm$JsArray$empty,
				builder.c);
		} else {
			var treeLen = builder.a * elm$core$Array$branchFactor;
			var depth = elm$core$Basics$floor(
				A2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;
			var tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);
			return A4(
				elm$core$Array$Array_elm_builtin,
				elm$core$Elm$JsArray$length(builder.c) + treeLen,
				A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),
				tree,
				builder.c);
		}
	});
var elm$core$Basics$False = 1;
var elm$core$Basics$idiv = _Basics_idiv;
var elm$core$Basics$lt = _Utils_lt;
var elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					elm$core$Array$builderToArray,
					false,
					{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});
			} else {
				var leaf = elm$core$Array$Leaf(
					A3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var elm$core$Basics$le = _Utils_le;
var elm$core$Basics$remainderBy = _Basics_remainderBy;
var elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return elm$core$Array$empty;
		} else {
			var tailLen = len % elm$core$Array$branchFactor;
			var tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;
			return A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var elm$core$Maybe$Just = function (a) {
	return {$: 0, a: a};
};
var elm$core$Maybe$Nothing = {$: 1};
var elm$core$Result$Err = function (a) {
	return {$: 1, a: a};
};
var elm$core$Result$Ok = function (a) {
	return {$: 0, a: a};
};
var elm$core$Basics$True = 0;
var elm$core$Result$isOk = function (result) {
	if (!result.$) {
		return true;
	} else {
		return false;
	}
};
var elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var elm$json$Json$Decode$OneOf = function (a) {
	return {$: 2, a: a};
};
var elm$core$Basics$and = _Basics_and;
var elm$core$Basics$append = _Utils_append;
var elm$core$Basics$or = _Basics_or;
var elm$core$Char$toCode = _Char_toCode;
var elm$core$Char$isLower = function (_char) {
	var code = elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var elm$core$Char$isUpper = function (_char) {
	var code = elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var elm$core$Char$isAlpha = function (_char) {
	return elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);
};
var elm$core$Char$isDigit = function (_char) {
	var code = elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var elm$core$Char$isAlphaNum = function (_char) {
	return elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));
};
var elm$core$List$length = function (xs) {
	return A3(
		elm$core$List$foldl,
		F2(
			function (_n0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var elm$core$List$map2 = _List_map2;
var elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2(elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var elm$core$List$range = F2(
	function (lo, hi) {
		return A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			elm$core$List$map2,
			f,
			A2(
				elm$core$List$range,
				0,
				elm$core$List$length(xs) - 1),
			xs);
	});
var elm$core$String$all = _String_all;
var elm$core$String$fromInt = _String_fromNumber;
var elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var elm$core$String$uncons = _String_uncons;
var elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var elm$json$Json$Decode$indent = function (str) {
	return A2(
		elm$core$String$join,
		'\n    ',
		A2(elm$core$String$split, '\n', str));
};
var elm$json$Json$Encode$encode = _Json_encode;
var elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(
			elm$json$Json$Decode$errorToString(error))));
	});
var elm$json$Json$Decode$errorToString = function (error) {
	return A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 0:
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _n1 = elm$core$String$uncons(f);
						if (_n1.$ === 1) {
							return false;
						} else {
							var _n2 = _n1.a;
							var _char = _n2.a;
							var rest = _n2.b;
							return elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2(elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 1:
					var i = error.a;
					var err = error.b;
					var indexName = '[' + (elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2(elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 2:
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									elm$core$String$join,
									'',
									elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										elm$core$String$join,
										'',
										elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(
								elm$core$List$length(errors)) + ' ways:'));
							return A2(
								elm$core$String$join,
								'\n\n',
								A2(
									elm$core$List$cons,
									introduction,
									A2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								elm$core$String$join,
								'',
								elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + (elm$json$Json$Decode$indent(
						A2(elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var elm$json$Json$Encode$string = _Json_wrap;
var author$project$Main$analytics = _Platform_outgoingPort('analytics', elm$json$Json$Encode$string);
var author$project$Class$Show$icon = function (a) {
	switch (a) {
		case 0:
			return 'AllUp';
		case 1:
			return 'ArtsQuickUp';
		case 2:
			return 'ArtsUp';
		case 3:
			return 'Avenger';
		case 4:
			return 'BeamUp';
		case 5:
			return 'BeamDown';
		case 6:
			return 'Bubbles';
		case 7:
			return 'Bullseye';
		case 8:
			return 'BusterArtsUp';
		case 9:
			return 'BusterUp';
		case 10:
			return 'Circuits';
		case 11:
			return 'DamageUp';
		case 12:
			return 'DarkMagic';
		case 13:
			return 'Dash';
		case 14:
			return 'Diamonds';
		case 15:
			return 'Dodge';
		case 16:
			return 'Eclipse';
		case 17:
			return 'ExclamationUp';
		case 18:
			return 'ExclamationDown';
		case 19:
			return 'Face';
		case 20:
			return 'Fire';
		case 21:
			return 'Flex';
		case 22:
			return 'Goddess';
		case 23:
			return 'Heal';
		case 24:
			return 'HealTurn';
		case 25:
			return 'HealUp';
		case 26:
			return 'Heart';
		case 27:
			return 'HoodUp';
		case 28:
			return 'HoodDown';
		case 29:
			return 'HoodX';
		case 30:
			return 'Horse';
		case 31:
			return 'HPUp';
		case 32:
			return 'Kneel';
		case 33:
			return 'MagicCircle';
		case 34:
			return 'Mask';
		case 35:
			return 'Missing';
		case 36:
			return 'Mystic';
		case 37:
			return 'Niffin';
		case 38:
			return 'Noble';
		case 39:
			return 'NobleRedUp';
		case 40:
			return 'NobleTurn';
		case 41:
			return 'NobleUp';
		case 42:
			return 'Potion';
		case 43:
			return 'Quartz';
		case 44:
			return 'QuickBusterUp';
		case 45:
			return 'QuickUp';
		case 46:
			return 'Rainbow';
		case 47:
			return 'ReaperUp';
		case 48:
			return 'Road';
		case 49:
			return 'Shield';
		case 50:
			return 'ShieldBreak';
		case 51:
			return 'ShieldDown';
		case 52:
			return 'ShieldUp';
		case 53:
			return 'Spotlight';
		case 54:
			return 'StaffUp';
		case 55:
			return 'Star';
		case 56:
			return 'StarHaloUp';
		case 57:
			return 'StarTurn';
		case 58:
			return 'StarUp';
		case 59:
			return 'Stun';
		case 60:
			return 'SwordDown';
		case 61:
			return 'Sun';
		case 62:
			return 'SunUp';
		case 63:
			return 'SwordUp';
		case 64:
			return 'SwordShieldUp';
		case 65:
			return 'CrosshairUp';
		case 66:
			return 'Teeth';
		default:
			return 'YinYang';
	}
};
var elm$json$Json$Encode$null = _Json_encodeNull;
var author$project$Class$ToJSON$nullable = F2(
	function (f, a) {
		if (a.$ === 1) {
			return elm$json$Json$Encode$null;
		} else {
			var x = a.a;
			return f(x);
		}
	});
var elm$core$String$fromFloat = _String_fromNumber;
var author$project$Class$Show$amount = function (a) {
	switch (a.$) {
		case 0:
			return 'X';
		case 1:
			return '';
		case 2:
			var x = a.a;
			return elm$core$String$fromFloat(x);
		default:
			var x = a.a;
			var y = a.b;
			return elm$core$String$fromFloat(x) + ('~' + elm$core$String$fromFloat(y));
	}
};
var author$project$Class$Show$bonusEffect = F3(
	function (isPerc, amt, a) {
		var n = isPerc ? (author$project$Class$Show$amount(amt) + '%') : author$project$Class$Show$amount(amt);
		var gain = function (x) {
			return 'Increase ' + (x + (' gained by ' + n));
		};
		switch (a) {
			case 0:
				return gain('Bond Points');
			case 1:
				return gain('Master EXP');
			case 2:
				return 'Friend Points obtained from support becomes +' + n;
			case 3:
				return gain('Mystic Code EXP');
			case 4:
				return 'Increase QP from completing quests by ' + n;
			default:
				return 'Increase QP from enemy drops by ' + n;
		}
	});
var author$project$Class$Show$card = function (a) {
	switch (a) {
		case 0:
			return 'Quick';
		case 1:
			return 'Arts';
		default:
			return 'Buster';
	}
};
var author$project$Database$Skill$DebuffVuln = {$: 13};
var author$project$Class$Show$nameDebuffEffect = function (a) {
	nameDebuffEffect:
	while (true) {
		switch (a.$) {
			case 0:
				return 'ApplyTrait';
			case 1:
				return 'AttackDown';
			case 2:
				return 'BuffBlock';
			case 3:
				return 'BuffFail';
			case 4:
				return 'Burn';
			case 5:
				return 'Charm';
			case 6:
				var $temp$a = author$project$Database$Skill$DebuffVuln;
				a = $temp$a;
				continue nameDebuffEffect;
			case 9:
				return 'Confusion';
			case 7:
				return 'CritChance';
			case 8:
				return 'CritDown';
			case 10:
				return 'Curse';
			case 11:
				return 'DamageVuln';
			case 12:
				return 'DeathDown';
			case 13:
				return 'DebuffVuln';
			case 14:
				return 'DefenseDown';
			case 15:
				return 'Fear';
			case 16:
				return 'HealthLoss';
			case 17:
				var $temp$a = author$project$Database$Skill$DebuffVuln;
				a = $temp$a;
				continue nameDebuffEffect;
			case 18:
				return 'NPDown';
			case 19:
				return 'Poison';
			case 20:
				return 'SealNP';
			case 21:
				return 'SealSkills';
			case 22:
				return 'StarDown';
			case 23:
				return 'Stun';
			default:
				return 'StunBomb';
		}
	}
};
var author$project$Class$Show$trait = function (a) {
	switch (a) {
		case 0:
			return 'Ally of Justice';
		case 1:
			return 'Arthur';
		case 2:
			return 'Beast';
		case 3:
			return 'Brynhild\'s Beloved';
		case 4:
			return 'Demi-servant';
		case 5:
			return 'Demon';
		case 6:
			return 'Demonic';
		case 7:
			return 'Divine';
		case 8:
			return 'Dragon';
		case 9:
			return 'Heaven or Earth';
		case 10:
			return 'Female';
		case 11:
			return 'Greek Mythology Male';
		case 12:
			return 'Humanoid';
		case 13:
			return 'Human';
		case 14:
			return 'King';
		case 15:
			return 'Male';
		case 16:
			return 'Nonbinary';
		case 17:
			return 'Pseudo-Servant';
		case 18:
			return 'Riding';
		case 19:
			return 'Roman';
		case 20:
			return 'Saberface';
		case 21:
			return 'Undead';
		default:
			return 'Weak to Enuma Elish';
	}
};
var author$project$Class$Show$possessiveAndSubject = function (a) {
	switch (a.$) {
		case 0:
			return {e: '', f: ''};
		case 1:
			return {e: ' own', f: ' self'};
		case 2:
			return {e: ' one ally\'s', f: ' one ally'};
		case 3:
			return {e: ' party\'s', f: ' party'};
		case 4:
			return {e: ' one enemy\'s', f: ' one enemy'};
		case 5:
			return {e: ' all enemy', f: ' all enemies'};
		case 6:
			return {e: ' allies\' (excluding self)', f: ' allies (excluding self)'};
		case 7:
			var t = a.a;
			return {
				e: ' ' + (author$project$Class$Show$trait(t) + ' allies\''),
				f: ' ' + (author$project$Class$Show$trait(t) + ' allies')
			};
		case 8:
			var t = a.a;
			return {
				e: ' one ' + (author$project$Class$Show$trait(t) + ' enemy\'s'),
				f: ' one ' + (author$project$Class$Show$trait(t) + ' enemy')
			};
		case 9:
			var t = a.a;
			return {
				e: ' all ' + (author$project$Class$Show$trait(t) + ' enemy'),
				f: ' all ' + (author$project$Class$Show$trait(t) + ' enemies')
			};
		case 10:
			return {e: ' killer\'s', f: ' killer'};
		default:
			return {e: ' target\'s', f: ' target'};
	}
};
var author$project$Class$Show$alignment = function (a) {
	switch (a) {
		case 0:
			return 'Lawful';
		case 1:
			return 'Neutral';
		case 2:
			return 'Chaotic';
		case 3:
			return 'Good';
		case 4:
			return 'Balanced';
		case 5:
			return 'Evil';
		case 6:
			return 'Mad';
		case 7:
			return 'Summer';
		default:
			return 'Bride';
	}
};
var author$project$Class$Show$class = function (a) {
	switch (a) {
		case 0:
			return 'Saber';
		case 1:
			return 'Archer';
		case 2:
			return 'Lancer';
		case 3:
			return 'Caster';
		case 4:
			return 'Rider';
		case 5:
			return 'Assassin';
		case 6:
			return 'Berserker';
		case 7:
			return 'Shielder';
		case 8:
			return 'Ruler';
		default:
			return 'Avenger';
	}
};
var author$project$Class$Show$special = function (a) {
	return function (s) {
		return '[' + (s + ']');
	}(
		function () {
			switch (a.$) {
				case 0:
					var x = a.a;
					return author$project$Class$Show$trait(x);
				case 1:
					var x = a.a;
					return author$project$Class$Show$class(x);
				default:
					var x = a.a;
					return author$project$Class$Show$alignment(x);
			}
		}());
};
var author$project$Class$Show$buffEffect = F3(
	function (target, amt, a) {
		var n = author$project$Class$Show$amount(amt);
		var by = ' by ' + (n + '%');
		var against = function (x) {
			return ' against [' + (x + ']');
		};
		var _n0 = author$project$Class$Show$possessiveAndSubject(target);
		var p = _n0.e;
		var s = _n0.f;
		var increase = function (x) {
			return 'Increase' + (p + (' ' + (x + by)));
		};
		var success = function (x) {
			return increase(x + ' success rate');
		};
		var grant = function (x) {
			return 'Grant' + (s + (' ' + x));
		};
		var resist = function (x) {
			if (amt.$ === 1) {
				return 'Grant' + (s + (' ' + (x + ' immunity')));
			} else {
				return 'Increase' + (p + (' ' + (x + (' resistance' + by))));
			}
		};
		var to = function () {
			if (s === '') {
				return '';
			} else {
				return ' to' + s;
			}
		}();
		switch (a.$) {
			case 0:
				return increase('attack');
			case 1:
				var c = a.a;
				return increase(
					author$project$Class$Show$card(c) + ' performance');
			case 2:
				return success('buff');
			case 3:
				return increase('critical damage');
			case 4:
				return 'Reduce' + (p + (' damage taken by ' + n));
			case 5:
				return 'Increase' + (p + (' damage by ' + n));
			case 6:
				return resist('debuff');
			case 7:
				return success('debuff');
			case 8:
				return increase('defense');
			case 9:
				return grant('Evasion');
			case 10:
				return 'Charge' + (p + (' NP gauge' + (by + ' every turn')));
			case 11:
				return 'Grant' + (s + (' Guts with ' + (n + ' HP')));
			case 12:
				return 'Grant' + (s + (' Guts with ' + (n + '% HP')));
			case 14:
				return increase('healing received');
			case 13:
				return 'Restore ' + (n + (' HP' + to));
			case 15:
				return increase('healing power');
			case 16:
				return grant('Ignore Invincibility');
			case 17:
				return grant('Invincibility');
			case 18:
				return resist('Instant-Kill');
			case 19:
				return success('Instant-Kill');
			case 20:
				return 'Increase' + (p + (' Max HP by ' + n));
			case 21:
				return resist('mental debuff');
			case 22:
				return success('mental debuff');
			case 23:
				return increase('NP Damage');
			case 24:
				return increase('NP generation rate when taking damage');
			case 25:
				return increase('NP generation rate');
			case 26:
				return resist('offensive debuff');
			case 27:
				return 'Overcharge' + (p + (' NP by ' + (n + ' stages')));
			case 28:
				var debuff = a.a;
				return resist(
					author$project$Class$Show$nameDebuffEffect(debuff));
			case 29:
				var ef = a.a;
				var x = a.b;
				return A3(author$project$Class$Show$buffEffect, target, amt, ef) + (' against ' + author$project$Class$Show$special(x));
			case 30:
				return increase('C. Star absorption');
			case 31:
				return increase('C. Star drop rate');
			case 33:
				var debuff = a.a;
				return success(
					author$project$Class$Show$nameDebuffEffect(debuff));
			case 34:
				return grant('Sure Hit');
			case 35:
				return 'Draw attention of all enemies' + to;
			default:
				return 'Gain ' + (n + (' stars every turn' + function () {
					if (target.$ === 1) {
						return ' for yourself';
					} else {
						return '';
					}
				}()));
		}
	});
var author$project$Class$Show$debuffEffect = F3(
	function (target, amt, a) {
		var n = author$project$Class$Show$amount(amt);
		var _n0 = author$project$Class$Show$possessiveAndSubject(target);
		var p = _n0.e;
		var s = _n0.f;
		var reduce = function (x) {
			return 'Reduce' + (p + (' ' + (x + (' by ' + (n + '%')))));
		};
		var unresist = function (x) {
			return reduce(x + ' resistance');
		};
		var to = function () {
			if (s === '') {
				return '';
			} else {
				return ' to' + s;
			}
		}();
		var damage = function (x) {
			return 'Inflict ' + (n + (' ' + (x + (' damage' + (to + ' every turn')))));
		};
		var eachTurn = F2(
			function (x, perTurn) {
				return 'Inflict ' + (x + (' status' + (to + (', causing ' + (n + ('% chance to ' + (perTurn + ' every turn')))))));
			});
		switch (a.$) {
			case 0:
				var t = a.a;
				return 'Apply [' + (author$project$Class$Show$trait(t) + (']' + to));
			case 1:
				return reduce('attack');
			case 2:
				return 'Inflict Buff Block status' + to;
			case 3:
				return reduce('attack buff success rate');
			case 4:
				return damage('Burn');
			case 5:
				return 'Charm' + s;
			case 6:
				return unresist('Charm');
			case 9:
				return A2(eachTurn, 'Confusion', 'Seal skills');
			case 7:
				return reduce('critical attack chance');
			case 8:
				return reduce('critical damage');
			case 10:
				return damage('Curse');
			case 11:
				return 'Increase' + (s + (' damage taken by ' + n));
			case 12:
				return unresist('Instant-Death');
			case 13:
				return unresist('debuff');
			case 14:
				return reduce('defense');
			case 15:
				return A2(eachTurn, 'Fear', 'be Stunned');
			case 16:
				return 'Decrease' + (p + (' HP by ' + (n + ' per turn')));
			case 17:
				return unresist('mental debuff');
			case 18:
				return reduce('NP Damage');
			case 19:
				return damage('Poison');
			case 20:
				return 'Seal' + (p + ' NP');
			case 21:
				return 'Seal' + (p + ' skills');
			case 22:
				return reduce('C. Star drop rate');
			case 23:
				return 'Stun' + s;
			default:
				return 'Stun' + (s + ' after 1 turn');
		}
	});
var author$project$Database$Base$Brynhild = 3;
var author$project$Database$Skill$Flat = function (a) {
	return {$: 2, a: a};
};
var author$project$Database$Skill$Full = {$: 1};
var elm$core$Basics$always = F2(
	function (a, _n0) {
		return a;
	});
var elm$core$Basics$identity = function (x) {
	return x;
};
var author$project$StandardLibrary$doIf = function (a) {
	if (a) {
		return elm$core$Basics$identity;
	} else {
		return elm$core$Basics$always(elm$core$Basics$identity);
	}
};
var elm$core$Basics$neq = _Utils_notEqual;
var elm$core$Basics$not = _Basics_not;
var author$project$Class$Show$instantEffect = F3(
	function (target, amt, a) {
		var n = author$project$Class$Show$amount(amt);
		var full = _Utils_eq(amt, author$project$Database$Skill$Full);
		var _n0 = author$project$Class$Show$possessiveAndSubject(target);
		var p = _n0.e;
		var s = _n0.f;
		var to = function () {
			if (s === '') {
				return '';
			} else {
				return ' to' + s;
			}
		}();
		switch (a.$) {
			case 0:
				return 'Apply ' + (n + (' random effect' + (((!_Utils_eq(
					amt,
					author$project$Database$Skill$Flat(1))) ? 's' : '') + ' from below:')));
			case 1:
				return 'At the end of the next turn, deal ' + (n + ('% of damage taken during that turn' + to));
			case 2:
				return 'Transform into Hyde. Class: [Berserker]. Star Weight: 9. Star Rate: 5%. NP/Hit: 1.02%. NP/Defend: 5%. Alignment: Chaotic Evil. Lose [' + (author$project$Class$Show$trait(3) + '] trait. Skills are more effective');
			case 3:
				return 'Reduce' + (p + (' cooldowns by ' + n));
			case 4:
				return 'Remove' + (p + ' poison debuffs');
			case 5:
				return 'Deal ' + (n + ('% damage' + to));
			case 6:
				return 'Deal ' + (n + ('% damage' + (to + ', ignoring defense')));
			case 7:
				var t = a.a;
				return 'Deal ' + (n + ('% extra damage to [' + (author$project$Class$Show$trait(t) + ']')));
			case 8:
				return 'Deal ' + (n + '% extra damage to [Poisoned]');
			case 9:
				return 'Remove' + (p + ' buffs');
			case 10:
				return 'Increase' + (s + (' NP gauge by ' + n));
			case 12:
				return 'Decrease' + (p + (' NP gauge by ' + (n + '%')));
			case 11:
				return 'Deal ' + (n + (' damage' + to));
			case 14:
				return 'Sacrifice' + (s + ' (can trigger Guts)');
			case 13:
				return 'Deal ' + (n + (' damage' + (to + ' down to a minimum of 1')));
			case 16:
				return 'Reduce' + (p + (' NP gauge by ' + n));
			case 17:
				return 'Costs ' + (n + ('% of' + (p + ' NP gauge to use')));
			case 18:
				return 'Increase' + (p + (' NP gauge by ' + (n + '%')));
			case 19:
				return 'Restore ' + ((full ? 'all' : n) + (' HP' + to));
			case 21:
				return 'Deal up to ' + (n + ('% damage based on missing health' + to));
			case 22:
				return 'Gain ' + (n + '% chance to apply Overcharge buffs');
			case 23:
				return 'Remove' + (p + ' buffs');
			case 24:
				return 'Remove' + (p + ' debuffs');
			case 25:
				return 'Remove' + (p + ' mental debuffs');
			case 20:
				return A3(
					author$project$StandardLibrary$doIf,
					!full,
					elm$core$Basics$append(n + '% chance to '),
					'Instant-Kill' + s);
			case 15:
				return 'Gain ' + (n + (' critical stars' + function () {
					if (target.$ === 1) {
						return ' for yourself';
					} else {
						return '';
					}
				}()));
			default:
				var x = a.a;
				return 'Deal ' + (n + ('% extra damage to ' + author$project$Class$Show$special(x)));
		}
	});
var elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var elm$core$String$trim = _String_trim;
var author$project$Class$ToJSON$target = A2(
	elm$core$Basics$composeR,
	author$project$Class$Show$possessiveAndSubject,
	A2(
		elm$core$Basics$composeR,
		function ($) {
			return $.f;
		},
		A2(elm$core$Basics$composeR, elm$core$String$trim, elm$json$Json$Encode$string)));
var elm$json$Json$Encode$float = _Json_wrap;
var elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			elm$core$List$foldl,
			F2(
				function (_n0, obj) {
					var k = _n0.a;
					var v = _n0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(0),
			pairs));
};
var author$project$Class$ToJSON$withAmount = function (a) {
	switch (a.$) {
		case 0:
			return elm$core$Basics$identity;
		case 1:
			return elm$core$Basics$identity;
		case 2:
			var x = a.a;
			return elm$core$List$cons(
				_Utils_Tuple2(
					'amount',
					elm$json$Json$Encode$float(x)));
		default:
			var x = a.a;
			var y = a.b;
			return elm$core$List$cons(
				_Utils_Tuple2(
					'amount',
					elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'from',
								elm$json$Json$Encode$float(x)),
								_Utils_Tuple2(
								'to',
								elm$json$Json$Encode$float(y))
							]))));
	}
};
var author$project$Database$Skill$Placeholder = {$: 0};
var author$project$Database$Skill$Someone = {$: 0};
var author$project$StandardLibrary$flip = F3(
	function (f, b, a) {
		return A2(f, a, b);
	});
var elm$core$String$length = _String_length;
var elm$core$String$slice = _String_slice;
var elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			elm$core$String$slice,
			n,
			elm$core$String$length(string),
			string);
	});
var elm$core$Basics$negate = function (n) {
	return -n;
};
var elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3(elm$core$String$slice, 0, -n, string);
	});
var elm$json$Json$Encode$int = _Json_wrap;
var elm_community$list_extra$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var author$project$Class$ToJSON$skillEffect = function () {
	var modEffect = F2(
		function (f, fields) {
			var _n1 = A2(
				elm_community$list_extra$List$Extra$find,
				A2(
					elm$core$Basics$composeR,
					elm$core$Tuple$first,
					elm$core$Basics$eq('effect')),
				fields);
			if (_n1.$ === 1) {
				return fields;
			} else {
				var _n2 = _n1.a;
				var effect = _n2.b;
				var f_ = A2(
					elm$core$Basics$composeR,
					elm$json$Json$Encode$encode(0),
					A2(
						elm$core$Basics$composeR,
						elm$core$String$dropLeft(1),
						A2(
							elm$core$Basics$composeR,
							elm$core$String$dropRight(1),
							A2(elm$core$Basics$composeR, f, elm$json$Json$Encode$string))));
				return _Utils_ap(
					fields,
					_List_fromArray(
						[
							_Utils_Tuple2(
							'effect',
							f_(effect))
						]));
			}
		});
	var go = function (a) {
		switch (a.$) {
			case 0:
				var targ = a.a;
				var duration = a.b;
				var effect = a.c;
				var amount = a.d;
				return A2(
					author$project$Class$ToJSON$withAmount,
					amount,
					_List_fromArray(
						[
							_Utils_Tuple2(
							'target',
							author$project$Class$ToJSON$target(targ)),
							_Utils_Tuple2(
							'duration',
							elm$json$Json$Encode$int(duration)),
							_Utils_Tuple2(
							'effect',
							elm$json$Json$Encode$string(
								A3(author$project$Class$Show$buffEffect, author$project$Database$Skill$Someone, author$project$Database$Skill$Placeholder, effect)))
						]));
			case 1:
				var targ = a.a;
				var duration = a.b;
				var effect = a.c;
				var amount = a.d;
				return A2(
					author$project$Class$ToJSON$withAmount,
					amount,
					_List_fromArray(
						[
							_Utils_Tuple2(
							'target',
							author$project$Class$ToJSON$target(targ)),
							_Utils_Tuple2(
							'duration',
							elm$json$Json$Encode$int(duration)),
							_Utils_Tuple2(
							'effect',
							elm$json$Json$Encode$string(
								A3(author$project$Class$Show$debuffEffect, author$project$Database$Skill$Someone, author$project$Database$Skill$Placeholder, effect)))
						]));
			case 2:
				var targ = a.a;
				var effect = a.b;
				var amount = a.c;
				return A2(
					author$project$Class$ToJSON$withAmount,
					amount,
					_List_fromArray(
						[
							_Utils_Tuple2(
							'target',
							author$project$Class$ToJSON$target(targ)),
							_Utils_Tuple2(
							'effect',
							elm$json$Json$Encode$string(
								A3(author$project$Class$Show$instantEffect, author$project$Database$Skill$Someone, author$project$Database$Skill$Placeholder, effect)))
						]));
			case 3:
				var effect = a.a;
				var isPerc = a.b;
				var amount = a.c;
				return A2(
					author$project$Class$ToJSON$withAmount,
					amount,
					_List_fromArray(
						[
							_Utils_Tuple2(
							'effect',
							elm$json$Json$Encode$string(
								A3(author$project$Class$Show$bonusEffect, isPerc, author$project$Database$Skill$Placeholder, effect)))
						]));
			case 4:
				var x = a.a;
				var effect = a.b;
				return _Utils_ap(
					go(effect),
					_List_fromArray(
						[
							_Utils_Tuple2(
							'chance',
							elm$json$Json$Encode$int(x))
						]));
			case 5:
				var x = a.a;
				var y = a.b;
				var effect = a.c;
				return _Utils_ap(
					go(effect),
					_List_fromArray(
						[
							_Utils_Tuple2(
							'chance',
							elm$json$Json$Encode$object(
								_List_fromArray(
									[
										_Utils_Tuple2(
										'from',
										elm$json$Json$Encode$int(x)),
										_Utils_Tuple2(
										'to',
										elm$json$Json$Encode$int(y))
									])))
						]));
			case 8:
				var x = a.a;
				var effect = a.b;
				return A2(
					modEffect,
					A2(
						author$project$StandardLibrary$flip,
						elm$core$Basics$append,
						' every turn up to ' + author$project$Class$Show$amount(x)),
					go(effect));
			case 6:
				var x = a.a;
				var effect = a.b;
				return _Utils_ap(
					go(effect),
					_List_fromArray(
						[
							_Utils_Tuple2(
							'condition',
							elm$json$Json$Encode$string(x))
						]));
			default:
				var x = a.a;
				var effect = a.b;
				return _Utils_ap(
					go(effect),
					_List_fromArray(
						[
							_Utils_Tuple2(
							'times',
							elm$json$Json$Encode$int(x))
						]));
		}
	};
	return A2(elm$core$Basics$composeR, go, elm$json$Json$Encode$object);
}();
var author$project$Class$ToJSON$stat = function (x) {
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'atk',
				elm$json$Json$Encode$int(x.a9)),
				_Utils_Tuple2(
				'hp',
				elm$json$Json$Encode$int(x.bA))
			]));
};
var elm$json$Json$Encode$bool = _Json_wrap;
var elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var author$project$Class$ToJSON$craftEssence = function (ce) {
	var stats = function (x) {
		return elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'base',
					author$project$Class$ToJSON$stat(x.bb)),
					_Utils_Tuple2(
					'max',
					author$project$Class$ToJSON$stat(x.bG))
				]));
	};
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				elm$json$Json$Encode$string(ce.bI)),
				_Utils_Tuple2(
				'id',
				elm$json$Json$Encode$int(ce.aB)),
				_Utils_Tuple2(
				'rarity',
				elm$json$Json$Encode$int(ce.aU)),
				_Utils_Tuple2(
				'icon',
				elm$json$Json$Encode$string(
					author$project$Class$Show$icon(ce.aA))),
				_Utils_Tuple2(
				'stats',
				stats(ce.a1)),
				_Utils_Tuple2(
				'effect',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$skillEffect, ce.ao)),
				_Utils_Tuple2(
				'limited',
				elm$json$Json$Encode$bool(ce.aD)),
				_Utils_Tuple2(
				'bond',
				A2(author$project$Class$ToJSON$nullable, elm$json$Json$Encode$string, ce.bd))
			]));
};
var author$project$Class$Show$attribute = function (a) {
	switch (a) {
		case 0:
			return 'Mankind';
		case 1:
			return 'Earth';
		case 2:
			return 'Heaven';
		default:
			return 'Star';
	}
};
var author$project$Class$ToJSON$hits = function (x) {
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'quick',
				elm$json$Json$Encode$int(x.bY)),
				_Utils_Tuple2(
				'arts',
				elm$json$Json$Encode$int(x.a8)),
				_Utils_Tuple2(
				'buster',
				elm$json$Json$Encode$int(x.be)),
				_Utils_Tuple2(
				'extra',
				elm$json$Json$Encode$int(x.bs))
			]));
};
var author$project$Class$Show$rank = function (a) {
	switch (a) {
		case 0:
			return '';
		case 1:
			return ' EX';
		case 2:
			return ' A+++';
		case 3:
			return ' A++';
		case 4:
			return ' A+';
		case 5:
			return ' A';
		case 6:
			return ' A-';
		case 7:
			return ' B++';
		case 8:
			return ' B+';
		case 9:
			return ' B';
		case 10:
			return ' B-';
		case 11:
			return ' C++';
		case 12:
			return ' C+';
		case 13:
			return ' C';
		case 14:
			return ' C-';
		case 15:
			return ' D+';
		case 16:
			return ' D';
		case 17:
			return ' E+';
		case 18:
			return ' E';
		default:
			return ' E-';
	}
};
var author$project$Class$ToJSON$noblePhantasm = function (x) {
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				elm$json$Json$Encode$string(x.bI)),
				_Utils_Tuple2(
				'desc',
				elm$json$Json$Encode$string(x.bp)),
				_Utils_Tuple2(
				'rank',
				elm$json$Json$Encode$string(
					author$project$Class$Show$rank(x.bZ))),
				_Utils_Tuple2(
				'card',
				elm$json$Json$Encode$string(
					author$project$Class$Show$card(x.bf))),
				_Utils_Tuple2(
				'classification',
				elm$json$Json$Encode$string(x.bE)),
				_Utils_Tuple2(
				'hits',
				elm$json$Json$Encode$int(x.ay)),
				_Utils_Tuple2(
				'effect',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$skillEffect, x.ao)),
				_Utils_Tuple2(
				'over',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$skillEffect, x.bS)),
				_Utils_Tuple2(
				'activatesFirst',
				elm$json$Json$Encode$bool(x.bu))
			]));
};
var author$project$Class$ToJSON$skill = function (x) {
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				elm$json$Json$Encode$string(x.bI)),
				_Utils_Tuple2(
				'icon',
				elm$json$Json$Encode$string(
					author$project$Class$Show$icon(x.aA))),
				_Utils_Tuple2(
				'cd',
				elm$json$Json$Encode$int(x.bg)),
				_Utils_Tuple2(
				'effect',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$skillEffect, x.ao))
			]));
};
var author$project$Database$Base$Arts = 1;
var author$project$Database$Base$Assassin = 5;
var author$project$Database$Base$Beast = 2;
var author$project$Database$Base$Berserker = 6;
var author$project$Database$Base$Buster = 2;
var author$project$Database$Base$Caster = 3;
var author$project$Database$Base$Divine = 7;
var author$project$Database$Base$Dragon = 8;
var author$project$Database$Base$Humanoid = 12;
var author$project$Database$Base$IconAllUp = 0;
var author$project$Database$Base$IconArtsQuickUp = 1;
var author$project$Database$Base$IconArtsUp = 2;
var author$project$Database$Base$IconBeamUp = 4;
var author$project$Database$Base$IconBullseye = 7;
var author$project$Database$Base$IconBusterArtsUp = 8;
var author$project$Database$Base$IconBusterUp = 9;
var author$project$Database$Base$IconCircuits = 10;
var author$project$Database$Base$IconCrosshairUp = 65;
var author$project$Database$Base$IconDamageUp = 11;
var author$project$Database$Base$IconDodge = 15;
var author$project$Database$Base$IconExclamationUp = 17;
var author$project$Database$Base$IconFire = 20;
var author$project$Database$Base$IconHPUp = 31;
var author$project$Database$Base$IconHeal = 23;
var author$project$Database$Base$IconHealTurn = 24;
var author$project$Database$Base$IconHealUp = 25;
var author$project$Database$Base$IconHeart = 26;
var author$project$Database$Base$IconHoodUp = 27;
var author$project$Database$Base$IconKneel = 32;
var author$project$Database$Base$IconNoble = 38;
var author$project$Database$Base$IconNobleRedUp = 39;
var author$project$Database$Base$IconNobleTurn = 40;
var author$project$Database$Base$IconNobleUp = 41;
var author$project$Database$Base$IconQuartz = 43;
var author$project$Database$Base$IconQuickBusterUp = 44;
var author$project$Database$Base$IconQuickUp = 45;
var author$project$Database$Base$IconRainbow = 46;
var author$project$Database$Base$IconReaperUp = 47;
var author$project$Database$Base$IconRoad = 48;
var author$project$Database$Base$IconShield = 49;
var author$project$Database$Base$IconShieldBreak = 50;
var author$project$Database$Base$IconShieldUp = 52;
var author$project$Database$Base$IconStaffUp = 54;
var author$project$Database$Base$IconStarHaloUp = 56;
var author$project$Database$Base$IconStarTurn = 57;
var author$project$Database$Base$IconStarUp = 58;
var author$project$Database$Base$IconSwordShieldUp = 64;
var author$project$Database$Base$IconSwordUp = 63;
var author$project$Database$Base$Lancer = 2;
var author$project$Database$Base$Male = 15;
var author$project$Database$Base$Quick = 0;
var author$project$Database$Base$Rider = 4;
var author$project$Database$Base$Saber = 0;
var author$project$Database$Skill$When = F2(
	function (a, b) {
		return {$: 6, a: a, b: b};
	});
var elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var author$project$Database$CraftEssence$equipped = A2(
	elm$core$Basics$composeL,
	A2(
		elm$core$Basics$composeL,
		author$project$Database$Skill$When,
		elm$core$Basics$append('equipped by a ')),
	author$project$Class$Show$class);
var author$project$Database$Skill$AttackDown = {$: 1};
var author$project$Database$Skill$AttackUp = {$: 0};
var author$project$Database$Skill$Bond = 0;
var author$project$Database$Skill$Bonus = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var author$project$Database$Skill$Burn = {$: 4};
var author$project$Database$Skill$Chance = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var author$project$Database$Skill$Charm = {$: 5};
var author$project$Database$Skill$CharmVuln = {$: 6};
var author$project$Database$Skill$CritChance = {$: 7};
var author$project$Database$Skill$CritUp = {$: 3};
var author$project$Database$Skill$Curse = {$: 10};
var author$project$Database$Skill$DamageDown = {$: 4};
var author$project$Database$Skill$DamageUp = {$: 5};
var author$project$Database$Skill$Debuff = F4(
	function (a, b, c, d) {
		return {$: 1, a: a, b: b, c: c, d: d};
	});
var author$project$Database$Skill$DebuffResist = {$: 6};
var author$project$Database$Skill$DebuffSuccess = {$: 7};
var author$project$Database$Skill$DefenseDown = {$: 14};
var author$project$Database$Skill$DefenseUp = {$: 8};
var author$project$Database$Skill$EXP = 1;
var author$project$Database$Skill$Evasion = {$: 9};
var author$project$Database$Skill$FriendPoints = 2;
var author$project$Database$Skill$GainStars = {$: 15};
var author$project$Database$Skill$GaugePerTurn = {$: 10};
var author$project$Database$Skill$GaugeUp = {$: 18};
var author$project$Database$Skill$Grant = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var author$project$Database$Skill$Guts = {$: 11};
var author$project$Database$Skill$GutsPercent = {$: 12};
var author$project$Database$Skill$Heal = {$: 19};
var author$project$Database$Skill$HealPerTurn = {$: 13};
var author$project$Database$Skill$HealUp = {$: 15};
var author$project$Database$Skill$HealingReceived = {$: 14};
var author$project$Database$Skill$HealthLoss = {$: 16};
var author$project$Database$Skill$IgnoreInvinc = {$: 16};
var author$project$Database$Skill$Invincibility = {$: 17};
var author$project$Database$Skill$Kill = {$: 20};
var author$project$Database$Skill$KillResist = {$: 18};
var author$project$Database$Skill$KillUp = {$: 19};
var author$project$Database$Skill$MaxHP = {$: 20};
var author$project$Database$Skill$MysticCode = 3;
var author$project$Database$Skill$NPFromDamage = {$: 24};
var author$project$Database$Skill$NPGen = {$: 25};
var author$project$Database$Skill$NPUp = {$: 23};
var author$project$Database$Skill$Party = {$: 3};
var author$project$Database$Skill$Performance = function (a) {
	return {$: 1, a: a};
};
var author$project$Database$Skill$QPDrop = 4;
var author$project$Database$Skill$QPQuest = 5;
var author$project$Database$Skill$Range = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var author$project$Database$Skill$RemoveDebuffs = {$: 24};
var author$project$Database$Skill$Resist = function (a) {
	return {$: 28, a: a};
};
var author$project$Database$Skill$SealNP = {$: 20};
var author$project$Database$Skill$Self = {$: 1};
var author$project$Database$Skill$Special = F2(
	function (a, b) {
		return {$: 29, a: a, b: b};
	});
var author$project$Database$Skill$StarAbsorb = {$: 30};
var author$project$Database$Skill$StarDown = {$: 22};
var author$project$Database$Skill$StarUp = {$: 31};
var author$project$Database$Skill$StarsPerTurn = {$: 32};
var author$project$Database$Skill$Stun = {$: 23};
var author$project$Database$Skill$Success = function (a) {
	return {$: 33, a: a};
};
var author$project$Database$Skill$SureHit = {$: 34};
var author$project$Database$Skill$Target = {$: 11};
var author$project$Database$Skill$Taunt = {$: 35};
var author$project$Database$Skill$Times = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var author$project$Database$Skill$To = F3(
	function (a, b, c) {
		return {$: 2, a: a, b: b, c: c};
	});
var author$project$Database$Skill$ToMax = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var author$project$Database$Skill$VsClass = function (a) {
	return {$: 1, a: a};
};
var author$project$Database$Skill$VsTrait = function (a) {
	return {$: 0, a: a};
};
var author$project$Database$CraftEssence$craftEssences = function () {
	var self = function (buff) {
		return A2(
			elm$core$Basics$composeL,
			A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, buff),
			author$project$Database$Skill$Flat);
	};
	var party = function (buff) {
		return A2(
			elm$core$Basics$composeL,
			A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, buff),
			author$project$Database$Skill$Flat);
	};
	var party_ = function (card) {
		return party(
			author$project$Database$Skill$Performance(card));
	};
	var gutsPercent = A2(
		elm$core$Basics$composeL,
		A2(
			elm$core$Basics$composeL,
			author$project$Database$Skill$Times(1),
			A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$GutsPercent)),
		author$project$Database$Skill$Flat);
	var demeritAll = function (debuff) {
		return A2(
			elm$core$Basics$composeL,
			A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Party, 0, debuff),
			author$project$Database$Skill$Flat);
	};
	var bond = F5(
		function (id, name, servant, icon, effect) {
			return {
				bd: elm$core$Maybe$Just(servant),
				ao: effect,
				aA: icon,
				aB: id,
				aD: false,
				bI: name,
				aU: 4,
				a1: {
					bb: {a9: 100, bA: 100},
					bG: {a9: 100, bA: 100}
				}
			};
		});
	var atkChance = function (chance) {
		return A2(
			elm$core$Basics$composeL,
			author$project$Database$Skill$When('attacking'),
			author$project$Database$Skill$Chance(chance));
	};
	return _List_fromArray(
		[
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 52,
			aB: 1,
			aD: false,
			bI: 'Tenacity',
			aU: 1,
			a1: {
				bb: {a9: 0, bA: 100},
				bG: {a9: 0, bA: 300}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 27,
			aB: 2,
			aD: false,
			bI: 'Meditation',
			aU: 1,
			a1: {
				bb: {a9: 0, bA: 150},
				bG: {a9: 0, bA: 450}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 2,
			aB: 3,
			aD: false,
			bI: 'Technique',
			aU: 1,
			a1: {
				bb: {a9: 100, bA: 0},
				bG: {a9: 300, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 45,
			aB: 4,
			aD: false,
			bI: 'Preemption',
			aU: 1,
			a1: {
				bb: {a9: 100, bA: 0},
				bG: {a9: 300, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 9,
			aB: 5,
			aD: false,
			bI: 'Destruction',
			aU: 1,
			a1: {
				bb: {a9: 100, bA: 0},
				bG: {a9: 300, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 17,
			aB: 6,
			aD: false,
			bI: 'Flash',
			aU: 2,
			a1: {
				bb: {a9: 150, bA: 0},
				bG: {a9: 500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 56,
			aB: 7,
			aD: false,
			bI: 'Opportunity',
			aU: 2,
			a1: {
				bb: {a9: 75, bA: 112},
				bG: {a9: 250, bA: 375}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			aA: 38,
			aB: 8,
			aD: false,
			bI: 'Fruitful',
			aU: 2,
			a1: {
				bb: {a9: 75, bA: 112},
				bG: {a9: 250, bA: 375}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 41,
			aB: 9,
			aD: false,
			bI: 'Concentration',
			aU: 2,
			a1: {
				bb: {a9: 75, bA: 112},
				bG: {a9: 250, bA: 375}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 4,
			aB: 10,
			aD: false,
			bI: 'Divine Oracle',
			aU: 2,
			a1: {
				bb: {a9: 150, bA: 0},
				bG: {a9: 500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 52,
			aB: 11,
			aD: false,
			bI: 'Azoth Blade',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 200},
				bG: {a9: 0, bA: 1000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 27,
			aB: 12,
			aD: false,
			bI: 'False Attendant\'s Writings',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 2,
			aB: 13,
			aD: false,
			bI: 'The Azure Black Keys',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 45,
			aB: 14,
			aD: false,
			bI: 'The Verdant Black Keys',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 9,
			aB: 15,
			aD: false,
			bI: 'The Crimson Black Keys',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 17,
			aB: 16,
			aD: false,
			bI: 'Rin\'s Pendant',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 56,
			aB: 17,
			aD: false,
			bI: 'Spell Tome',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 150},
				bG: {a9: 500, bA: 750}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			aA: 38,
			aB: 18,
			aD: false,
			bI: 'Dragon\'s Meridian',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 150},
				bG: {a9: 500, bA: 750}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 41,
			aB: 19,
			aD: false,
			bI: 'Sorcery Ore',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 150},
				bG: {a9: 500, bA: 750}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 4,
			aB: 20,
			aD: false,
			bI: 'Dragonkin',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 52,
			aB: 21,
			aD: false,
			bI: 'Iron-Willed Training',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 400},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 27,
			aB: 22,
			aD: false,
			bI: 'Primeval Curse',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 2,
			aB: 23,
			aD: false,
			bI: 'Projection',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 45,
			aB: 24,
			aD: false,
			bI: 'Gandr',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 9,
			aB: 25,
			aD: false,
			bI: 'Verdant Sound of Destruction',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 17,
			aB: 26,
			aD: false,
			bI: 'Gem Magecraft: Antumbra',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 56,
			aB: 27,
			aD: false,
			bI: 'Be Elegant',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 300},
				bG: {a9: 750, bA: 1125}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 60, 75))
				]),
			aA: 38,
			aB: 28,
			aD: false,
			bI: 'The Imaginary Element',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 300},
				bG: {a9: 750, bA: 1125}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 41,
			aB: 29,
			aD: false,
			bI: 'Divine Banquet',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 300},
				bG: {a9: 750, bA: 1125}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 4,
			aB: 30,
			aD: false,
			bI: 'Angel\'s Song',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 2,
			aB: 31,
			aD: false,
			bI: 'Formal Craft',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 45,
			aB: 32,
			aD: false,
			bI: 'Imaginary Around',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 9,
			aB: 33,
			aD: false,
			bI: 'Limited/Zero Over',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 80, 100))
				]),
			aA: 38,
			aB: 34,
			aD: false,
			bI: 'Kaleidoscope',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			aA: 4,
			aB: 35,
			aD: false,
			bI: 'Heaven\'s Feel',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					2,
					false,
					author$project$Database$Skill$Flat(75))
				]),
			aA: 48,
			aB: 36,
			aD: true,
			bI: 'Beginning of the Journey',
			aU: 4,
			a1: {
				bb: {a9: 50, bA: 50},
				bG: {a9: 50, bA: 50}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 15,
			aB: 37,
			aD: false,
			bI: 'Parted Sea',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 600, 800))
				]),
			aA: 58,
			aB: 38,
			aD: false,
			bI: 'Seal Designation Enforcer',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$VsTrait(15)),
					A2(author$project$Database$Skill$Range, 25, 35))
				]),
			aA: 52,
			aB: 39,
			aD: false,
			bI: 'Holy Shroud of Magdalene',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 400},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 40,
			aB: 40,
			aD: false,
			bI: 'Prisma Cosmos',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 375},
				bG: {a9: 1000, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					A2(author$project$Database$Skill$Range, 500, 1000))
				]),
			aA: 32,
			aB: 41,
			aD: true,
			bI: 'Nightless Rose',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 500},
				bG: {a9: 0, bA: 2000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 0,
			aB: 42,
			aD: false,
			bI: 'Mooncell Automaton',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Resist(author$project$Database$Skill$Charm),
					A2(author$project$Database$Skill$Range, 80, 100))
				]),
			aA: 27,
			aB: 43,
			aD: true,
			bI: 'Moony Jewel',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 500, 750))
				]),
			aA: 24,
			aB: 44,
			aD: true,
			bI: 'Moon Goddess\' Bath',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 500},
				bG: {a9: 0, bA: 2000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 56,
			aB: 45,
			aD: true,
			bI: 'Moonlight Fest',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 375},
				bG: {a9: 1000, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 100, 200))
				]),
			aA: 27,
			aB: 46,
			aD: false,
			bI: 'Runestone',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 150},
				bG: {a9: 500, bA: 750}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 7,
			aB: 47,
			aD: false,
			bI: 'With One Strike',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 60, 80)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealthLoss,
					author$project$Database$Skill$Flat(500))
				]),
			aA: 4,
			aB: 48,
			aD: false,
			bI: 'The Black Grail',
			aU: 5,
			a1: {
				bb: {a9: 600, bA: 0},
				bG: {a9: 2400, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 100, 200))
				]),
			aA: 11,
			aB: 49,
			aD: true,
			bI: 'Jack-o\'-lantern',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 10, 12))
				]),
			aA: 54,
			aB: 50,
			aD: true,
			bI: 'Trick or Treat',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 150},
				bG: {a9: 500, bA: 750}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			aA: 65,
			aB: 51,
			aD: true,
			bI: 'Halloween Arrangement',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			aA: 4,
			aB: 52,
			aD: true,
			bI: 'Halloween Princess',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 375},
				bG: {a9: 1000, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60))
				]),
			aA: 41,
			aB: 53,
			aD: true,
			bI: 'Little Halloween Devil',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 60, 75))
				]),
			aA: 25,
			aB: 54,
			aD: true,
			bI: 'Maid in Halloween',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 100, 200))
				]),
			aA: 24,
			aB: 55,
			aD: false,
			bI: 'Anchors Aweigh',
			aU: 3,
			a1: {
				bb: {a9: 300, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 25, 30)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 64,
			aB: 56,
			aD: false,
			bI: 'Code Cast',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 300},
				bG: {a9: 750, bA: 1125}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			aA: 9,
			aB: 57,
			aD: false,
			bI: 'Victor of the Moon',
			aU: 5,
			a1: {
				bb: {a9: 600, bA: 0},
				bG: {a9: 2400, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			aA: 2,
			aB: 58,
			aD: false,
			bI: 'Another Ending',
			aU: 5,
			a1: {
				bb: {a9: 600, bA: 0},
				bG: {a9: 2400, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 1, 2))
				]),
			aA: 0,
			aB: 59,
			aD: true,
			bI: 'Fate GUDAGUDA Order',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 150},
				bG: {a9: 500, bA: 750}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 44,
			aB: 60,
			aD: true,
			bI: 'After-Party Order!',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 11,
			aB: 61,
			aD: true,
			bI: 'Guda-o',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			aA: 65,
			aB: 62,
			aD: true,
			bI: 'GUDAGUDA Poster Girl',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 45,
			aB: 65,
			aD: false,
			bI: 'Demon Boar',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 40, 50)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			aA: 17,
			aB: 66,
			aD: false,
			bI: 'Knight\'s Dignity',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 300},
				bG: {a9: 750, bA: 1125}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 57,
			aB: 67,
			aD: false,
			bI: 'A Fragment of 2030',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 9,
			aB: 68,
			aD: true,
			bI: 'Lightning Reindeer',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 24,
			aB: 69,
			aD: true,
			bI: 'March of the Saint',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			aA: 58,
			aB: 70,
			aD: true,
			bI: 'Present For My Master',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 45,
			aB: 71,
			aD: true,
			bI: 'Holy Night Sign',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 375},
				bG: {a9: 1000, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 2, 3))
				]),
			aA: 40,
			aB: 72,
			aD: false,
			bI: 'Clock Tower',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(50),
						author$project$Database$Skill$Times(1)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					A2(author$project$Database$Skill$Range, 500, 1000))
				]),
			aA: 32,
			aB: 73,
			aD: false,
			bI: 'Necromancy',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2400}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(60),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$GaugePerTurn),
					A2(author$project$Database$Skill$Range, 12, 15)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealthLoss,
					author$project$Database$Skill$Flat(500))
				]),
			aA: 40,
			aB: 74,
			aD: false,
			bI: 'Awakened Will',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 300},
				bG: {a9: 750, bA: 1125}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$When,
					'defeated by an enemy',
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 2, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated by an enemy'),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 10, author$project$Database$Skill$Curse),
					A2(author$project$Database$Skill$Range, 1000, 2000))
				]),
			aA: 10,
			aB: 75,
			aD: false,
			bI: '500-Year Obsession',
			aU: 5,
			a1: {
				bb: {a9: 600, bA: 0},
				bG: {a9: 2400, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(10))
				]),
			aA: 24,
			aB: 76,
			aD: true,
			bI: 'Peacefulness of 2018',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 27,
			aB: 77,
			aD: true,
			bI: 'Heroic New Year',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					5,
					false,
					A2(author$project$Database$Skill$Range, 2017, 2018))
				]),
			aA: 43,
			aB: 78,
			aD: true,
			bI: 'Law of the Jungle',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			aA: 49,
			aB: 79,
			aD: true,
			bI: 'Grand New Year',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					4,
					true,
					A2(author$project$Database$Skill$Range, 2, 10))
				]),
			aA: 43,
			aB: 80,
			aD: true,
			bI: 'Mona Lisa',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 0, 1))
				]),
			aA: 57,
			aB: 81,
			aD: true,
			bI: 'Happy x3 Order',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 2018},
				bG: {a9: 0, bA: 2018}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$ToMax(
						A2(author$project$Database$Skill$Range, 40, 50)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					author$project$Database$Skill$Flat(5))
				]),
			aA: 4,
			aB: 82,
			aD: true,
			bI: 'Purely Bloom',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(1)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 32,
			aB: 83,
			aD: true,
			bI: 'Star of Altria',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 7,
			aB: 84,
			aD: true,
			bI: 'Trueshot',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(65),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$HealPerTurn),
					A2(author$project$Database$Skill$Range, 750, 1000))
				]),
			aA: 24,
			aB: 85,
			aD: true,
			bI: 'Mikotto! Bride Training',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$ToMax(
						A2(author$project$Database$Skill$Range, 1000, 1200)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DamageUp),
					author$project$Database$Skill$Flat(100))
				]),
			aA: 11,
			aB: 86,
			aD: true,
			bI: 'The Crimson Land of Shadows',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			aA: 4,
			aB: 89,
			aD: false,
			bI: 'Ryudoji Temple',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 160},
				bG: {a9: 500, bA: 800}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsClass(3)),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 11,
			aB: 90,
			aD: false,
			bI: 'Mana Gauge',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Success(author$project$Database$Skill$Charm),
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			aA: 26,
			aB: 91,
			aD: false,
			bI: 'Elixir of Love',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 160},
				bG: {a9: 500, bA: 800}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$CraftEssence$equipped(6),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					A2(author$project$Database$Skill$Range, 15, 25))
				]),
			aA: 4,
			aB: 92,
			aD: false,
			bI: 'Storch Ritter',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 2,
			aB: 93,
			aD: false,
			bI: 'Hermitage',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsClass(4)),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 11,
			aB: 94,
			aD: false,
			bI: 'Motored Cuirassier',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$Heal),
					A2(author$project$Database$Skill$Range, 800, 1000))
				]),
			aA: 23,
			aB: 95,
			aD: false,
			bI: 'Stuffed Lion',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Resist(author$project$Database$Skill$Stun),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 27,
			aB: 96,
			aD: false,
			bI: 'Lugh\'s Halo',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					3,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 27,
			aB: 97,
			aD: false,
			bI: 'Vessel of the Saint',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$ToMax(
						author$project$Database$Skill$Flat(3000)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$MaxHP),
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			aA: 31,
			aB: 98,
			aD: false,
			bI: 'Golden Millennium Tree',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 99,
			aD: true,
			bI: 'Heroic Portrait: Mash Kyrielight',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 100,
			aD: true,
			bI: 'Heroic Portrait: Altria Pendragon',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 101,
			aD: true,
			bI: 'Heroic Portrait: Jeanne d\'Arc',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 102,
			aD: true,
			bI: 'Heroic Portrait: Altera',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 103,
			aD: true,
			bI: 'Heroic Portrait: Arjuna',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 104,
			aD: true,
			bI: 'Heroic Portrait: Scathach',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 105,
			aD: true,
			bI: 'Heroic Portrait: Ushiwakamaru',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 106,
			aD: true,
			bI: 'Heroic Portrait: Henry Jekyll & Hyde',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 107,
			aD: true,
			bI: 'Heroic Portrait: Mephistopheles',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 46,
			aB: 108,
			aD: true,
			bI: 'Heroic Portrait: Darius III',
			aU: 4,
			a1: {
				bb: {a9: 500, bA: 500},
				bG: {a9: 500, bA: 500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CharmVuln,
					author$project$Database$Skill$Flat(10))
				]),
			aA: 7,
			aB: 109,
			aD: true,
			bI: 'Valentine Dojo of Tears',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 56,
			aB: 110,
			aD: true,
			bI: 'Kitchen ☆ Patissiere',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			aA: 1,
			aB: 111,
			aD: true,
			bI: 'Street Choco-Maid',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(3),
					A3(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						0,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$DefenseUp,
							author$project$Database$Skill$VsTrait(15))),
					author$project$Database$Skill$Flat(100)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			aA: 52,
			aB: 112,
			aD: true,
			bI: 'Melty Sweetheart',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 50,
			aB: 154,
			aD: true,
			bI: 'Decapitating Bunny 2018',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$KillResist,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			aA: 20,
			aB: 155,
			aD: true,
			bI: 'Mature Gentleman',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 38,
			aB: 156,
			aD: true,
			bI: 'Grand Puppeteer',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(3),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DamageDown),
					A2(author$project$Database$Skill$Range, 1000, 1200))
				]),
			aA: 52,
			aB: 157,
			aD: true,
			bI: 'Threefold Barrier',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 800, 1000))
				]),
			aA: 11,
			aB: 158,
			aD: true,
			bI: 'Vivid Dance of Fists',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(15))
				]),
			aA: 9,
			aB: 159,
			aD: true,
			bI: 'Mystic Eyes of Distortion',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 15,
			aB: 160,
			aD: true,
			bI: 'Summer\'s Precognition',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 300, 400)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 58,
			aB: 161,
			aD: true,
			bI: 'Chorus',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 5, 8)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 45,
			aB: 162,
			aD: true,
			bI: 'Sprinter',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 30)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 38,
			aB: 163,
			aD: true,
			bI: 'Repeat Magic',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 10, 12)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 12)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 12))
				]),
			aA: 0,
			aB: 165,
			aD: true,
			bI: 'Kiss Your Hand',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 5, 60)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 300, 400))
				]),
			aA: 38,
			aB: 166,
			aD: true,
			bI: 'Teacher and I',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(7)),
					A2(author$project$Database$Skill$Range, 80, 100)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$VsTrait(7)),
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			aA: 11,
			aB: 167,
			aD: true,
			bI: 'Versus',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 12, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 12, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			aA: 41,
			aB: 168,
			aD: true,
			bI: 'Beasts Under the Moon',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			aA: 7,
			aB: 169,
			aD: true,
			bI: 'Glass Full Sweet Time',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 15,
			aB: 170,
			aD: true,
			bI: 'Salon de Marie',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(8)),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 57,
			aB: 171,
			aD: true,
			bI: 'Prince of Slayer',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 160},
				bG: {a9: 500, bA: 800}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Success(author$project$Database$Skill$Charm),
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			aA: 17,
			aB: 172,
			aD: true,
			bI: 'Noisy Obsession',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$MaxHP,
					A2(author$project$Database$Skill$Range, 1000, 1200))
				]),
			aA: 31,
			aB: 175,
			aD: false,
			bI: 'Ideal Holy King',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 54,
			aB: 176,
			aD: false,
			bI: 'Record Holder',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$CraftEssence$equipped(2),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					A2(author$project$Database$Skill$Range, 15, 25))
				]),
			aA: 4,
			aB: 177,
			aD: false,
			bI: 'Beast of Billows',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					true,
					A2(author$project$Database$Skill$Range, 2, 10))
				]),
			aA: 48,
			aB: 178,
			aD: true,
			bI: 'Personal Training',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			aA: 38,
			aB: 179,
			aD: true,
			bI: 'The Scholars of Chaldea',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 57,
			aB: 180,
			aD: true,
			bI: 'Maiden Leading Chaldea',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$GaugeUp),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 38,
			aB: 181,
			aD: true,
			bI: 'The Merciless One',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 30, 40))
				]),
			aA: 2,
			aB: 182,
			aD: false,
			bI: 'Art of the Poisonous Snake',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(12)),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			aA: 11,
			aB: 183,
			aD: false,
			bI: 'Art of Death',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 25,
			aB: 184,
			aD: false,
			bI: 'Gentle Affection',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					3,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 200, 500))
				]),
			aA: 49,
			aB: 185,
			aD: false,
			bI: 'Volumen Hydrargyrum',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 4, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 12))
				]),
			aA: 40,
			aB: 186,
			aD: false,
			bI: 'Innocent Maiden',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Success(author$project$Database$Skill$Stun),
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			aA: 54,
			aB: 187,
			aD: false,
			bI: 'Self Geas Scroll',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 0,
			aB: 188,
			aD: false,
			bI: 'Before Awakening',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			aA: 57,
			aB: 189,
			aD: true,
			bI: 'His Rightful Place',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			A5(
			bond,
			191,
			'Crown of the Star',
			'Altria Pendragon',
			11,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			192,
			'Relic of the King',
			'Zhuge Liang (Lord El-Melloi II)',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			193,
			'Triumph of the Lord Impaler',
			'Vlad III',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$GaugeUp),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			194,
			'Revelation from Heaven',
			'Jeanne d\'Arc',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			195,
			'Memories of the Dragon',
			'Altria Pendragon (Alter)',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 3, author$project$Database$Skill$DefenseDown),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			196,
			'Hunter of the Red Plains',
			'EMIYA',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$GainStars),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			197,
			'Castle of Snow',
			'Heracles',
			32,
			_List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					3,
					A2(self, author$project$Database$Skill$Guts, 500))
				])),
			A5(
			bond,
			198,
			'Yggdrasil Tree',
			'Cu Chulainn (Caster)',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$Heal),
					author$project$Database$Skill$Flat(500))
				])),
			A5(
			bond,
			199,
			'Scorching Embrace',
			'Kiyohime',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 5, author$project$Database$Skill$Burn),
					author$project$Database$Skill$Flat(500))
				])),
			A5(
			bond,
			200,
			'Worthless Jewel',
			'Mata Hari',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			201,
			'Eternal Solitude',
			'Altera',
			63,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			202,
			'Queen\'s Present',
			'Chevalier d\'Eon',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			203,
			'Elixir',
			'Elisabeth Bathory',
			24,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealPerTurn, 500)
				])),
			A5(
			bond,
			204,
			'My Necklace',
			'Marie Antoinette',
			56,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			205,
			'Staff He Gave Me',
			'Martha',
			25,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealingReceived, 30)
				])),
			A5(
			bond,
			206,
			'Iron Maiden',
			'Carmilla',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A2(
					atkChance,
					10,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
				])),
			A5(
			bond,
			207,
			'Cat Apron',
			'Tamamo Cat',
			23,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$MaxHP, 2000)
				])),
			A5(
			bond,
			208,
			'Thirst for Victory',
			'Boudica',
			56,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			209,
			'To My Dear Friend',
			'Hans Christian Andersen',
			27,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$DebuffResist, 30)
				])),
			A5(
			bond,
			210,
			'Sacred Devotion',
			'Arash',
			23,
			_List_fromArray(
				[
					A2(
					author$project$Database$Skill$When,
					'defeated',
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)),
					A2(
					author$project$Database$Skill$When,
					'defeated',
					A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						author$project$Database$Skill$Flat(5000)))
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A3(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(0)),
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			aA: 45,
			aB: 211,
			aD: true,
			bI: 'The Wandering Tales of Shana-oh',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 38,
			aB: 212,
			aD: true,
			bI: 'Golden Captures the Carp',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 41,
			aB: 213,
			aD: true,
			bI: 'A Fox Night\'s Dream',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(15)),
					A2(author$project$Database$Skill$Range, 25, 30)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			aA: 11,
			aB: 214,
			aD: true,
			bI: 'Burning Tale of Love',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full))
				]),
			aA: 27,
			aB: 215,
			aD: true,
			bI: 'Reciting the Subscription List',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			A5(
			bond,
			216,
			'Key of the King\'s Law',
			'Gilgamesh',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			217,
			'Golden Glass',
			'Sakata Kintoki',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$GaugeUp),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			218,
			'Thunderous Applause',
			'Nero Claudius',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			219,
			'Das Rheingold',
			'Siegfried',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			220,
			'Radiance of the Goddess',
			'Stheno',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			221,
			'Voyage of the Flowers',
			'Altria Pendragon (Lily)',
			63,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 10),
					A2(party, author$project$Database$Skill$StarUp, 10)
				])),
			A5(
			bond,
			222,
			'Ark of the Covenant',
			'David',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A2(
					atkChance,
					10,
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Target, author$project$Database$Skill$Kill, author$project$Database$Skill$Full))
				])),
			A5(
			bond,
			223,
			'Door to Babylon',
			'Darius III',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			224,
			'Blood-Thirsting Axe',
			'Eric Bloodaxe',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			225,
			'Insurrection',
			'Spartacus',
			32,
			_List_fromArray(
				[
					gutsPercent(50)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 4,
			aB: 226,
			aD: true,
			bI: 'Go West!!',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 25, 40))
				]),
			aA: 4,
			aB: 227,
			aD: true,
			bI: 'The Classic Three Great Heroes',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 4,
			aB: 228,
			aD: true,
			bI: 'True Samadhi Fire',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 58,
			aB: 229,
			aD: true,
			bI: 'All Three Together',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			A5(
			bond,
			230,
			'Tristar Belt',
			'Orion',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			231,
			'Golden Helm',
			'Francis Drake',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			232,
			'Black Knight\'s Helmet',
			'Lancelot',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 3, author$project$Database$Skill$CritChance),
					author$project$Database$Skill$Flat(30))
				])),
			A5(
			bond,
			233,
			'Golden Apple',
			'Atalante',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			234,
			'Holy Pumpkin Grail',
			'Elisabeth Bathory (Halloween)',
			27,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$DebuffResist, 30)
				])),
			A5(
			bond,
			235,
			'Rotary Matchlock',
			'Oda Nobunaga',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			236,
			'Llamrei Unit II',
			'Altria Pendragon (Santa Alter)',
			56,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			237,
			'Things to Calm the Heart',
			'Henry Jekyll & Hyde',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			238,
			'Glory of the Past Days',
			'Edward Teach',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			239,
			'Heaven Among the Mountains',
			'Sasaki Kojirou',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$DefenseUp),
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			aA: 52,
			aB: 240,
			aD: true,
			bI: 'Divine Princess of the Storm',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 9,
			aB: 241,
			aD: true,
			bI: 'Ox-Demon King',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					3,
					true,
					author$project$Database$Skill$Flat(2))
				]),
			aA: 48,
			aB: 242,
			aD: true,
			bI: 'Personal Lesson',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 63,
			aB: 243,
			aD: false,
			bI: 'Bronze-Link Manipulator',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				]),
			aA: 45,
			aB: 244,
			aD: false,
			bI: 'Ath nGabla',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 160},
				bG: {a9: 500, bA: 800}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$CraftEssence$equipped(5),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					A2(author$project$Database$Skill$Range, 15, 25))
				]),
			aA: 4,
			aB: 245,
			aD: false,
			bI: 'Bygone Dream',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			aA: 25,
			aB: 246,
			aD: false,
			bI: 'Extremely Spicy Mapo Tofu',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 25, 40))
				]),
			aA: 41,
			aB: 247,
			aD: false,
			bI: 'Jeweled Sword Zelretch',
			aU: 3,
			a1: {
				bb: {a9: 100, bA: 160},
				bG: {a9: 500, bA: 800}
			}
		},
			A5(
			bond,
			248,
			'Tamamo\'s Club',
			'Tamamo-no-Mae',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			249,
			'Headband of Resolve',
			'Okita Souji',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			250,
			'Calico Jack',
			'Anne Bonny & Mary Read',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			251,
			'Gazing Upon Dun Scaith',
			'Scathach',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			252,
			'Star of Prophecy',
			'Cu Chulainn',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			253,
			'Hekate\'s Staff',
			'Medea',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			254,
			'Formless Island',
			'Medusa',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			255,
			'Cask of the Wise',
			'Alexander',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			256,
			'Shaytan\'s Arm',
			'Hassan of the Cursed Arm',
			47,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$KillUp, 20)
				])),
			A5(
			bond,
			257,
			'Ariadne\'s Thread',
			'Asterios',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 45,
			aB: 258,
			aD: true,
			bI: 'Dumplings Over Flowers',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 2,
			aB: 259,
			aD: true,
			bI: 'Faithful Companions',
			aU: 4,
			a1: {
				bb: {a9: 0, bA: 600},
				bG: {a9: 0, bA: 2250}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 45,
			aB: 260,
			aD: true,
			bI: 'Hidden Sword: Pheasant Reversal',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			aA: 63,
			aB: 261,
			aD: true,
			bI: 'Golden Sumo: Boulder Tournament',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 17,
			aB: 262,
			aD: true,
			bI: 'Hot Spring Under the Moon',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsClass(3)),
					A2(author$project$Database$Skill$Range, 35, 40))
				]),
			aA: 50,
			aB: 263,
			aD: false,
			bI: 'Origin Bullet',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 11,
			aB: 264,
			aD: false,
			bI: 'Covering Fire',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$GaugeUp),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 38,
			aB: 265,
			aD: false,
			bI: 'Battle of Camlann',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			A5(
			bond,
			266,
			'Who Am I?',
			'Mordred',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			267,
			'The Misty Night of London',
			'Jack the Ripper',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			268,
			'Wonderland',
			'Nursery Rhyme',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 15),
					A2(party, author$project$Database$Skill$HealingReceived, 10)
				])),
			A5(
			bond,
			269,
			'Faceless King',
			'Robin Hood',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			270,
			'Usumidori',
			'Ushiwakamaru',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			271,
			'Etiquette of Nine Guests',
			'Jing Ke',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$KillUp),
					author$project$Database$Skill$Flat(30))
				])),
			A5(
			bond,
			272,
			'Heaven Scorcher Halberd',
			'Lu Bu Fengxian',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			273,
			'What can be Left Behind',
			'Georgios',
			49,
			_List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					author$project$Database$Skill$Times(1),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$DamageDown),
					author$project$Database$Skill$Flat(1000))
				])),
			A5(
			bond,
			274,
			'Thermopylae',
			'Leonidas I',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			275,
			'Haydn Quartets',
			'Wolfgang Amadeus Mozart',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackUp,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					author$project$Database$Skill$Flat(3))
				]),
			aA: 63,
			aB: 276,
			aD: true,
			bI: 'Anniversary Heroines',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			aA: 58,
			aB: 277,
			aD: true,
			bI: 'Leisure Stroll',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60))
				]),
			aA: 9,
			aB: 278,
			aD: true,
			bI: 'Partake with the King',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 7,
			aB: 279,
			aD: true,
			bI: 'Goldfish Scooping',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 56,
			aB: 280,
			aD: true,
			bI: 'Fire Flower',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			A5(
			bond,
			281,
			'Arm of Raiden',
			'Nikola Tesla',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			282,
			'Endowed Hero',
			'Arjuna',
			4,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					A2(self, author$project$Database$Skill$StarAbsorb, 1000)
				])),
			A5(
			bond,
			283,
			'Lamp of the Unfortunate',
			'Karna',
			0,
			_List_fromArray(
				[
					A2(party_, 0, 8),
					A2(party_, 1, 8),
					A2(party_, 2, 8)
				])),
			A5(
			bond,
			284,
			'Procedure to Humanity',
			'Frankenstein',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			285,
			'Black Helmet',
			'Altria Pendragon (Lancer Alter)',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			286,
			'Legend of the Gallic War',
			'Gaius Julius Caesar',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			287,
			'Rome',
			'Romulus',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			288,
			'Encounter at Gojou Bridge',
			'Musashibou Benkei',
			39,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPFromDamage, 20)
				])),
			A5(
			bond,
			289,
			'Impure Death Mask',
			'Phantom of the Opera',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			290,
			'Really Convenient',
			'William Shakespeare',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 50,
			aB: 291,
			aD: true,
			bI: 'Pirates Party!',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			aA: 17,
			aB: 292,
			aD: true,
			bI: 'Summertime Mistress',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 45,
			aB: 293,
			aD: true,
			bI: 'Twilight Memory',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 2,
			aB: 294,
			aD: true,
			bI: 'Shiny Goddess',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60))
				]),
			aA: 45,
			aB: 295,
			aD: true,
			bI: 'Knights of Marines',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(1)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 32,
			aB: 296,
			aD: true,
			bI: 'Chaldea Lifesavers',
			aU: 5,
			a1: {
				bb: {a9: 0, bA: 750},
				bG: {a9: 0, bA: 3000}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 24,
			aB: 297,
			aD: true,
			bI: 'Meat Wars',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 52,
			aB: 298,
			aD: true,
			bI: 'Shaved Ice (Void\'s Dust Flavor)',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			A5(
			bond,
			299,
			'Annihilation List',
			'Mysterious Heroine X',
			11,
			_List_fromArray(
				[
					A2(
					party,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsClass(0)),
					20)
				])),
			A5(
			bond,
			300,
			'Imperishable Flames',
			'Brynhild',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 10),
					A2(party, author$project$Database$Skill$NPGen, 10)
				])),
			A5(
			bond,
			301,
			'Ring of Bay Laurel',
			'Nero Claudius (Bride)',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			302,
			'Final Battle',
			'Beowulf',
			11,
			_List_fromArray(
				[
					A2(
					party,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(8)),
					20)
				])),
			A5(
			bond,
			303,
			'Bratan of Wisdom',
			'Fionn mac Cumhaill',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			304,
			'Prelati\'s Spellbook',
			'Gilles de Rais',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DebuffVuln, 20)
				])),
			A5(
			bond,
			305,
			'Parasitic Bomb',
			'Mephistopheles',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			306,
			'Seethe of a Warrior',
			'Fergus mac Roich',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			307,
			'My Loathsome Life',
			'Charles-Henri Sanson',
			47,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$KillUp, 10),
					A2(party, author$project$Database$Skill$NPGen, 10)
				])),
			A5(
			bond,
			308,
			'There is No Love Here',
			'Caligula',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 25, 30)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			aA: 41,
			aB: 309,
			aD: true,
			bI: 'Magical Girl of Sapphire',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 2,
			aB: 310,
			aD: true,
			bI: 'Kill on Sight',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 52,
			aB: 311,
			aD: true,
			bI: 'Zunga Zunga!',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 9,
			aB: 312,
			aD: true,
			bI: 'Kaleid Ruby',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			aA: 2,
			aB: 313,
			aD: true,
			bI: 'Kaleid Sapphire',
			aU: 4,
			a1: {
				bb: {a9: 400, bA: 0},
				bG: {a9: 1500, bA: 0}
			}
		},
			A5(
			bond,
			315,
			'Mugashiki—Shinkuu Myou',
			'Ryougi Shiki (Saber)',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			317,
			'Château d\'If',
			'Edmond Dantes',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			318,
			'Unlimited Pancakes',
			'Medea (Lily)',
			25,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealingReceived, 30)
				])),
			A5(
			bond,
			319,
			'Red Leather Jacket',
			'Ryougi Shiki (Assassin)',
			47,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$KillUp, 30)
				])),
			A5(
			bond,
			321,
			'Letter From a Friend',
			'Gilles de Rais (Caster)',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$StarDown, 20)
				])),
			A5(
			bond,
			322,
			'Hound of Culann',
			'Cu Chulainn (Prototype)',
			11,
			_List_fromArray(
				[
					A2(
					party,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(2)),
					20)
				])),
			A5(
			bond,
			323,
			'Radiance of the Goddess (Euryale)',
			'Euryale',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			324,
			'Hero\'s Armament',
			'Hektor',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 4,
			aB: 325,
			aD: true,
			bI: 'Glory Is With Me',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 52,
			aB: 326,
			aD: true,
			bI: 'Original Legion',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffVuln,
					author$project$Database$Skill$Flat(20))
				]),
			aA: 9,
			aB: 327,
			aD: true,
			bI: 'Howl at the Moon',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(1)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			aA: 32,
			aB: 328,
			aD: true,
			bI: 'Princess of the White Rose',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			aA: 9,
			aB: 329,
			aD: true,
			bI: 'Joint Recital',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					0,
					true,
					A2(author$project$Database$Skill$Range, 2, 10))
				]),
			aA: 46,
			aB: 330,
			aD: true,
			bI: 'Chaldea Lunchtime',
			aU: 5,
			a1: {
				bb: {a9: 250, bA: 400},
				bG: {a9: 1000, bA: 1600}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			aA: 58,
			aB: 331,
			aD: true,
			bI: 'Fragarach',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 57,
			aB: 332,
			aD: true,
			bI: 'Inverted Moon of the Heavens',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$KillUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 47,
			aB: 333,
			aD: true,
			bI: 'Hydra Dagger',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			A5(
			bond,
			334,
			'Indomitableness',
			'Florence Nightingale',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 10),
					A2(party, author$project$Database$Skill$HealingReceived, 20)
				])),
			A5(
			bond,
			335,
			'One-Man War',
			'Cu Chulainn (Alter)',
			32,
			_List_fromArray(
				[
					A2(self, author$project$Database$Skill$NPUp, 30),
					gutsPercent(20)
				])),
			A5(
			bond,
			336,
			'Sacred Spring',
			'Queen Medb',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			337,
			'Indestructible Blade',
			'Rama',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			338,
			'Concealed Goddess',
			'Helena Blavatsky',
			11,
			_List_fromArray(
				[
					A2(
					party,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsClass(5)),
					20)
				])),
			A5(
			bond,
			339,
			'Lights of Civilization',
			'Thomas Edison',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			340,
			'Reaching the Zenith of My Skill',
			'Li Shuwen',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 15)
				])),
			A5(
			bond,
			341,
			'Knight\'s Oath',
			'Diarmuid Ua Duibhne',
			2,
			_List_fromArray(
				[
					A2(party_, 0, 10),
					A2(party_, 1, 10)
				])),
			A5(
			bond,
			342,
			'Elemental',
			'Paracelsus von Hohenheim',
			2,
			_List_fromArray(
				[
					A2(party_, 1, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			343,
			'NEO Difference Engine',
			'Charles Babbage',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			aA: 45,
			aB: 344,
			aD: true,
			bI: 'Dangerous Beast',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 2,
			aB: 345,
			aD: true,
			bI: 'Witch Under the Moonlight',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			aA: 41,
			aB: 346,
			aD: true,
			bI: 'Count Romani Archaman\'s Hospitality',
			aU: 3,
			a1: {
				bb: {a9: 0, bA: 300},
				bG: {a9: 0, bA: 1500}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			aA: 9,
			aB: 347,
			aD: true,
			bI: 'Hero Elly\'s Adventure',
			aU: 5,
			a1: {
				bb: {a9: 500, bA: 0},
				bG: {a9: 2000, bA: 0}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			aA: 4,
			aB: 348,
			aD: true,
			bI: 'Wizard & Priest',
			aU: 4,
			a1: {
				bb: {a9: 200, bA: 320},
				bG: {a9: 750, bA: 1200}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(1),
					A2(author$project$Database$Skill$Range, 2, 3)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 2, 3)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 2, 3)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			aA: 0,
			aB: 349,
			aD: true,
			bI: 'Mata Hari\'s Tavern',
			aU: 3,
			a1: {
				bb: {a9: 200, bA: 0},
				bG: {a9: 1000, bA: 0}
			}
		},
			A5(
			bond,
			350,
			'Hell of Blazing Punishment',
			'Jeanne d\'Arc (Alter)',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			351,
			'Gordian Knot',
			'Iskandar',
			63,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			352,
			'Bai Long',
			'Xuanzang Sanzang',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			A5(
			bond,
			353,
			'The Sun Shines Here',
			'Emiya (Assassin)',
			1,
			_List_fromArray(
				[
					A2(party_, 0, 10),
					A2(party_, 1, 10)
				])),
			A5(
			bond,
			354,
			'Dress of Heaven',
			'Irisviel (Dress of Heaven)',
			25,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealingReceived, 30)
				])),
			A5(
			bond,
			355,
			'Manifestation of The Golden Rule',
			'Gilgamesh (Child)',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			356,
			'Spirit of The Vast Land',
			'Geronimo',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			357,
			'Extolling The Revolver',
			'Billy the Kid',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			358,
			'Library of Hundred Men',
			'Hassan of the Hundred Personas',
			0,
			_List_fromArray(
				[
					A2(party_, 2, 8),
					A2(party_, 0, 8),
					A2(party_, 1, 8)
				])),
			A5(
			bond,
			359,
			'Last Splinter',
			'Angra Mainyu',
			11,
			_List_fromArray(
				[
					A2(
					self,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(2)),
					200),
					gutsPercent(20)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					author$project$Database$Skill$Flat(15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					author$project$Database$Skill$Flat(3))
				]),
			aA: 17,
			aB: 360,
			aD: true,
			bI: 'Fate/EXTELLA',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 361,
			aD: true,
			bI: 'Spiritron Portrait: Nero Claudius',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 362,
			aD: true,
			bI: 'Spiritron Portrait: Nameless',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 363,
			aD: true,
			bI: 'Spiritron Portrait: Tamamo-no-Mae',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 364,
			aD: true,
			bI: 'Spiritron Portrait: Karna',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 365,
			aD: true,
			bI: 'Spiritron Portrait: Altera',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					1,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 366,
			aD: true,
			bI: 'Spiritron Portrait: Gilgamesh',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		},
			A5(
			bond,
			367,
			'Divine Oni-Poison Sake',
			'Shuten-Douji',
			1,
			_List_fromArray(
				[
					A2(party_, 0, 10),
					A2(party_, 1, 10)
				])),
			A5(
			bond,
			368,
			'Doujigiri Yasutsuna',
			'Minamoto-no-Raikou',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 10),
					A2(party, author$project$Database$Skill$CritUp, 15)
				])),
			A5(
			bond,
			369,
			'Ramesseum',
			'Ozymandias',
			8,
			_List_fromArray(
				[
					A2(party_, 1, 10),
					A2(party_, 2, 10)
				])),
			A5(
			bond,
			370,
			'Bone Sword (Nameless)',
			'Ibaraki-Douji',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			A5(
			bond,
			371,
			'Unit Golden Bear',
			'Sakata Kintoki (Rider)',
			56,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			372,
			'Gringolet',
			'Gawain',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			373,
			'But I Lied Once',
			'Tristan',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			374,
			'Exercising the Royal Authority',
			'Nitocris',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			375,
			'Mask of A Demon',
			'Fuuma \"Evil-wind\" Kotarou',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			376,
			'Cook Despite of Exhaustion',
			'Tawara Touta',
			24,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealPerTurn, 500)
				])),
			A5(
			bond,
			377,
			'Dun Stallion',
			'Altria Pendragon (Lancer)',
			63,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			378,
			'All-Encompassing Wisdom',
			'Leonardo da Vinci',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			379,
			'Sunset Beach',
			'Tamamo-no-Mae (Lancer)',
			44,
			_List_fromArray(
				[
					A2(party_, 0, 10),
					A2(party_, 2, 10)
				])),
			A5(
			bond,
			380,
			'Lady of the Lake',
			'Lancelot (Saber)',
			41,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 10),
					A2(party, author$project$Database$Skill$CritUp, 10)
				])),
			A5(
			bond,
			381,
			'Reminiscence of the Summer',
			'Marie Antoinette (Caster)',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			382,
			'Currently In The Middle Of A Shower',
			'Anne Bonny & Mary Read (Archer)',
			8,
			_List_fromArray(
				[
					A2(party_, 2, 10),
					A2(party_, 1, 10)
				])),
			A5(
			bond,
			383,
			'Prydwen',
			'Mordred (Rider)',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			384,
			'Beach Love Letter (Terror)',
			'Kiyohime (Lancer)',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			A5(
			bond,
			385,
			'My Long Lost Right Arm',
			'Bedivere',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 10),
					A2(party, author$project$Database$Skill$NPGen, 10)
				])),
			A5(
			bond,
			386,
			'Proof of Existence',
			'Hassan of the Serenity',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			391,
			'Champion Cup',
			'Altria Pendragon (Archer)',
			63,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			392,
			'Phantasmal Summoning (Install)',
			'Illyasviel von Einzbern',
			0,
			_List_fromArray(
				[
					A2(party_, 2, 8),
					A2(party_, 0, 8),
					A2(party_, 1, 8)
				])),
			A5(
			bond,
			393,
			'Serpent of Fate',
			'Cleopatra',
			4,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 25),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			A5(
			bond,
			394,
			'Holy Knuckle',
			'Martha (Ruler)',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 15)
				])),
			A5(
			bond,
			395,
			'Minimal Prudence',
			'Scathach (Assassin)',
			45,
			_List_fromArray(
				[
					A2(party_, 0, 15)
				])),
			A5(
			bond,
			396,
			'Sharing of Pain',
			'Chloe von Einzbern',
			17,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 30),
					A2(demeritAll, author$project$Database$Skill$HealthLoss, 200)
				])),
			A5(
			bond,
			397,
			'Creed at the Bottom of the Earth',
			'Vlad III (EXTRA)',
			44,
			_List_fromArray(
				[
					A2(party_, 0, 10),
					A2(party_, 2, 10)
				])),
			A5(
			bond,
			398,
			'Invitation to Halloween',
			'Elisabeth Bathory (Brave)',
			9,
			_List_fromArray(
				[
					A2(party_, 2, 20),
					A2(demeritAll, author$project$Database$Skill$DefenseDown, 10)
				])),
			{
			bd: elm$core$Maybe$Nothing,
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					3,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			aA: 48,
			aB: 399,
			aD: true,
			bI: 'First Order',
			aU: 4,
			a1: {
				bb: {a9: 100, bA: 100},
				bG: {a9: 100, bA: 100}
			}
		}
		]);
}();
var elm$core$Dict$RBEmpty_elm_builtin = {$: -2};
var elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;
var elm$core$Dict$Black = 1;
var elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: -1, a: a, b: b, c: c, d: d, e: e};
	});
var elm$core$Basics$compare = _Utils_compare;
var elm$core$Dict$Red = 0;
var elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === -1) && (!right.a)) {
			var _n1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === -1) && (!left.a)) {
				var _n3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					0,
					key,
					value,
					A5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),
					A5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));
			} else {
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {
				var _n5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _n6 = left.d;
				var _n7 = _n6.a;
				var llK = _n6.b;
				var llV = _n6.c;
				var llLeft = _n6.d;
				var llRight = _n6.e;
				var lRight = left.e;
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					0,
					lK,
					lV,
					A5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
					A5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));
			} else {
				return A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === -2) {
			return A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _n1 = A2(elm$core$Basics$compare, key, nKey);
			switch (_n1) {
				case 0:
					return A5(
						elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3(elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 1:
					return A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3(elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);
		if ((_n0.$ === -1) && (!_n0.a)) {
			var _n1 = _n0.a;
			var k = _n0.b;
			var v = _n0.c;
			var l = _n0.d;
			var r = _n0.e;
			return A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _n0;
			return x;
		}
	});
var elm$core$Dict$fromList = function (assocs) {
	return A3(
		elm$core$List$foldl,
		F2(
			function (_n0, dict) {
				var key = _n0.a;
				var value = _n0.b;
				return A3(elm$core$Dict$insert, key, value, dict);
			}),
		elm$core$Dict$empty,
		assocs);
};
var elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							elm$core$List$foldl,
							fn,
							acc,
							elm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4(elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var elm_community$maybe_extra$Maybe$Extra$foldrValues = F2(
	function (item, list) {
		if (item.$ === 1) {
			return list;
		} else {
			var v = item.a;
			return A2(elm$core$List$cons, v, list);
		}
	});
var elm_community$maybe_extra$Maybe$Extra$values = A2(elm$core$List$foldr, elm_community$maybe_extra$Maybe$Extra$foldrValues, _List_Nil);
var author$project$Database$CraftEssence$bondMap = function () {
	var go = function (ce) {
		var _n0 = ce.bd;
		if (_n0.$ === 1) {
			return elm$core$Maybe$Nothing;
		} else {
			var bond = _n0.a;
			return elm$core$Maybe$Just(
				_Utils_Tuple2(bond, ce));
		}
	};
	return A3(
		elm$core$Basics$composeR,
		elm$core$List$map(go),
		A2(elm$core$Basics$composeR, elm_community$maybe_extra$Maybe$Extra$values, elm$core$Dict$fromList),
		author$project$Database$CraftEssence$craftEssences);
}();
var elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === -2) {
				return elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _n1 = A2(elm$core$Basics$compare, targetKey, key);
				switch (_n1) {
					case 0:
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 1:
						return elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var author$project$Database$CraftEssence$getBond = function (s) {
	return A2(elm$core$Dict$get, s.bI, author$project$Database$CraftEssence$bondMap);
};
var author$project$Database$Servant$getDeck = function (_n0) {
	var deck = _n0.bo;
	var _n1 = deck;
	var a = _n1.a;
	var b = _n1.b;
	var c = _n1.c;
	var d = _n1.d;
	var e = _n1.e;
	return _List_fromArray(
		[a, b, c, d, e]);
};
var author$project$Class$ToJSON$servant = function (s) {
	var stats = function (x) {
		return elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'base',
					author$project$Class$ToJSON$stat(x.bb)),
					_Utils_Tuple2(
					'max',
					author$project$Class$ToJSON$stat(x.bG)),
					_Utils_Tuple2(
					'grail',
					author$project$Class$ToJSON$stat(x.bx))
				]));
	};
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				elm$json$Json$Encode$string(s.bI)),
				_Utils_Tuple2(
				'id',
				elm$json$Json$Encode$int(s.aB)),
				_Utils_Tuple2(
				'rarity',
				elm$json$Json$Encode$int(s.aU)),
				_Utils_Tuple2(
				'class',
				elm$json$Json$Encode$string(
					author$project$Class$Show$class(s.bi))),
				_Utils_Tuple2(
				'attribute',
				elm$json$Json$Encode$string(
					author$project$Class$Show$attribute(s.ba))),
				_Utils_Tuple2(
				'deck',
				A2(
					elm$json$Json$Encode$list,
					A2(elm$core$Basics$composeL, elm$json$Json$Encode$string, author$project$Class$Show$card),
					author$project$Database$Servant$getDeck(s))),
				_Utils_Tuple2(
				'curve',
				elm$json$Json$Encode$int(s.bk)),
				_Utils_Tuple2(
				'stats',
				stats(s.a1)),
				_Utils_Tuple2(
				'skills',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$skill, s.b0)),
				_Utils_Tuple2(
				'passives',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$skill, s.bT)),
				_Utils_Tuple2(
				'noblePhantasm',
				author$project$Class$ToJSON$noblePhantasm(s.T)),
				_Utils_Tuple2(
				'starWeight',
				elm$json$Json$Encode$int(s.S.b2)),
				_Utils_Tuple2(
				'starRate',
				elm$json$Json$Encode$float(s.S.b1)),
				_Utils_Tuple2(
				'npAtk',
				elm$json$Json$Encode$float(s.S.bM)),
				_Utils_Tuple2(
				'npDef',
				elm$json$Json$Encode$int(s.S.bN)),
				_Utils_Tuple2(
				'hits',
				author$project$Class$ToJSON$hits(s.ay)),
				_Utils_Tuple2(
				'traits',
				A2(
					elm$json$Json$Encode$list,
					A2(elm$core$Basics$composeR, author$project$Class$Show$trait, elm$json$Json$Encode$string),
					s.ca)),
				_Utils_Tuple2(
				'deathRate',
				elm$json$Json$Encode$float(s.bm)),
				_Utils_Tuple2(
				'alignment',
				A2(
					elm$json$Json$Encode$list,
					A2(elm$core$Basics$composeR, author$project$Class$Show$alignment, elm$json$Json$Encode$string),
					s.a6)),
				_Utils_Tuple2(
				'limited',
				elm$json$Json$Encode$bool(s.aD)),
				_Utils_Tuple2(
				'free',
				elm$json$Json$Encode$bool(s.bw)),
				_Utils_Tuple2(
				'bond',
				A2(
					author$project$Class$ToJSON$nullable,
					author$project$Class$ToJSON$craftEssence,
					author$project$Database$CraftEssence$getBond(s)))
			]));
};
var author$project$Database$Base$HeavenOrEarth = 9;
var author$project$Database$Base$Archer = 1;
var author$project$Database$Base$Arthur = 1;
var author$project$Database$Base$Balanced = 4;
var author$project$Database$Base$BlackBeastGrease = {$: 7};
var author$project$Database$Base$Chaotic = 2;
var author$project$Database$Base$ClawOfChaos = {$: 8};
var author$project$Database$Base$Demonic = 6;
var author$project$Database$Base$DragonFang = {$: 9};
var author$project$Database$Base$DragonsReverseScale = {$: 10};
var author$project$Database$Base$Earth = 1;
var author$project$Database$Base$EnumaElish = 22;
var author$project$Database$Base$EternalGear = {$: 11};
var author$project$Database$Base$Evil = 5;
var author$project$Database$Base$EvilBone = {$: 12};
var author$project$Database$Base$Female = 10;
var author$project$Database$Base$FoolsChain = {$: 13};
var author$project$Database$Base$ForbiddenPage = {$: 14};
var author$project$Database$Base$GemOf = function (a) {
	return {$: 3, a: a};
};
var author$project$Database$Base$GhostLantern = {$: 15};
var author$project$Database$Base$Good = 3;
var author$project$Database$Base$GreatKnightMedal = {$: 16};
var author$project$Database$Base$GreekMythMale = 11;
var author$project$Database$Base$HeartOfTheForeignGod = {$: 17};
var author$project$Database$Base$Heaven = 2;
var author$project$Database$Base$HomunculusBaby = {$: 18};
var author$project$Database$Base$Human = 13;
var author$project$Database$Base$IconBubbles = 6;
var author$project$Database$Base$IconDarkMagic = 12;
var author$project$Database$Base$IconSwordDown = 60;
var author$project$Database$Base$King = 14;
var author$project$Database$Base$Lawful = 0;
var author$project$Database$Base$MagicGemOf = function (a) {
	return {$: 4, a: a};
};
var author$project$Database$Base$Mankind = 0;
var author$project$Database$Base$MeteorHorseshoe = {$: 20};
var author$project$Database$Base$Monument = function (a) {
	return {$: 2, a: a};
};
var author$project$Database$Base$Neutral = 1;
var author$project$Database$Base$OctupletCrystals = {$: 21};
var author$project$Database$Base$PhoenixFeather = {$: 22};
var author$project$Database$Base$Piece = function (a) {
	return {$: 1, a: a};
};
var author$project$Database$Base$ProofOfHero = {$: 23};
var author$project$Database$Base$PseudoServant = 17;
var author$project$Database$Base$Riding = 18;
var author$project$Database$Base$Saberface = 20;
var author$project$Database$Base$ScarabOfWisdom = {$: 24};
var author$project$Database$Base$SecretGemOf = function (a) {
	return {$: 5, a: a};
};
var author$project$Database$Base$SeedOfYggdrasil = {$: 25};
var author$project$Database$Base$SerpentJewel = {$: 26};
var author$project$Database$Base$ShellOfReminiscence = {$: 27};
var author$project$Database$Base$SpiritRoot = {$: 28};
var author$project$Database$Base$Star = 3;
var author$project$Database$Base$TearstoneOfBlood = {$: 29};
var author$project$Database$Base$VoidsDust = {$: 30};
var author$project$Database$Base$WarhorsesYoungHorn = {$: 31};
var author$project$Database$Base$IconGoddess = 22;
var author$project$Database$Passive$Give = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return elm$core$Maybe$Just(
				f(value));
		} else {
			return elm$core$Maybe$Nothing;
		}
	});
var elm$core$Tuple$second = function (_n0) {
	var y = _n0.b;
	return y;
};
var author$project$Database$Passive$lookup = function (a) {
	return A2(
		elm$core$Basics$composeR,
		elm_community$list_extra$List$Extra$find(
			A2(
				elm$core$Basics$composeR,
				elm$core$Tuple$first,
				elm$core$Basics$eq(a))),
		elm$core$Maybe$map(elm$core$Tuple$second));
};
var elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var author$project$Database$Passive$passive = F4(
	function (name, icon, effects, rank) {
		var skill = function (_n0) {
			var targ = _n0.a;
			var buff = _n0.b;
			var ranks = _n0.c;
			return A3(
				elm$core$Basics$composeR,
				elm$core$Maybe$map(author$project$Database$Skill$Flat),
				A2(
					elm$core$Basics$composeR,
					elm$core$Maybe$withDefault(author$project$Database$Skill$Placeholder),
					A3(author$project$Database$Skill$Grant, targ, 0, buff)),
				A2(author$project$Database$Passive$lookup, rank, ranks));
		};
		return {
			bg: 0,
			ao: A2(elm$core$List$map, skill, effects),
			aA: icon,
			bI: name,
			bZ: rank
		};
	});
var author$project$Database$Skill$A = 5;
var author$project$Database$Skill$B = 9;
var author$project$Database$Skill$C = 13;
var author$project$Database$Skill$EX = 1;
var author$project$Database$Passive$coreOfGoddess = A3(
	author$project$Database$Passive$passive,
	'Core of the Goddess',
	22,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DamageUp,
			_List_fromArray(
				[
					_Utils_Tuple2(1, 300),
					_Utils_Tuple2(5, 250),
					_Utils_Tuple2(9, 225),
					_Utils_Tuple2(13, 200)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffResist,
			_List_fromArray(
				[
					_Utils_Tuple2(1, 30),
					_Utils_Tuple2(5, 25),
					_Utils_Tuple2(9, 22.5),
					_Utils_Tuple2(13, 20)
				]))
		]));
var author$project$Database$Base$IconSun = 61;
var author$project$Database$Skill$APlusPlus = 3;
var author$project$Database$Skill$BMinus = 10;
var author$project$Database$Skill$BPlus = 8;
var author$project$Database$Skill$D = 16;
var author$project$Database$Skill$E = 18;
var author$project$Database$Skill$EMinus = 19;
var author$project$Database$Passive$divinity = A3(
	author$project$Database$Passive$passive,
	'Divine',
	61,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DamageUp,
			_List_fromArray(
				[
					_Utils_Tuple2(3, 230),
					_Utils_Tuple2(5, 200),
					_Utils_Tuple2(8, 185),
					_Utils_Tuple2(9, 175),
					_Utils_Tuple2(10, 170),
					_Utils_Tuple2(13, 150),
					_Utils_Tuple2(16, 125),
					_Utils_Tuple2(18, 100),
					_Utils_Tuple2(19, 95)
				]))
		]));
var author$project$Database$Base$IconDash = 13;
var author$project$Database$Skill$APlus = 4;
var author$project$Database$Passive$independentAction = A3(
	author$project$Database$Passive$passive,
	'Independent Action',
	13,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$CritUp,
			_List_fromArray(
				[
					_Utils_Tuple2(1, 12),
					_Utils_Tuple2(4, 11),
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(13, 6)
				]))
		]));
var author$project$Database$Base$IconDiamonds = 14;
var author$project$Database$Skill$CPlus = 12;
var author$project$Database$Skill$DPlus = 15;
var author$project$Database$Passive$magicResistance = A3(
	author$project$Database$Passive$passive,
	'Magic Resistance',
	14,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffResist,
			_List_fromArray(
				[
					_Utils_Tuple2(1, 25),
					_Utils_Tuple2(4, 21),
					_Utils_Tuple2(5, 20),
					_Utils_Tuple2(8, 18),
					_Utils_Tuple2(8, 18),
					_Utils_Tuple2(9, 17.5),
					_Utils_Tuple2(12, 15.5),
					_Utils_Tuple2(13, 15),
					_Utils_Tuple2(15, 13),
					_Utils_Tuple2(16, 12.5),
					_Utils_Tuple2(18, 10)
				]))
		]));
var author$project$Database$Base$IconHorse = 30;
var author$project$Database$Passive$riding = A3(
	author$project$Database$Passive$passive,
	'Riding',
	30,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(0),
			_List_fromArray(
				[
					_Utils_Tuple2(1, 12),
					_Utils_Tuple2(3, 11.5),
					_Utils_Tuple2(4, 11),
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(12, 7),
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(18, 2)
				]))
		]));
var author$project$Database$Base$IconMagicCircle = 33;
var author$project$Database$Passive$territoryCreation = A3(
	author$project$Database$Passive$passive,
	'Territory Creation',
	33,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(1),
			_List_fromArray(
				[
					_Utils_Tuple2(1, 12),
					_Utils_Tuple2(3, 11.5),
					_Utils_Tuple2(4, 11),
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(12, 7),
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(16, 4)
				]))
		]));
var author$project$Database$Servant$Ascension = F4(
	function (a, b, c, d) {
		return {$: 2, a: a, b: b, c: c, d: d};
	});
var author$project$Database$Servant$Deck = F5(
	function (a, b, c, d, e) {
		return {$: 0, a: a, b: b, c: c, d: d, e: e};
	});
var author$project$Database$Servant$Reinforcement = F8(
	function (a, b, c, d, e, f, g, h) {
		return {$: 0, a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h};
	});
var author$project$Database$Servant$Welfare = function (a) {
	return {$: 0, a: a};
};
var author$project$Database$Skill$AlliesType = function (a) {
	return {$: 7, a: a};
};
var author$project$Database$Skill$CMinus = 14;
var author$project$Database$Skill$CPlusPlus = 11;
var author$project$Database$Skill$Chances = F3(
	function (a, b, c) {
		return {$: 5, a: a, b: b, c: c};
	});
var author$project$Database$Skill$CritDown = {$: 8};
var author$project$Database$Skill$Damage = {$: 5};
var author$project$Database$Skill$DamagePoison = {$: 8};
var author$project$Database$Skill$DamageThruDef = {$: 6};
var author$project$Database$Skill$DemeritDamage = {$: 11};
var author$project$Database$Skill$DemeritGauge = {$: 12};
var author$project$Database$Skill$DemeritKill = {$: 14};
var author$project$Database$Skill$Enemies = {$: 5};
var author$project$Database$Skill$EnemiesType = function (a) {
	return {$: 9, a: a};
};
var author$project$Database$Skill$Enemy = {$: 4};
var author$project$Database$Skill$EnemyType = function (a) {
	return {$: 8, a: a};
};
var author$project$Database$Skill$GaugeDown = {$: 16};
var author$project$Database$Skill$LastStand = {$: 21};
var author$project$Database$Skill$NPDown = {$: 18};
var author$project$Database$Skill$Poison = {$: 19};
var author$project$Database$Skill$RemoveBuffs = {$: 23};
var author$project$Database$Skill$RemoveMental = {$: 25};
var author$project$Database$Skill$SealSkills = {$: 21};
var author$project$Database$Skill$SpecialDamage = function (a) {
	return {$: 26, a: a};
};
var author$project$Database$Skill$Unknown = 0;
var author$project$Database$Servant$Archer$archers = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 2,
		bi: 1,
		bk: 10,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.34, bN: 3, b1: 7.9, b2: 153},
		ay: {a8: 5, be: 5, bs: 8, bY: 5},
		aB: 12,
		aD: true,
		bI: 'Gilgamesh',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(18),
				author$project$Database$Passive$independentAction(4),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 2,
			bp: 'Star of Creation that Divided Heaven and Earth',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$NPUp,
					author$project$Database$Skill$Flat(30)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-World',
			bI: 'Enuma Elish',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(22)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10.5, 21))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				aA: 58,
				bI: 'Collector',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1897, bA: 1920},
			bx: {a9: 13442, bA: 14348},
			bG: {a9: 12280, bA: 13097}
		},
		ca: _List_fromArray(
			[15, 7, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 20)
				])),
		ba: 1,
		bi: 1,
		bk: 5,
		bm: 25.8,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.59, bN: 3, b1: 8, b2: 153},
		ay: {a8: 3, be: 3, bs: 5, bY: 4},
		aB: 129,
		aD: true,
		bI: 'Altria Pendragon (Archer)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$independentAction(5),
				author$project$Database$Passive$territoryCreation(5)
			]),
		T: {
			bf: 1,
			bp: 'Shining Sunlight—Sword of Promised Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(70),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Unit',
			bI: 'Excalibur Viviane',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 5
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 10),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 11),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 2,
				bI: 'Summer Splash!',
				bZ: 4
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 5000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritGauge,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 23,
				bI: 'Beach House Protection',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 18)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(15),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 18, 38))
					]),
				aA: 63,
				bI: 'Beach Flower',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1742, bA: 2134},
			bx: {a9: 12343, bA: 15943},
			bG: {a9: 11276, bA: 14553}
		},
		ca: _List_fromArray(
			[10, 22, 1, 8, 14, 20])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				])),
		ba: 3,
		bi: 1,
		bk: 10,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.87, bN: 3, b1: 7.9, b2: 147},
		ay: {a8: 2, be: 1, bs: 3, bY: 3},
		aB: 77,
		aD: false,
		bI: 'Nikola Tesla',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 2,
			bp: 'Legend of Mankind: Advent of Lightning',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A2(
					author$project$Database$Skill$Chance,
					40,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(500))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Fortress',
			bI: 'System Keraunos',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(9)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 15),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 41,
				bI: 'Galvanism',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$NPUp),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 32,
				bI: 'Inherent Wisdom',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 38,
				bI: 'Pioneer of the Stars',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1820, bA: 2027},
			bx: {a9: 12896, bA: 15146},
			bG: {a9: 11781, bA: 13825}
		},
		ca: _List_fromArray(
			[15, 3])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10)
				])),
		ba: 2,
		bi: 1,
		bk: 25,
		bm: 27,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 1, bN: 3, b1: 8, b2: 153},
		ay: {a8: 1, be: 1, bs: 4, bY: 3},
		aB: 60,
		aD: false,
		bI: 'Orion',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$independentAction(4)
			]),
		T: {
			bf: 1,
			bp: 'Moon Goddess\'s Arrows of Love and Romance',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 1800)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$GaugeDown,
					author$project$Database$Skill$Flat(1))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Personnel',
			bI: 'Tri-Star Amore Mio',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						author$project$Database$Skill$Flat(50))
					]),
				aA: 52,
				bI: 'Grace of the Goddess',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(15)),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 11,
				bI: 'Punish the Unfaithful',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 17, 34))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 10
			}
			]),
		a1: {
			bb: {a9: 1716, bA: 2134},
			bx: {a9: 12158, bA: 15943},
			bG: {a9: 11107, bA: 14553}
		},
		ca: _List_fromArray(
			[15, 11, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 2,
		bi: 1,
		bk: 25,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.51, bN: 3, b1: 8, b2: 154},
		ay: {a8: 3, be: 3, bs: 5, bY: 2},
		aB: 84,
		aD: false,
		bI: 'Arjuna',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$independentAction(5),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 2,
			bp: 'Raised Hand of the Destruction God',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					author$project$Database$Skill$Flat(50)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$EnemiesType(7),
					author$project$Database$Skill$Kill,
					author$project$Database$Skill$Flat(80))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Pashupata',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 22),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				aA: 56,
				bI: 'Clairvoyance',
				bZ: 12
			},
				{
				bg: 12,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						5,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 4, 8))
					]),
				aA: 38,
				bI: 'Hero of the Endowed',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 9,
				bI: 'Mana Burst (Flame)',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1907, bA: 1940},
			bx: {a9: 13510, bA: 14494},
			bG: {a9: 12342, bA: 13230}
		},
		ca: _List_fromArray(
			[15, 7, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: author$project$Database$Servant$Welfare('Heart Bracelet'),
		ba: 2,
		bi: 1,
		bk: 9,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: true,
		S: {bM: 0.38, bN: 3, b1: 8, b2: 148},
		ay: {a8: 6, be: 2, bs: 4, bY: 3},
		aB: 137,
		aD: true,
		bI: 'Chloe von Einzbern',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 1,
			bp: 'Kakuyoku San-Ren',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 6,
			bE: 'Anti-Unit',
			bI: 'Triple Crane Wings',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 13
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 9),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 20, 35)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 20, 35)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 35))
					]),
				aA: 0,
				bI: 'Projection',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 38,
				bI: 'Kissing Freak',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1640, bA: 1746},
			bx: {a9: 11920, bA: 13239},
			bG: {a9: 9845, bA: 10914}
		},
		ca: _List_fromArray(
			[10, 17, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: author$project$Database$Servant$Welfare('Golden Skull'),
		ba: 0,
		bi: 1,
		bk: 14,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: true,
		S: {bM: 0.43, bN: 3, b1: 7.9, b2: 150},
		ay: {a8: 4, be: 4, bs: 5, bY: 2},
		aB: 69,
		aD: true,
		bI: 'Oda Nobunaga',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 2,
			bp: 'Three Thousand Worlds',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Army',
			bI: 'Three Line Formation',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(18)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 41,
				bI: 'Strategy',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(7)),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 11,
				bI: 'Unifying the Nation by Force',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				aA: 17,
				bI: 'The Demonic King',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1862, bA: 1582},
			bx: {a9: 11495, bA: 14110},
			bG: {a9: 9494, bA: 11637}
		},
		ca: _List_fromArray(
			[10, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6)
				])),
		ba: 1,
		bi: 1,
		bk: 14,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.58, bN: 3, b1: 8.1, b2: 145},
		ay: {a8: 3, be: 5, bs: 6, bY: 4},
		aB: 122,
		aD: false,
		bI: 'Tristan',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 0,
			bp: 'Fantasia of Lamentation',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: false,
			ay: 7,
			bE: 'Anti-Army',
			bI: 'Failnaught',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 15),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 60)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveMental, author$project$Database$Skill$Full),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 200, 600))
					]),
				aA: 6,
				bI: 'Harp of Healing',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)
					]),
				aA: 38,
				bI: 'Grace of the Unexpected Birth',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 10,
				bI: 'Admonishment of the King of Knights',
				bZ: 0
			}
			]),
		a1: {
			bb: {a9: 1622, bA: 1862},
			bx: {a9: 11787, bA: 14110},
			bG: {a9: 9735, bA: 11637}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				])),
		ba: 0,
		bi: 1,
		bk: 14,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.51, bN: 3, b1: 7.9, b2: 145},
		ay: {a8: 3, be: 1, bs: 5, bY: 2},
		aB: 11,
		aD: false,
		bI: 'EMIYA',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 2,
			bp: 'Infinite Creation of Swords',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 10,
			bE: 'Unknown',
			bI: 'Unlimited Blade Works',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 3
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 40)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (True)',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 16, 32))
					]),
				aA: 56,
				bI: 'Clairvoyance',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 25, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 25, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 25, 40))
					]),
				aA: 0,
				bI: 'Projection',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1566, bA: 1843},
			bx: {a9: 11379, bA: 13969},
			bG: {a9: 9398, bA: 11521}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[1, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				])),
		ba: 1,
		bi: 1,
		bk: 9,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.5, bN: 3, b1: 8, b2: 148},
		ay: {a8: 2, be: 1, bs: 3, bY: 3},
		aB: 14,
		aD: false,
		bI: 'Atalante',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 0,
			bp: 'Complaint Message on the Arrow',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 800, 1200))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Army',
			bI: 'Phoebus Catastrophe',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			bZ: 8
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 45,
				bI: 'Beyond Arcadia',
				bZ: 5
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				aA: 58,
				bI: 'Hunter\'s Aesthetic',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 15,
				bI: 'Calydonian Hunt',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1438, bA: 1996},
			bx: {a9: 10453, bA: 15127},
			bG: {a9: 8633, bA: 12476}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				])),
		ba: 0,
		bi: 1,
		bk: 29,
		bm: 40.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.85, bN: 3, b1: 8.1, b2: 153},
		ay: {a8: 2, be: 1, bs: 5, bY: 3},
		aB: 131,
		aD: true,
		bI: 'Anne Bonny & Mary Read (Archer)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 2,
			bp: 'Bond of Lovebirds',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$LastStand,
					author$project$Database$Skill$Flat(600))
				]),
			bu: false,
			ay: 9,
			bE: 'Anti-Unit',
			bI: 'Caribbean Free Bird Act 2',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 11
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 45),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9.5, 19.5)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(15),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 21, 41))
					]),
				aA: 63,
				bI: 'Beach Flower',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 56,
				bI: 'Treasure Hunt (Sea)',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8.5, 25.5)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffVuln,
						author$project$Database$Skill$Flat(50))
					]),
				aA: 63,
				bI: 'Pirate\'s Glory',
				bZ: 12
			}
			]),
		a1: {
			bb: {a9: 1574, bA: 1843},
			bx: {a9: 11437, bA: 13969},
			bG: {a9: 9446, bA: 11521}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 16),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 0,
		bi: 1,
		bk: 3,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.87, bN: 3, b1: 8, b2: 150},
		ay: {a8: 2, be: 1, bs: 3, bY: 3},
		aB: 13,
		aD: false,
		bI: 'Robin Hood',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 1,
			bp: 'Bow of Prayer',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Yew Bow',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamagePoison,
					A2(author$project$Database$Skill$Range, 200, 250))
				]),
			bZ: 16
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						5,
						author$project$Database$Skill$Poison,
						author$project$Database$Skill$Flat(500))
					]),
				aA: 60,
				bI: 'Sabotage',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 12, 30))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 18
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 15,
				bI: 'May King',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1247, bA: 1833},
			bx: {a9: 9088, bA: 13812},
			bG: {a9: 6715, bA: 10187}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 2,
		bi: 1,
		bk: 3,
		bm: 22.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.9, bN: 3, b1: 7.9, b2: 156},
		ay: {a8: 2, be: 1, bs: 3, bY: 3},
		aB: 15,
		aD: false,
		bI: 'Euryale',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$independentAction(4),
				author$project$Database$Passive$coreOfGoddess(1)
			]),
		T: {
			bf: 1,
			bp: 'Gaze of the Goddess',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					author$project$Database$Skill$Flat(1200)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(15)),
					A2(author$project$Database$Skill$Range, 150, 250)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 3, author$project$Database$Skill$AttackDown),
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Eye of the Euryale',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					200,
					A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$EnemyType(15),
						1,
						author$project$Database$Skill$Charm,
						author$project$Database$Skill$Full))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				aA: 12,
				bI: 'Vampirism',
				bZ: 13
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						70,
						100,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(15),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Siren Song',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 2,
				bI: 'Whim of the Goddess',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1306, bA: 1711},
			bx: {a9: 9517, bA: 12889},
			bG: {a9: 7032, bA: 9506}
		},
		ca: _List_fromArray(
			[10, 7, 22])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				])),
		ba: 1,
		bi: 1,
		bk: 1,
		bm: 45,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 8, b2: 147},
		ay: {a8: 2, be: 1, bs: 3, bY: 3},
		aB: 16,
		aD: false,
		bI: 'Arash',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$independentAction(13)
			]),
		T: {
			bf: 2,
			bp: 'The Streaking Meteor',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 800, 1200)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$DemeritKill, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Stella',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 0, 800))
				]),
			bZ: 5
		},
		aU: 1,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Resist(author$project$Database$Skill$Poison),
						A2(author$project$Database$Skill$Range, 80, 160))
					]),
				aA: 52,
				bI: 'Toughness',
				bZ: 1
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 56,
				bI: 'Clairvoyance',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 38,
				bI: 'Arrow Construction',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1057, bA: 1424},
			bx: {a9: 9037, bA: 10979},
			bG: {a9: 5816, bA: 7122}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		ba: 2,
		bi: 1,
		bk: 23,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: true,
		S: {bM: 0.76, bN: 3, b1: 8, b2: 153},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 63,
		aD: false,
		bI: 'David',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 2,
			bp: 'The Five Stones',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Hamesh Avanim',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					200,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
				]),
			bZ: 14
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 52,
				bI: 'Divine Protection',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveMental, author$project$Database$Skill$Full),
						A2(
						author$project$Database$Skill$Times,
						1,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 300, 800))
					]),
				aA: 6,
				bI: 'Harp of Healing',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1436, bA: 1555},
			bx: {a9: 10470, bA: 11719},
			bG: {a9: 7736, bA: 8643}
		},
		ca: _List_fromArray(
			[15, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				])),
		ba: 2,
		bi: 1,
		bk: 8,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.62, bN: 3, b1: 7.9, b2: 153},
		ay: {a8: 3, be: 3, bs: 3, bY: 3},
		aB: 95,
		aD: false,
		bI: 'Gilgamesh (Child)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(18),
				author$project$Database$Passive$independentAction(5),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 2,
			bp: 'King\'s Treasury',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Unit',
			bI: 'Gate of Babylon',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$NPDown,
					A2(author$project$Database$Skill$Range, 50, 90)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$CritDown,
					A2(author$project$Database$Skill$Range, 50, 90)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 8
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10.5, 21))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 4
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						45,
						75,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(13),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Fair Youth',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1429, bA: 1571},
			bx: {a9: 10415, bA: 11838},
			bG: {a9: 7696, bA: 8731}
		},
		ca: _List_fromArray(
			[15, 7, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				])),
		ba: 0,
		bi: 1,
		bk: 3,
		bm: 45,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.56, bN: 3, b1: 8, b2: 150},
		ay: {a8: 3, be: 4, bs: 4, bY: 2},
		aB: 105,
		aD: false,
		bI: 'Billy the Kid',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$independentAction(5),
				author$project$Database$Passive$riding(12)
			]),
		T: {
			bf: 0,
			bp: 'Discordant Thunderclap',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Unit',
			bI: 'Thunderer',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 12
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 60, 120))
					]),
				aA: 17,
				bI: 'Marksmanship',
				bZ: 3
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 38,
				bI: 'Quick Draw',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 16, 32))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1279, bA: 1711},
			bx: {a9: 9325, bA: 12889},
			bG: {a9: 6890, bA: 9506}
		},
		ca: _List_fromArray(
			[15, 18, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(1),
					10),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				])),
		ba: 0,
		bi: 1,
		bk: 28,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.57, bN: 3, b1: 7.8, b2: 150},
		ay: {a8: 3, be: 1, bs: 5, bY: 2},
		aB: 125,
		aD: false,
		bI: 'Tawara Touta',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 2,
			bp: 'O Great Bodhisattva of Arms, I beseech thy blessing upon this arrow!',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: true,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Hachiman Prayer',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(6)),
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(1),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(1),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 12),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 9,
				bI: 'Protection of the Dragon King',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						2,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 7, 14))
					]),
				aA: 15,
				bI: 'Protection from Arrows',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$MaxHP,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 31,
				bI: 'Inexhaustible Straw Bag',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1306, bA: 1764},
			bx: {a9: 9517, bA: 13287},
			bG: {a9: 7032, bA: 9800}
		},
		ca: _List_fromArray(
			[15, 3, 22])
	}
	]);
var author$project$Database$Base$IconExclamationDown = 18;
var author$project$Database$Base$IconHoodDown = 28;
var author$project$Database$Base$IconMystic = 36;
var author$project$Database$Base$IconShieldDown = 51;
var author$project$Database$Base$IconStar = 55;
var author$project$Database$Base$IconStun = 59;
var author$project$Database$Base$IconYinYang = 67;
var author$project$Database$Base$LampOfEvilSealing = {$: 19};
var author$project$Database$Passive$cosmoReactor = A3(
	author$project$Database$Passive$passive,
	'Cosmo Reactor',
	56,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$StarUp,
			_List_fromArray(
				[
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8)
				]))
		]));
var author$project$Database$Base$IconTeeth = 66;
var author$project$Database$Skill$EPlus = 17;
var author$project$Database$Passive$madness = A3(
	author$project$Database$Passive$passive,
	'Madness Enhancement',
	66,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(2),
			_List_fromArray(
				[
					_Utils_Tuple2(1, 12),
					_Utils_Tuple2(4, 11),
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(15, 5),
					_Utils_Tuple2(16, 4),
					_Utils_Tuple2(17, 3),
					_Utils_Tuple2(18, 2),
					_Utils_Tuple2(19, 1)
				]))
		]));
var author$project$Database$Base$IconMask = 34;
var author$project$Database$Passive$presenceConcealment = A3(
	author$project$Database$Passive$passive,
	'Presence Concealment',
	34,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$StarUp,
			_List_fromArray(
				[
					_Utils_Tuple2(4, 10.5),
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(12, 6.5),
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(14, 5.5),
					_Utils_Tuple2(16, 4),
					_Utils_Tuple2(18, 2)
				]))
		]));
var author$project$Database$Skill$APlusPlusPlus = 2;
var author$project$Database$Skill$Ally = {$: 2};
var author$project$Database$Skill$BecomeHyde = {$: 2};
var author$project$Database$Skill$Confusion = {$: 9};
var author$project$Database$Skill$DeathDown = {$: 12};
var author$project$Database$Skill$DemeritBuffs = {$: 9};
var author$project$Database$Skill$MentalResist = {$: 21};
var author$project$Database$Skill$MentalSuccess = {$: 22};
var author$project$Database$Skill$Others = {$: 6};
var author$project$Database$Skill$StunBomb = {$: 24};
var author$project$Database$Skill$VsAlignment = function (a) {
	return {$: 2, a: a};
};
var author$project$Database$Servant$Assassin$assassins = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		ba: 1,
		bi: 5,
		bk: 25,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 1.07, bN: 4, b1: 25.5, b2: 97},
		ay: {a8: 2, be: 2, bs: 4, bY: 5},
		aB: 75,
		aD: false,
		bI: 'Jack the Ripper',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(4)
			]),
		T: {
			bf: 0,
			bp: 'Holy Mother of Dismemberment',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 1400, 2200))
				]),
			bu: true,
			ay: 4,
			bE: 'Anti-Personnel',
			bI: 'Maria the Ripper',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					A2(
						author$project$Database$Skill$Special,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$VsTrait(10)),
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			bZ: 15
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 15,
				bI: 'Murder on a Misty Night',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 10,
				bI: 'Information Erasure',
				bZ: 9
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 2500))
					]),
				aA: 23,
				bI: 'Surgery',
				bZ: 18
			}
			]),
		a1: {
			bb: {a9: 1786, bA: 1862},
			bx: {a9: 12651, bA: 13909},
			bG: {a9: 11557, bA: 12696}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[0, 1]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 6),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10)
				])),
		ba: 0,
		bi: 5,
		bk: 5,
		bm: 49.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.06, bN: 4, b1: 25.5, b2: 98},
		ay: {a8: 2, be: 3, bs: 6, bY: 4},
		aB: 139,
		aD: true,
		bI: 'Cleopatra',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(9),
				author$project$Database$Passive$divinity(16)
			]),
		T: {
			bf: 2,
			bp: 'O, serpent who finishes the time of daybreak, come to me',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(1000))
				]),
			bu: true,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Uraeus Astrape',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 5
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 18),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 23,
				bI: 'Imperial Privilege',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$GaugePerTurn,
						author$project$Database$Skill$Flat(10)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 100))
					]),
				aA: 40,
				bI: 'Golden Rule (Wealth & Body)',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 49,
				bI: 'Protection of the Goddess',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1713, bA: 1965},
			bx: {a9: 12138, bA: 14682},
			bG: {a9: 11088, bA: 13402}
		},
		ca: _List_fromArray(
			[10, 7, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 1,
		bi: 5,
		bk: 25,
		bm: 31.6,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.55, bN: 4, b1: 25, b2: 98},
		ay: {a8: 3, be: 1, bs: 6, bY: 4},
		aB: 112,
		aD: true,
		bI: 'Shuten-Douji',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(13),
				author$project$Database$Passive$divinity(13)
			]),
		T: {
			bf: 1,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DebuffVuln,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$NPDown,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Multicolored Poison—Shinpen Kidoku',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Poison,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			bZ: 9
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Chance,
						60,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 26,
				bI: 'Intoxicating Aroma of Fruits',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 63,
				bI: 'Demonic Nature of Oni',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1200, 2700))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 4
			}
			]),
		a1: {
			bb: {a9: 1853, bA: 1881},
			bx: {a9: 13128, bA: 14050},
			bG: {a9: 11993, bA: 12825}
		},
		ca: _List_fromArray(
			[10, 6, 22, 7, 8])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36)
				])),
		ba: 3,
		bi: 5,
		bk: 5,
		bm: 38.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.81, bN: 4, b1: 25.6, b2: 98},
		ay: {a8: 2, be: 1, bs: 4, bY: 4},
		aB: 86,
		aD: true,
		bI: 'Mysterious Heroine X',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$riding(1),
				author$project$Database$Passive$cosmoReactor(5)
			]),
		T: {
			bf: 0,
			bp: 'Sword of Unnamed Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			bu: false,
			ay: 12,
			bE: 'Anti-Unit',
			bI: 'Secret Calibur',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(20)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						80,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$StunBomb, author$project$Database$Skill$Full))
					]),
				aA: 59,
				bI: 'Fire Support',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 12
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsClass(0)),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$StarUp,
							author$project$Database$Skill$VsClass(0)),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 56,
				bI: 'Galactic Meteor Sword',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1817, bA: 1862},
			bx: {a9: 12874, bA: 13909},
			bG: {a9: 11761, bA: 12696}
		},
		ca: _List_fromArray(
			[10, 18, 8, 20, 1, 14])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: author$project$Database$Servant$Welfare('Sharp Knife'),
		ba: 0,
		bi: 5,
		bk: 4,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: true,
		S: {bM: 0.8, bN: 4, b1: 25.6, b2: 102},
		ay: {a8: 2, be: 1, bs: 5, bY: 4},
		aB: 92,
		aD: true,
		bI: 'Ryougi Shiki (Assassin)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(13),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 1,
			bp: 'Yuishiki・Chokushi no Magan',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: true,
			ay: 3,
			bE: 'Anti-Unit',
			bI: 'Vijñāpti-mātratā—Mystic Eyes of Death Perception',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 100, 140))
				]),
			bZ: 1
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 15),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$DeathDown,
						A2(author$project$Database$Skill$Range, 80, 100))
					]),
				aA: 36,
				bI: 'Mystic Eyes of Death Perception',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritDamage,
						author$project$Database$Skill$Flat(1000))
					]),
				aA: 67,
				bI: 'Yin-Yang',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1477, bA: 1768},
			bx: {a9: 10736, bA: 13404},
			bG: {a9: 8867, bA: 11055}
		},
		ca: _List_fromArray(
			[10, 22, 17])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				])),
		ba: 1,
		bi: 5,
		bk: 14,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 2.15, bN: 4, b1: 25.2, b2: 98},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 46,
		aD: false,
		bI: 'Carmilla',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(16)
			]),
		T: {
			bf: 2,
			bp: 'Phantasmal Iron Maiden',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					author$project$Database$Skill$Flat(2000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Phantom Maiden',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(10)),
					A2(author$project$Database$Skill$Range, 120, 170))
				]),
			bZ: 13
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 45),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				aA: 12,
				bI: 'Vampirism',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 51,
				bI: 'Torture Technique',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 10))
					]),
				aA: 18,
				bI: 'Bath of Fresh Blood',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1568, bA: 1675},
			bx: {a9: 11391, bA: 12698},
			bG: {a9: 9408, bA: 10473}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6)
				])),
		ba: 0,
		bi: 5,
		bk: 24,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.46, bN: 4, b1: 25.6, b2: 97},
		ay: {a8: 2, be: 6, bs: 8, bY: 4},
		aB: 109,
		aD: false,
		bI: 'Emiya (Assassin)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(4),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 1,
			bp: 'Gather Ye Rosebuds While Ye May',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$GaugeDown,
					author$project$Database$Skill$Flat(1))
				]),
			bu: false,
			ay: 15,
			bE: 'Anti-Unit',
			bI: 'Chronos Rose',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 24, 40))
					]),
				aA: 2,
				bI: 'Magecraft',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Others,
						3,
						author$project$Database$Skill$DebuffVuln,
						author$project$Database$Skill$Flat(20))
					]),
				aA: 50,
				bI: 'Affection of the Holy Grail',
				bZ: 4
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 65,
				bI: 'Scapegoat',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1493, bA: 1786},
			bx: {a9: 10846, bA: 13541},
			bG: {a9: 8958, bA: 11168}
		},
		ca: _List_fromArray(
			[15, 3, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: author$project$Database$Servant$Welfare('Bell-Ringing Branch'),
		ba: 3,
		bi: 5,
		bk: 4,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: true,
		S: {bM: 0.71, bN: 4, b1: 25.6, b2: 98},
		ay: {a8: 3, be: 3, bs: 5, bY: 3},
		aB: 133,
		aD: true,
		bI: 'Scathach (Assassin)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(18)
			]),
		T: {
			bf: 0,
			bp: 'Soaring Spear of Kicked Piercing Death',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Gáe Bolg Alternative',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 8
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 6),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						100,
						300,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 65,
				bI: 'Beach Crisis',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$DamageDown,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				aA: 23,
				bI: 'Primordial Rune (Sea)',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 50,
				bI: 'Midsummer Mistake',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1851, bA: 1786},
			bx: {a9: 10956, bA: 13541},
			bG: {a9: 9049, bA: 11168}
		},
		ca: _List_fromArray(
			[10, 14, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 2,
		bi: 5,
		bk: 4,
		bm: 27.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 2.26, bN: 4, b1: 25, b2: 104},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 41,
		aD: false,
		bI: 'Stheno',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$presenceConcealment(4),
				author$project$Database$Passive$coreOfGoddess(1)
			]),
		T: {
			bf: 2,
			bp: 'Goddess\' Smile',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$EnemyType(15),
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 100, 150)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 3, author$project$Database$Skill$DefenseDown),
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Personnel',
			bI: 'Smile of the Stheno',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					200,
					A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$EnemyType(15),
						1,
						author$project$Database$Skill$Charm,
						author$project$Database$Skill$Full))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				aA: 12,
				bI: 'Vampirism',
				bZ: 13
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						70,
						100,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(15),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Siren Song',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(7),
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 63,
				bI: 'Whim of the Goddess',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1497, bA: 1843},
			bx: {a9: 10879, bA: 13965},
			bG: {a9: 8985, bA: 11518}
		},
		ca: _List_fromArray(
			[10, 7, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5)
				])),
		ba: 0,
		bi: 5,
		bk: 8,
		bm: 38.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 0.54, bN: 4, b1: 25.6, b2: 100},
		ay: {a8: 4, be: 1, bs: 4, bY: 4},
		aB: 117,
		aD: false,
		bI: 'Fuuma \"Evil-wind\" Kotarou',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(4)
			]),
		T: {
			bf: 0,
			bp: 'Fumetsu no Konton Ryodan',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Immortal Chaos Brigade',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Confusion,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$AttackDown,
						author$project$Database$Skill$Flat(10)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 60,
				bI: 'Sabotage',
				bZ: 8
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 15,
				bI: 'Ninjutsu',
				bZ: 2
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						1,
						author$project$Database$Skill$DebuffVuln,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 28,
				bI: 'Suspicious Shadow',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1316, bA: 1592},
			bx: {a9: 9597, bA: 11991},
			bG: {a9: 7091, bA: 8844}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[1, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 2),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				])),
		ba: 0,
		bi: 5,
		bk: 6,
		bm: 55,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 1.05, bN: 4, b1: 25.3, b2: 102},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 39,
		aD: false,
		bI: 'Sasaki Kojirou',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(16)
			]),
		T: {
			bf: 0,
			bp: 'Hiken—Tsubame Gaeshi',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Personnel',
			bI: 'Swallow Reversal',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			bZ: 0
		},
		aU: 1,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					2),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 5
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveMental, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 6,
				bI: 'Vitrify',
				bZ: 8
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 7,
				bI: 'Knowledge of the Sowa',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1042, bA: 1244},
			bx: {a9: 8912, bA: 9588},
			bG: {a9: 5735, bA: 6220}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					3),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				])),
		ba: 0,
		bi: 5,
		bk: 2,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 1.07, bN: 4, b1: 25.2, b2: 97},
		ay: {a8: 2, be: 1, bs: 3, bY: 3},
		aB: 40,
		aD: false,
		bI: 'Hassan of the Cursed Arm',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(4)
			]),
		T: {
			bf: 0,
			bp: 'Delusional Heartbeat',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Zabaniya',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 80, 120))
				]),
			bZ: 13
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					3),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 9),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 3, 12))
					]),
				aA: 55,
				bI: 'Throw (Dagger)',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 17,
				bI: 'Self-Modification',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 15,
				bI: 'Protection Against the Wind',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1114, bA: 1429},
			bx: {a9: 9100, bA: 10960},
			bG: {a9: 6280, bA: 7594}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3, 2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				])),
		ba: 1,
		bi: 5,
		bk: 23,
		bm: 55,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: true,
		S: {bM: 1.05, bN: 4, b1: 25.6, b2: 99},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 81,
		aD: false,
		bI: 'Henry Jekyll & Hyde',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(5),
				author$project$Database$Passive$madness(5)
			]),
		T: {
			bf: 2,
			bp: 'The Secret Game of Sin',
			ao: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$BecomeHyde, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$MaxHP,
					A2(author$project$Database$Skill$Range, 3000, 6000)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$Heal, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Personnel',
			bI: 'Dangerous Game',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 40, 80))
				]),
			bZ: 12
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('transformed into Hyde'),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 25, 35))
					]),
				aA: 63,
				bI: 'Monstrous Strength',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							0,
							author$project$Database$Skill$Success(author$project$Database$Skill$Stun)),
						A2(author$project$Database$Skill$Range, 5, 15)),
						A3(
						elm$core$Basics$composeL,
						A2(
							elm$core$Basics$composeL,
							author$project$Database$Skill$When('transformed into Hyde'),
							author$project$Database$Skill$Times(1)),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							0,
							author$project$Database$Skill$Success(author$project$Database$Skill$Stun)),
						A2(author$project$Database$Skill$Range, 85, 135)),
						A2(
						author$project$Database$Skill$Chance,
						10,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				aA: 59,
				bI: 'Panicky Voice',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('transformed into Hyde'),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
						A2(author$project$Database$Skill$Range, 25, 35))
					]),
				aA: 17,
				bI: 'Self-Modification',
				bZ: 16
			}
			]),
		a1: {
			bb: {a9: 1173, bA: 1741},
			bx: {a9: 8553, bA: 13118},
			bG: {a9: 6320, bA: 9675}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					8)
				])),
		ba: 0,
		bi: 5,
		bk: 8,
		bm: 55,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 1.05, bN: 4, b1: 25.2, b2: 98},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 42,
		aD: false,
		bI: 'Jing Ke',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(9)
			]),
		T: {
			bf: 0,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(1000))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'All I Do Is Kill',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						author$project$Database$Skill$Flat(200)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 58,
				bI: 'Restrain',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 56,
				bI: 'Planning',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 45,
				bI: 'Insolent',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1338, bA: 1492},
			bx: {a9: 9754, bA: 11244},
			bG: {a9: 7207, bA: 8293}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[0, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					3),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 1),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				])),
		ba: 0,
		bi: 5,
		bk: 12,
		bm: 49.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 1.06, bN: 4, b1: 24.8, b2: 102},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 43,
		aD: false,
		bI: 'Charles-Henri Sanson',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(16)
			]),
		T: {
			bf: 2,
			bp: 'Death is Hope For Tomorrow',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'La Mort Espoir',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 30, 80)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 5
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 9),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsAlignment(5)),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				aA: 11,
				bI: 'Executioner',
				bZ: 3
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Ally, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				aA: 23,
				bI: 'Medicine',
				bZ: 4
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(13)),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				aA: 11,
				bI: 'Human Study',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 968, bA: 1568},
			bx: {a9: 7906, bA: 11991},
			bG: {a9: 5456, bA: 8309}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5)
				])),
		ba: 0,
		bi: 5,
		bk: 28,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.48, bN: 4, b1: 25.5, b2: 97},
		ay: {a8: 3, be: 1, bs: 6, bY: 3},
		aB: 110,
		aD: false,
		bI: 'Hassan of the Hundred Personas',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(5)
			]),
		T: {
			bf: 1,
			bp: 'Delusional Illusion',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 13,
			bE: 'Anti-Unit',
			bI: 'Zabaniya',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 8
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 41,
				bI: 'Librarian of Knowledge',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(2)),
						author$project$Database$Skill$Flat(30)),
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(0)),
						author$project$Database$Skill$Flat(30)),
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(1)),
						author$project$Database$Skill$Flat(30)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)
					]),
				aA: 0,
				bI: 'Wide Specialization',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 4000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$DemeritBuffs, author$project$Database$Skill$Full)
					]),
				aA: 23,
				bI: 'Battle Retreat',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1241, bA: 1675},
			bx: {a9: 9049, bA: 12623},
			bG: {a9: 6686, bA: 9310}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[0, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 20),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 4),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5)
				])),
		ba: 0,
		bi: 5,
		bk: 23,
		bm: 44,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.53, bN: 4, b1: 25.6, b2: 102},
		ay: {a8: 3, be: 4, bs: 5, bY: 3},
		aB: 124,
		aD: false,
		bI: 'Hassan of the Serenity',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(4),
				author$project$Database$Passive$independentAction(5)
			]),
		T: {
			bf: 1,
			bp: 'Delusional Poison Body',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Poison,
					author$project$Database$Skill$Flat(1000)),
					A2(
					author$project$Database$Skill$Chance,
					40,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full)),
					A2(
					author$project$Database$Skill$Chance,
					40,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Unit',
			bI: 'Zabaniya',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 60, 100))
				]),
			bZ: 13
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1))
					]),
				aA: 18,
				bI: 'Morph (Infiltration)',
				bZ: 13
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 2, 12))
					]),
				aA: 55,
				bI: 'Throw (Dagger)',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$KillUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffSuccess,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 47,
				bI: 'Dance of Silence',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1232, bA: 1675},
			bx: {a9: 8981, bA: 12623},
			bG: {a9: 6636, bA: 9310}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				])),
		ba: 1,
		bi: 5,
		bk: 2,
		bm: 49.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 0.71, bN: 4, b1: 25.2, b2: 98},
		ay: {a8: 3, be: 2, bs: 3, bY: 2},
		aB: 44,
		aD: false,
		bI: 'Phantom of the Opera',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(5)
			]),
		T: {
			bf: 1,
			bp: 'Love Song Resounding through Hell',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 900))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Christine Christine',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					6,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			bZ: 8
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(14))
					]),
				aA: 57,
				bI: 'Innocent Monster',
				bZ: 16
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						90,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(10),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Siren Song',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalSuccess,
						A2(author$project$Database$Skill$Range, 5, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 54,
				bI: 'Mental Corruption',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1003, bA: 1580},
			bx: {a9: 8193, bA: 12112},
			bG: {a9: 5654, bA: 8393}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				])),
		ba: 0,
		bi: 5,
		bk: 6,
		bm: 55,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 2.1, bN: 4, b1: 24.6, b2: 98},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 45,
		aD: false,
		bI: 'Mata Hari',
		bT: _List_Nil,
		T: {
			bf: 1,
			bp: 'The Woman with Sunny Eyes',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					40,
					60,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Mata Hari',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 5
		},
		aU: 1,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(5),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(5),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 2),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 56,
				bI: 'Espionage',
				bZ: 3
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						30,
						60,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemiesType(15),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 26,
				bI: 'Pheromone',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 10,
				bI: 'Double-cross',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 977, bA: 1313},
			bx: {a9: 8355, bA: 10120},
			bG: {a9: 5377, bA: 6565}
		},
		ca: _List_fromArray(
			[10, 22])
	}
	]);
var author$project$Database$Base$Mad = 6;
var author$project$Database$Base$Roman = 19;
var author$project$Database$Skill$BPlusPlus = 7;
var author$project$Database$Skill$BuffFail = {$: 3};
var author$project$Database$Skill$DemeritHealth = {$: 13};
var author$project$Database$Skill$OffensiveResist = {$: 26};
var author$project$Database$Servant$Berserker$berserkers = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 8)
				])),
		ba: 1,
		bi: 6,
		bk: 10,
		bm: 52,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.69, bN: 5, b1: 5.1, b2: 9},
		ay: {a8: 3, be: 3, bs: 5, bY: 4},
		aB: 98,
		aD: false,
		bI: 'Cu Chulainn (Alter)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(13),
				author$project$Database$Passive$divinity(13)
			]),
		T: {
			bf: 2,
			bp: 'Beast of Crunching Deathtusk',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: true,
			ay: 12,
			bE: 'Anti-Personnel',
			bI: 'Curruid Coinchenn',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 30, 70)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 5
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 15),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 48)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 18,
				bI: 'Madness of the Spirits',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						2,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 7, 14))
					]),
				aA: 15,
				bI: 'Protection from Arrows',
				bZ: 13
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1979, bA: 1790},
			bx: {a9: 14017, bA: 13377},
			bG: {a9: 12805, bA: 12210}
		},
		ca: _List_fromArray(
			[15, 7, 3, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		ba: 2,
		bi: 6,
		bk: 30,
		bm: 39,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.46, bN: 5, b1: 4.9, b2: 9},
		ay: {a8: 4, be: 1, bs: 5, bY: 3},
		aB: 114,
		aD: true,
		bI: 'Minamoto-no-Raikou',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$madness(1),
				author$project$Database$Passive$riding(4),
				author$project$Database$Passive$divinity(13)
			]),
		T: {
			bf: 2,
			bp: 'The Inescapable Net of Heaven',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: true,
			ay: 7,
			bE: 'Anti-Army',
			bI: 'Vengeful Lightning of the Ox-King',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 100, 300))
				]),
			bZ: 7
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 18),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000))
					]),
				aA: 58,
				bI: 'Eternal Arms Mastery',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)
					]),
				aA: 9,
				bI: 'Mana Burst (Lightning)',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(6)),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(9)),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 11,
				bI: 'Mystic Slayer',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1786, bA: 1980},
			bx: {a9: 12650, bA: 14790},
			bG: {a9: 11556, bA: 13500}
		},
		ca: _List_fromArray(
			[10, 7, 18, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 0,
		bi: 6,
		bk: 9,
		bm: 52,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.03, bN: 5, b1: 5, b2: 9},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 51,
		aD: true,
		bI: 'Sakata Kintoki',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(18),
				author$project$Database$Passive$divinity(16)
			]),
		T: {
			bf: 2,
			bp: 'Golden Impact',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Golden Spark',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					100,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			bZ: 14
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 63,
				bI: 'Monstrous Strength',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 38,
				bI: 'Animal Communication',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 60, 120)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 27,
				bI: 'Natural Body',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1964, bA: 1782},
			bx: {a9: 13915, bA: 13311},
			bG: {a9: 12712, bA: 12150}
		},
		ca: _List_fromArray(
			[15, 7, 3, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				])),
		ba: 1,
		bi: 6,
		bk: 15,
		bm: 45.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.5, bN: 5, b1: 4.9, b2: 9},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 52,
		aD: false,
		bI: 'Vlad III',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(1)
			]),
		T: {
			bf: 1,
			bp: 'Bloody Monster King',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Personnel',
			bI: 'Kazikli Bey',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 12
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 48),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 54)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 80, 100),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 12,
				bI: 'Vampirism',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 16, 24))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 13
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1777, bA: 2019},
			bx: {a9: 12587, bA: 15086},
			bG: {a9: 11499, bA: 13770}
		},
		ca: _List_fromArray(
			[15, 22, 3, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				])),
		ba: 0,
		bi: 6,
		bk: 30,
		bm: 56.8,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.77, bN: 5, b1: 5, b2: 10},
		ay: {a8: 2, be: 1, bs: 5, bY: 6},
		aB: 97,
		aD: false,
		bI: 'Florence Nightingale',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(1)
			]),
		T: {
			bf: 1,
			bp: 'I Will Abstain From All Poisons and Evils',
			ao: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 3000, 5000))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Nightingale Pledge',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$NPDown,
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			bZ: 13
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 11),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 4000))
					]),
				aA: 23,
				bI: 'Nurse of Steel',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(12)),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$DefenseUp,
							author$project$Database$Skill$VsTrait(12)),
						A2(author$project$Database$Skill$Range, 15, 25))
					]),
				aA: 11,
				bI: 'Understanding of the Human Body',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Angel\'s Cry',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1573, bA: 2232},
			bx: {a9: 11148, bA: 16675},
			bG: {a9: 10184, bA: 15221}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 6]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 2,
		bi: 6,
		bk: 9,
		bm: 39,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.07, bN: 5, b1: 5, b2: 10},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 47,
		aD: false,
		bI: 'Heracles',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(9),
				author$project$Database$Passive$divinity(5)
			]),
		T: {
			bf: 2,
			bp: 'Shooting Hundred Heads',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 15,
			bE: 'Unknown',
			bI: 'Nine Lives',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 45),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10.5, 31)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 21, 42))
					]),
				aA: 63,
				bI: 'Valor',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 9
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1775, bA: 1652},
			bx: {a9: 12901, bA: 12521},
			bG: {a9: 10655, bA: 10327}
		},
		ca: _List_fromArray(
			[15, 7, 22, 11])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		ba: 1,
		bi: 6,
		bk: 24,
		bm: 58.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.83, bN: 5, b1: 4.9, b2: 10},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 82,
		aD: false,
		bI: 'Frankenstein',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(16)
			]),
		T: {
			bf: 0,
			bp: 'Lightning Tree of Crucifixion',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1300)),
					A2(
					author$project$Database$Skill$Chance,
					500,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 2, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Blasted Tree',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 8
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 25, 45))
					]),
				aA: 41,
				bI: 'Galvanism',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Chance,
						60,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 59,
				bI: 'Wail of the Living Dead',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$Burn,
						author$project$Database$Skill$Flat(300))
					]),
				aA: 4,
				bI: 'Overload',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1573, bA: 1710},
			bx: {a9: 11431, bA: 12958},
			bG: {a9: 9441, bA: 10687}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 1,
		bi: 6,
		bk: 29,
		bm: 52,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.03, bN: 5, b1: 4.9, b2: 10},
		ay: {a8: 2, be: 1, bs: 5, bY: 4},
		aB: 116,
		aD: false,
		bI: 'Ibaraki-Douji',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(9)
			]),
		T: {
			bf: 2,
			bp: 'Rashoumon Dai Engi',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Great Grudge of Rashomon',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 63,
				bI: 'Demonic Nature of Oni',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 23,
				bI: 'Disengage',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1606, bA: 1752},
			bx: {a9: 11667, bA: 13282},
			bG: {a9: 9636, bA: 10954}
		},
		ca: _List_fromArray(
			[10, 6, 22])
	},
		{
		a6: _List_fromArray(
			[0, 6]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 1,
		bi: 6,
		bk: 14,
		bm: 52,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.5, bN: 5, b1: 5, b2: 10},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 48,
		aD: false,
		bI: 'Lancelot',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(18),
				author$project$Database$Passive$madness(13)
			]),
		T: {
			bf: 0,
			bp: 'A Knight Does Not Die with Empty Hands',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: true,
			ay: 10,
			bE: 'Anti-Personnel',
			bI: 'Knight of Owner',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 3
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 15),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 48)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000))
					]),
				aA: 58,
				bI: 'Eternal Arms Mastery',
				bZ: 4
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 56,
				bI: 'Protection of the Spirits',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 41,
				bI: 'Mana Reversal',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1746, bA: 1652},
			bx: {a9: 12685, bA: 12521},
			bG: {a9: 10477, bA: 10327}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 30)
				])),
		ba: 1,
		bi: 6,
		bk: 4,
		bm: 58.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.68, bN: 5, b1: 4.9, b2: 10},
		ay: {a8: 3, be: 1, bs: 4, bY: 3},
		aB: 89,
		aD: false,
		bI: 'Beowulf',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(19)
			]),
		T: {
			bf: 2,
			bp: 'Conflict Wellspring',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 700, 1100))
				]),
			bu: false,
			ay: 12,
			bE: 'Anti-Personnel',
			bI: 'Grendel Buster',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 18),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 48)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 63,
				bI: 'Berserk',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 9
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 4, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1707, bA: 1652},
			bx: {a9: 12407, bA: 12521},
			bG: {a9: 10247, bA: 10327}
		},
		ca: _List_fromArray(
			[15, 22, 3, 14])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 1,
		bi: 6,
		bk: 9,
		bm: 39,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.71, bN: 5, b1: 5, b2: 10},
		ay: {a8: 3, be: 2, bs: 3, bY: 2},
		aB: 58,
		aD: false,
		bI: 'Tamamo Cat',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(13)
			]),
		T: {
			bf: 0,
			bp: 'Opulence of Sun and Shine and Catnap',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Chance,
					500,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 2, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Personnel',
			bI: 'Napping in the Dazzling Sunshine and Feasting',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 2000, 6000))
				]),
			bZ: 16
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						2,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 63,
				bI: 'Monstrous Strength',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 40, 60),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1))
					]),
				aA: 12,
				bI: 'Curse',
				bZ: 18
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1504, bA: 1833},
			bx: {a9: 10929, bA: 13893},
			bG: {a9: 9026, bA: 11458}
		},
		ca: _List_fromArray(
			[10, 2, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 0,
		bi: 6,
		bk: 8,
		bm: 50.3,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.04, bN: 5, b1: 5, b2: 9},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 49,
		aD: false,
		bI: 'Lu Bu Fengxian',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(5)
			]),
		T: {
			bf: 2,
			bp: 'Five Weapons of the War God',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel/Anti-Army/Anti-Fortress',
			bI: 'God Force',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					30,
					70,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			bZ: 5
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 27)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				aA: 63,
				bI: 'Valor',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$BuffFail,
						author$project$Database$Skill$Flat(50))
					]),
				aA: 63,
				bI: 'Defiant',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						author$project$Database$Skill$Flat(3000)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Others,
						1,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(20))
					]),
				aA: 4,
				bI: 'Chaotic Villain',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1507, bA: 1494},
			bx: {a9: 10988, bA: 11256},
			bG: {a9: 8119, bA: 8302}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				])),
		ba: 0,
		bi: 6,
		bk: 6,
		bm: 65,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.01, bN: 5, b1: 4.9, b2: 9},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 50,
		aD: false,
		bI: 'Spartacus',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(1)
			]),
		T: {
			bf: 2,
			bp: 'Howl of the Wounded Beast',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Crying Warmonger',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 3000, 7000))
				]),
			bZ: 5
		},
		aU: 1,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				aA: 24,
				bI: 'Honor of Suffering',
				bZ: 8
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 32,
				bI: 'Unyielding Will',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 9,
				bI: 'Triumphant Return of the Sword',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 922, bA: 1544},
			bx: {a9: 7883, bA: 11904},
			bG: {a9: 5073, bA: 7722}
		},
		ca: _List_fromArray(
			[15, 19, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3),
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4)
				])),
		ba: 1,
		bi: 6,
		bk: 1,
		bm: 58.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.68, bN: 5, b1: 4.9, b2: 9},
		ay: {a8: 3, be: 1, bs: 3, bY: 2},
		aB: 53,
		aD: false,
		bI: 'Asterios',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(9)
			]),
		T: {
			bf: 1,
			bp: 'Eternally Unchanging Labyrinth',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					6,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 20)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(40))
				]),
			bu: false,
			ay: 0,
			bE: 'Maze',
			bI: 'Chaos Labyrinth',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					6,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 1
		},
		aU: 1,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 63,
				bI: 'Monstrous Strength',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 27,
				bI: 'Natural Demon',
				bZ: 3
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 58,
				bI: 'Labrys of the Abyss',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1097, bA: 1320},
			bx: {a9: 9381, bA: 10181},
			bG: {a9: 6037, bA: 6604}
		},
		ca: _List_fromArray(
			[15, 22, 11])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 16)
				])),
		ba: 1,
		bi: 6,
		bk: 3,
		bm: 65,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: true,
		S: {bM: 2.03, bN: 5, b1: 4.9, b2: 9},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 56,
		aD: false,
		bI: 'Kiyohime',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(1)
			]),
		T: {
			bf: 2,
			bp: 'Tenshin Kasyou Zanmai Achieving Acala\'s Samadhi',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Personnel',
			bI: 'Transforming, Flame-Emitting Meditation',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					80,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					10,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 900))
				]),
			bZ: 1
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 16, 24))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						4,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 12, 24)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20))
					]),
				aA: 51,
				bI: 'Stalking',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				aA: 9,
				bI: 'Flame-Coloured Kiss',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1233, bA: 1649},
			bx: {a9: 8992, bA: 12428},
			bG: {a9: 6644, bA: 9166}
		},
		ca: _List_fromArray(
			[10, 8, 22])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				])),
		ba: 0,
		bi: 6,
		bk: 2,
		bm: 58.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.02, bN: 5, b1: 4.9, b2: 9},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 57,
		aD: false,
		bI: 'Eric Bloodaxe',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(9)
			]),
		T: {
			bf: 2,
			bp: 'Bloody Coronation',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(1000))
				]),
			bu: true,
			ay: 5,
			bE: 'Anti-Personnel',
			bI: 'Bloodbath Crown',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			bZ: 9
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					3),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						2,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						2,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 60,
				bI: 'Supporting Curse',
				bZ: 12
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 4, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MaxHP,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 6,
				bI: 'Half-Dead Bloodaxe',
				bZ: 4
			}
			]),
		a1: {
			bb: {a9: 1116, bA: 1447},
			bx: {a9: 9115, bA: 11095},
			bG: {a9: 6290, bA: 7688}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				])),
		ba: 0,
		bi: 6,
		bk: 3,
		bm: 65,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.67, bN: 5, b1: 5, b2: 9},
		ay: {a8: 3, be: 1, bs: 3, bY: 2},
		aB: 55,
		aD: false,
		bI: 'Darius III',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(9)
			]),
		T: {
			bf: 2,
			bp: 'Immortal Cavalry of Ten Thousand Rank',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Army',
			bI: 'Athanaton Ten Thousand',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 5
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 23,
				bI: 'Disengage',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1412, bA: 1577},
			bx: {a9: 10297, bA: 11881},
			bG: {a9: 7608, bA: 8763}
		},
		ca: _List_fromArray(
			[15, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					3),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				])),
		ba: 0,
		bi: 6,
		bk: 12,
		bm: 56.8,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.68, bN: 5, b1: 5, b2: 9},
		ay: {a8: 3, be: 1, bs: 3, bY: 2},
		aB: 54,
		aD: false,
		bI: 'Caligula',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(4)
			]),
		T: {
			bf: 1,
			bp: 'Devour my Heart, Moonlight',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					150,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Flucticulus Diana',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					70,
					90,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
				]),
			bZ: 13
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(6),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(6),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 9),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 63,
				bI: 'Sadistic Streak',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 23,
				bI: 'Imperial Privilege',
				bZ: 5
			},
				{
				bg: 5,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritHealth,
						author$project$Database$Skill$Flat(500))
					]),
				aA: 9,
				bI: 'Glory of Past Days',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1374, bA: 1211},
			bx: {a9: 9899, bA: 10540},
			bG: {a9: 6831, bA: 7303}
		},
		ca: _List_fromArray(
			[15, 19, 22, 14])
	}
	]);
var author$project$Database$Base$IconBeamDown = 5;
var author$project$Database$Base$IconHoodX = 29;
var author$project$Database$Base$IconSunUp = 62;
var author$project$Database$Base$IconPotion = 42;
var author$project$Database$Passive$itemConstruction = A3(
	author$project$Database$Passive$passive,
	'Item Construction',
	42,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffSuccess,
			_List_fromArray(
				[
					_Utils_Tuple2(1, 12),
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(8, 9),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(16, 4)
				]))
		]));
var author$project$Database$Passive$itemConstructionFalse = A3(
	author$project$Database$Passive$passive,
	'Item Construction (False)',
	42,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffSuccess,
			_List_fromArray(
				[
					_Utils_Tuple2(5, 10)
				]))
		]));
var author$project$Database$Passive$unlimitedManaSupply = A3(
	author$project$Database$Passive$passive,
	'Unlimited Mana Supply',
	40,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$GaugePerTurn,
			_List_fromArray(
				[
					_Utils_Tuple2(13, 3)
				]))
		]));
var author$project$Database$Skill$BuffBlock = {$: 2};
var author$project$Database$Skill$Cooldowns = {$: 3};
var author$project$Database$Skill$Cure = {$: 4};
var author$project$Database$Skill$Fear = {$: 15};
var author$project$Database$Skill$OverChance = {$: 22};
var author$project$Database$Skill$Overcharge = {$: 27};
var author$project$Database$Servant$Caster$casters = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10)
				])),
		ba: 0,
		bi: 3,
		bk: 15,
		bm: 34.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.64, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 37,
		aD: false,
		bI: 'Zhuge Liang (Lord El-Melloi II)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$itemConstruction(9),
				author$project$Database$Passive$territoryCreation(5)
			]),
		T: {
			bf: 1,
			bp: 'Stone Sentinel Maze',
			ao: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$DefenseDown),
					A2(author$project$Database$Skill$Range, 10, 30)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$Curse),
					author$project$Database$Skill$Flat(500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$GaugeDown,
					author$project$Database$Skill$Flat(1))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Unreturning Formation',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					80,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			bZ: 14
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(30))
					]),
				aA: 17,
				bI: 'Discerning Eye',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DamageDown,
						A2(author$project$Database$Skill$Range, 200, 500)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 52,
				bI: 'Tactician\'s Advice',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DamageUp,
						A2(author$project$Database$Skill$Range, 200, 500)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 63,
				bI: 'Tactician\'s Command',
				bZ: 4
			}
			]),
		a1: {
			bb: {a9: 1637, bA: 2091},
			bx: {a9: 11601, bA: 15621},
			bG: {a9: 10598, bA: 14259}
		},
		ca: _List_fromArray(
			[15, 22, 3, 17])
	},
		{
		a6: _List_fromArray(
			[1, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 12)
				])),
		ba: 2,
		bi: 3,
		bk: 5,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.32, bN: 3, b1: 11, b2: 49},
		ay: {a8: 5, be: 1, bs: 4, bY: 3},
		aB: 62,
		aD: false,
		bI: 'Tamamo-no-Mae',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(13),
				author$project$Database$Passive$divinity(5)
			]),
		T: {
			bf: 1,
			bp: 'on the Weight Stone under the Sunlit Watery Heavens',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Cooldowns,
					author$project$Database$Skill$Flat(1)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 2000, 3000))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Eightfold Blessings of Amaterasu',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 25, 50))
				]),
			bZ: 16
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 22),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 80, 100),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1))
					]),
				aA: 12,
				bI: 'Curse',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 2,
				bI: 'Fox\'s Wedding',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1629, bA: 2091},
			bx: {a9: 11544, bA: 15621},
			bG: {a9: 10546, bA: 14259}
		},
		ca: _List_fromArray(
			[10, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 9)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 5)
				])),
		ba: 0,
		bi: 3,
		bk: 15,
		bm: 34.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.82, bN: 3, b1: 11, b2: 52},
		ay: {a8: 2, be: 1, bs: 6, bY: 3},
		aB: 113,
		aD: false,
		bI: 'Xuanzang Sanzang',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(4),
				author$project$Database$Passive$divinity(16)
			]),
		T: {
			bf: 2,
			bp: 'Wu Xing Shan: Shijia Rulai Zhang',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 12,
			bE: 'Anti-Army',
			bI: 'Five Elements Mountain Buddha Palm',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					1,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 80, 120))
				]),
			bZ: 9
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 18),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 50, 80)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 38,
				bI: 'Rapid Sutra Chanting',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DamageDown,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				aA: 65,
				bI: 'Captivating Rosy Cheeks',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 1, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)
					]),
				aA: 41,
				bI: 'Sanzang\'s Teachings',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1801, bA: 1901},
			bx: {a9: 12761, bA: 14204},
			bG: {a9: 11658, bA: 12965}
		},
		ca: _List_fromArray(
			[10, 7, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 4),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 5)
				])),
		ba: 3,
		bi: 3,
		bk: 30,
		bm: 34.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.54, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 3, be: 1, bs: 4, bY: 4},
		aB: 127,
		aD: true,
		bI: 'Leonardo da Vinci',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$itemConstruction(5)
			]),
		T: {
			bf: 1,
			bp: 'Omnipotent Man',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(10))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Unit/Anti-Army',
			bI: 'Uomo Universale',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 18),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(85),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(85),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$NPUp),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 32,
				bI: 'Inherent Wisdom',
				bZ: 1
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 2, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$GaugePerTurn,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 24,
				bI: 'Golden Rule (Body)',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 38,
				bI: 'Pioneer of the Stars',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1637, bA: 2091},
			bx: {a9: 11601, bA: 15621},
			bG: {a9: 10598, bA: 14259}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 9)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 5)
				])),
		ba: 0,
		bi: 3,
		bk: 10,
		bm: 42,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.32, bN: 3, b1: 10.7, b2: 51},
		ay: {a8: 5, be: 1, bs: 5, bY: 3},
		aB: 136,
		aD: true,
		bI: 'Illyasviel von Einzbern',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$unlimitedManaSupply(13)
			]),
		T: {
			bf: 2,
			bp: 'Multiple Ensemble Saturated Bombardment',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				]),
			bu: true,
			ay: 4,
			bE: 'Anti-Unit',
			bI: 'Quintett Feuer',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 20, 80))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 18),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Cheerful-Type Mystic Code',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 28))
					]),
				aA: 49,
				bI: 'Child of Nature',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A2(
						author$project$Database$Skill$Chance,
						70,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)),
						A3(
						elm$core$Basics$composeL,
						A2(
							elm$core$Basics$composeL,
							author$project$Database$Skill$Chance(70),
							author$project$Database$Skill$Times(1)),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000))
					]),
				aA: 23,
				bI: 'Suspicious Medicine',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1677, bA: 2027},
			bx: {a9: 11885, bA: 15146},
			bG: {a9: 10857, bA: 13825}
		},
		ca: _List_fromArray(
			[10, 17, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				])),
		ba: 1,
		bi: 3,
		bk: 9,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.4, bN: 3, b1: 10.7, b2: 51},
		ay: {a8: 4, be: 3, bs: 5, bY: 4},
		aB: 67,
		aD: false,
		bI: 'Medea (Lily)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9),
				author$project$Database$Passive$itemConstruction(9)
			]),
		T: {
			bf: 1,
			bp: 'All Flaws Must Be Repaired',
			ao: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 4000, 6000))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Magic',
			bI: 'Pain Breaker',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 40, 120))
				]),
			bZ: 13
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 80, 150))
					]),
				aA: 38,
				bI: 'Rapid Words of Divine',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$Cure, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 3000))
					]),
				aA: 6,
				bI: 'Poison Resistance',
				bZ: 3
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$HealingReceived,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 23,
				bI: 'Ephemeral Love',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1294, bA: 2091},
			bx: {a9: 9403, bA: 15847},
			bG: {a9: 7766, bA: 13070}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: author$project$Database$Servant$Welfare('Twinkle Candy'),
		ba: 0,
		bi: 3,
		bk: 4,
		bm: 42,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: true,
		S: {bM: 1.6, bN: 3, b1: 10.8, b2: 49},
		ay: {a8: 1, be: 1, bs: 4, bY: 2},
		aB: 61,
		aD: true,
		bI: 'Elisabeth Bathory (Halloween)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9),
				author$project$Database$Passive$itemConstruction(5)
			]),
		T: {
			bf: 2,
			bp: 'First Class Demon Daughter of Fresh Blood',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Báthory Halloween Erzsébet',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 19
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 6, 12)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 57,
				bI: 'Innocent Monster',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 25, 45)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						10,
						author$project$Database$Skill$Burn,
						author$project$Database$Skill$Flat(300))
					]),
				aA: 9,
				bI: 'Mana Burst (Pumpkin)',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(8))
					]),
				aA: 32,
				bI: 'Performance Continuation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1436, bA: 1824},
			bx: {a9: 10432, bA: 13827},
			bG: {a9: 8616, bA: 11404}
		},
		ca: _List_fromArray(
			[10, 8, 22])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				])),
		ba: 0,
		bi: 3,
		bk: 4,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.54, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 3, be: 1, bs: 3, bY: 3},
		aB: 74,
		aD: false,
		bI: 'Nursery Rhyme',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5)
			]),
		T: {
			bf: 1,
			bp: 'A Story For Somebody\'s Sake',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 900)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Personnel',
			bI: 'Nursery Rhyme',
			bS: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(author$project$Database$Skill$Chances, 60, 100),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			bZ: 13
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				aA: 17,
				bI: 'Self-Modification',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				aA: 38,
				bI: 'Meanwhile',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1438, bA: 1901},
			bx: {a9: 10448, bA: 14407},
			bG: {a9: 8629, bA: 11882}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				])),
		ba: 0,
		bi: 3,
		bk: 4,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.45, bN: 3, b1: 10.7, b2: 51},
		ay: {a8: 3, be: 1, bs: 3, bY: 6},
		aB: 100,
		aD: false,
		bI: 'Helena Blavatsky',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$itemConstruction(9)
			]),
		T: {
			bf: 1,
			bp: 'Venusian God, Heavenly Lord of the Flame',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Sanat Kumara',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 50)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 9),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 38,
				bI: 'Mana Tuning',
				bZ: 13
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						5,
						author$project$Database$Skill$StarsPerTurn,
						author$project$Database$Skill$Flat(5)),
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$NPUp),
						author$project$Database$Skill$Flat(50))
					]),
				aA: 57,
				bI: 'Mahatma',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 15, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 15, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 15, 20))
					]),
				aA: 0,
				bI: 'Search for the Unknown',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1438, bA: 1901},
			bx: {a9: 10448, bA: 14407},
			bG: {a9: 8629, bA: 11882}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 24),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 4),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 6)
				])),
		ba: 1,
		bi: 3,
		bk: 9,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.54, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 3, be: 3, bs: 5, bY: 4},
		aB: 120,
		aD: false,
		bI: 'Nitocris',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$itemConstruction(8),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 1,
			bp: 'Nether Mirror\'s Precious Bible',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750))
				]),
			bu: true,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Anpu Neb Ta Djeser',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			bZ: 8
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 60)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$KillUp,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 47,
				bI: 'Egyptian Magecraft',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 60, 120))
					]),
				aA: 38,
				bI: 'Rapid Words of Divine',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				aA: 32,
				bI: 'Affection of the Sky God',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1510, bA: 1806},
			bx: {a9: 10970, bA: 13686},
			bG: {a9: 9060, bA: 11288}
		},
		ca: _List_fromArray(
			[10, 7, 14, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: author$project$Database$Servant$Welfare('Crystal Ball'),
		ba: 2,
		bi: 3,
		bk: 24,
		bm: 34.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: true,
		S: {bM: 0.42, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 3, be: 3, bs: 4, bY: 3},
		aB: 111,
		aD: true,
		bI: 'Irisviel (Dress of Heaven)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9),
				author$project$Database$Passive$coreOfGoddess(13)
			]),
		T: {
			bf: 1,
			bp: 'Sing, O White Grail',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 2000, 3000))
				]),
			bu: false,
			ay: 0,
			bE: 'Magecraft',
			bI: 'Song of Grail',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$Guts,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 12),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$HealUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 25,
				bI: 'Sacrificial Resolve',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 49,
				bI: 'Child of Nature',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 3000))
					]),
				aA: 23,
				bI: 'Magical Healing',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1372, bA: 1996},
			bx: {a9: 9973, bA: 15127},
			bG: {a9: 8237, bA: 12476}
		},
		ca: _List_fromArray(
			[10, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 4)
				])),
		ba: 0,
		bi: 3,
		bk: 9,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.32, bN: 3, b1: 10.9, b2: 50},
		ay: {a8: 5, be: 1, bs: 4, bY: 3},
		aB: 130,
		aD: true,
		bI: 'Marie Antoinette (Caster)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$itemConstruction(16)
			]),
		T: {
			bf: 1,
			bp: 'The Lovable Brilliance, to Eternity',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Army/Anti-Populace',
			bI: 'Crystal Dress',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9.5, 19.5)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(15),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 21, 41))
					]),
				aA: 63,
				bI: 'Beach Flower',
				bZ: 4
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 10)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				aA: 57,
				bI: 'Sparkling Sunflower',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 49,
				bI: 'Beautiful Princess (Sea)',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1510, bA: 1824},
			bx: {a9: 10970, bA: 13827},
			bG: {a9: 9060, bA: 11404}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 6)
				])),
		ba: 0,
		bi: 3,
		bk: 24,
		bm: 60,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.51, bN: 3, b1: 10.6, b2: 51},
		ay: {a8: 3, be: 3, bs: 5, bY: 3},
		aB: 103,
		aD: false,
		bI: 'Thomas Edison',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(16),
				author$project$Database$Passive$itemConstruction(16)
			]),
		T: {
			bf: 1,
			bp: 'Ｗ・Ｆ・Ｄ',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Populace',
			bI: 'World Faith Domination',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 1
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 16, 24))
					]),
				aA: 52,
				bI: 'Morph',
				bZ: 13
			},
				{
				bg: 12,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						5,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 10)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$GaugePerTurn,
						A2(author$project$Database$Skill$Range, 5, 10))
					]),
				aA: 57,
				bI: 'Mass Production',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$Overcharge,
						author$project$Database$Skill$Flat(2)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 62,
				bI: 'Concept Improvement',
				bZ: 4
			}
			]),
		a1: {
			bb: {a9: 1325, bA: 1901},
			bx: {a9: 9628, bA: 14407},
			bG: {a9: 7952, bA: 11882}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					3),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				])),
		ba: 0,
		bi: 3,
		bk: 12,
		bm: 30,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.66, bN: 3, b1: 10.8, b2: 48},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 33,
		aD: false,
		bI: 'Hans Christian Andersen',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(16),
				author$project$Database$Passive$itemConstruction(13)
			]),
		T: {
			bf: 1,
			bp: 'A Story Just For You',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$OverChance,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Personnel',
			bI: 'Märchen Meines Lebens',
			bS: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$AttackUp),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$DefenseUp),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$StarUp),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			bZ: 12
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					3),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 18),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 10, 40))
					]),
				aA: 17,
				bI: 'Human Observation',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 50, 75))
					]),
				aA: 38,
				bI: 'Rapid Casting',
				bZ: 18
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(14))
					]),
				aA: 57,
				bI: 'Innocent Monster',
				bZ: 16
			}
			]),
		a1: {
			bb: {a9: 1021, bA: 1597},
			bx: {a9: 8344, bA: 12244},
			bG: {a9: 5758, bA: 8484}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[1, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8)
				])),
		ba: 1,
		bi: 3,
		bk: 13,
		bm: 34.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.64, bN: 3, b1: 10.9, b2: 50},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 31,
		aD: false,
		bI: 'Medea',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$itemConstruction(5)
			]),
		T: {
			bf: 1,
			bp: 'All Spells Must Be Broken',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 900)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Thaumaturgy',
			bI: 'Rule Breaker',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 100))
				]),
			bZ: 12
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 16)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 80, 150))
					]),
				aA: 38,
				bI: 'Rapid Words of Divine',
				bZ: 5
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 2500))
					]),
				aA: 23,
				bI: 'Argon Coin',
				bZ: 0
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Ally, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 6,
				bI: 'Circe\'s Teaching',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1377, bA: 1555},
			bx: {a9: 10039, bA: 11719},
			bG: {a9: 7418, bA: 8643}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					3),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				])),
		ba: 0,
		bi: 3,
		bk: 12,
		bm: 45,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.59, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 34,
		aD: false,
		bI: 'William Shakespeare',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(13)
			]),
		T: {
			bf: 2,
			bp: 'When the Curtain Rises, the Applause Shall Be As Ten Thousand Thunders!',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Personnel',
			bI: 'First Folio',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$Stun,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			bZ: 9
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					3),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 18),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 9,
				bI: 'Enchant',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				aA: 49,
				bI: 'Self-Preservation',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 38,
				bI: 'King\'s Men',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1028, bA: 1520},
			bx: {a9: 8402, bA: 11661},
			bG: {a9: 5798, bA: 8080}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				])),
		ba: 3,
		bi: 3,
		bk: 1,
		bm: 40.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.6, bN: 3, b1: 11, b2: 49},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 36,
		aD: false,
		bI: 'Wolfgang Amadeus Mozart',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9)
			]),
		T: {
			bf: 1,
			bp: 'Funeral Music for the Death God',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$OverChance,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Requiem for Death',
			bS: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$AttackDown),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$DefenseDown),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 9
		},
		aU: 1,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 22, 44))
					]),
				aA: 2,
				bI: 'Protection of Muse (Fake)',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 5,
				bI: 'Aesthetic Appreciation',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 55,
				bI: 'Eine kleine Nachtmusik',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 944, bA: 1425},
			bx: {a9: 8072, bA: 10990},
			bG: {a9: 5195, bA: 7129}
		},
		ca: _List_fromArray(
			[15, 3])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 0,
		bi: 3,
		bk: 13,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.91, bN: 3, b1: 10.8, b2: 48},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 80,
		aD: false,
		bI: 'Charles Babbage',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$itemConstructionFalse(5)
			]),
		T: {
			bf: 2,
			bp: 'Glorious World of Fiery Desolation',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Army',
			bI: 'Dimension of Steam',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			bZ: 1
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				aA: 41,
				bI: 'Concentration',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)
					]),
				aA: 63,
				bI: 'Mechanized Armor',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$Burn,
						author$project$Database$Skill$Flat(300))
					]),
				aA: 4,
				bI: 'Overload',
				bZ: 16
			}
			]),
		a1: {
			bb: {a9: 1113, bA: 1959},
			bx: {a9: 8115, bA: 14761},
			bG: {a9: 5996, bA: 10887}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				])),
		ba: 2,
		bi: 3,
		bk: 8,
		bm: 42,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: true,
		S: {bM: 1.6, bN: 3, b1: 10.9, b2: 49},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 38,
		aD: false,
		bI: 'Cu Chulainn (Caster)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 2,
			bp: 'Cage of Scorching Flames',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Wicker Man',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					10,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 300, 1500))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 17,
				bI: 'Rune Spell',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 15,
				bI: 'Divine Protection from Arrows',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				aA: 6,
				bI: 'Disengage',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1222, bA: 1728},
			bx: {a9: 8905, bA: 13022},
			bG: {a9: 6580, bA: 9604}
		},
		ca: _List_fromArray(
			[15, 7, 3, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				])),
		ba: 1,
		bi: 3,
		bk: 8,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.81, bN: 3, b1: 11, b2: 50},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 35,
		aD: false,
		bI: 'Mephistopheles',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(12),
				author$project$Database$Passive$itemConstruction(9)
			]),
		T: {
			bf: 2,
			bp: 'Lullaby Explosive',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Ticktock Bomb',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 4
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1))
					]),
				aA: 12,
				bI: 'Curse',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(18))
					]),
				aA: 57,
				bI: 'Innocent Monster',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 0, author$project$Database$Skill$BuffBlock, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						5,
						author$project$Database$Skill$Curse,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				aA: 29,
				bI: 'Clown\'s Laughter',
				bZ: 4
			}
			]),
		a1: {
			bb: {a9: 1270, bA: 1659},
			bx: {a9: 9255, bA: 12495},
			bG: {a9: 6839, bA: 9216}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				])),
		ba: 0,
		bi: 3,
		bk: 3,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.55, bN: 3, b1: 10.8, b2: 50},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 79,
		aD: false,
		bI: 'Paracelsus von Hohenheim',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$itemConstruction(1)
			]),
		T: {
			bf: 1,
			bp: 'Magic Sword of the Elementalist',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Sword of Paracelsus',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 4
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 48)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 55, 80))
					]),
				aA: 38,
				bI: 'Rapid Casting',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 2,
				bI: 'Elemental',
				bZ: 4
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 32,
				bI: 'Philosopher\'s Stone',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1246, bA: 1711},
			bx: {a9: 9082, bA: 12889},
			bG: {a9: 6711, bA: 9506}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		ba: 0,
		bi: 3,
		bk: 3,
		bm: 40.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: true,
		S: {bM: 0.9, bN: 3, b1: 11, b2: 49},
		ay: {a8: 2, be: 1, bs: 4, bY: 2},
		aB: 104,
		aD: false,
		bI: 'Geronimo',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9),
				author$project$Database$Passive$itemConstruction(13)
			]),
		T: {
			bf: 1,
			bp: 'Creator of The Earth and Its People',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 700)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Tsago Degi Naleya',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 1000, 2000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Bloody Devil',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 2,
				bI: 'Shamanism',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 45,
				bI: 'Guardian Beast',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1273, bA: 1642},
			bx: {a9: 9280, bA: 12369},
			bG: {a9: 6857, bA: 9123}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 0,
		bi: 3,
		bk: 13,
		bm: 48,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.58, bN: 3, b1: 10.8, b2: 48},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 32,
		aD: false,
		bI: 'Gilles de Rais (Caster)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(9)
			]),
		T: {
			bf: 2,
			bp: 'Textbook of the Spiral Sunken Castle',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Prelati\'s Spellbook',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 4
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(3),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(3),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalSuccess,
						A2(author$project$Database$Skill$Range, 5, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 54,
				bI: 'Mental Corruption',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 5.5, 11))
					]),
				aA: 5,
				bI: 'Aesthetic Appreciation',
				bZ: 19
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						5,
						author$project$Database$Skill$Fear,
						A2(author$project$Database$Skill$Range, 30, 40))
					]),
				aA: 59,
				bI: 'Evil Eye of the Abyss',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1209, bA: 1711},
			bx: {a9: 8816, bA: 12889},
			bG: {a9: 6514, bA: 9506}
		},
		ca: _List_fromArray(
			[15, 22])
	}
	]);
var author$project$Database$Base$Avenger = 9;
var author$project$Database$Base$Demon = 5;
var author$project$Database$Base$IconFlex = 21;
var author$project$Database$Base$Ruler = 8;
var author$project$Database$Base$Shielder = 7;
var author$project$Database$Base$Undead = 21;
var author$project$Database$Base$pairWith = F2(
	function (val, construc) {
		return elm$core$List$map(
			A2(
				elm$core$Basics$composeR,
				construc,
				function (x) {
					return _Utils_Tuple2(x, val);
				}));
	});
var author$project$Database$Base$IconAvenger = 3;
var author$project$Database$Passive$avenger = A3(
	author$project$Database$Passive$passive,
	'Avenger',
	3,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Others,
			author$project$Database$Skill$DebuffResist,
			_List_fromArray(
				[
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(13, 6)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$NPFromDamage,
			_List_fromArray(
				[
					_Utils_Tuple2(5, 20),
					_Utils_Tuple2(9, 18),
					_Utils_Tuple2(13, 16)
				]))
		]));
var author$project$Database$Base$IconEclipse = 16;
var author$project$Database$Passive$oblivionCorrection = A3(
	author$project$Database$Passive$passive,
	'Oblivion Correction',
	16,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$CritUp,
			_List_fromArray(
				[
					_Utils_Tuple2(5, 10),
					_Utils_Tuple2(9, 8),
					_Utils_Tuple2(13, 6)
				]))
		]));
var author$project$Database$Base$IconNiffin = 37;
var author$project$Database$Passive$selfRestoreMagic = A3(
	author$project$Database$Passive$passive,
	'Self-Restoration (Magical Energy)',
	37,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$GaugePerTurn,
			_List_fromArray(
				[
					_Utils_Tuple2(4, 4),
					_Utils_Tuple2(5, 3.8),
					_Utils_Tuple2(9, 3.5),
					_Utils_Tuple2(13, 3.3),
					_Utils_Tuple2(16, 3),
					_Utils_Tuple2(16, 2)
				]))
		]));
var author$project$Database$Servant$Clear = F4(
	function (a, b, c, d) {
		return {$: 1, a: a, b: b, c: c, d: d};
	});
var author$project$Database$Skill$AMinus = 6;
var author$project$Database$Skill$Avenge = {$: 1};
var author$project$Database$Servant$Extra$extras = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[0, 1, 2])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[4, 3, 5, 6])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[0, 1, 2])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[4, 3, 5, 6]))),
		ba: 3,
		bi: 8,
		bk: 10,
		bm: 21,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 0.76, bN: 3, b1: 10.1, b2: 99},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 59,
		aD: false,
		bI: 'Jeanne d\'Arc',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(1)
			]),
		T: {
			bf: 1,
			bp: 'God is Here With Me',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 5, 25)),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 2, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 0,
			bE: 'Barrier',
			bI: 'Luminosité Eternelle',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					2,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			bZ: 6
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[0, 1, 2])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[4, 3, 5, 6])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[0, 1, 2])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[4, 3, 5, 6])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[0, 1, 2])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[4, 3, 5, 6])),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9))
					]),
				aA: 57,
				bI: 'Revelation',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 15, 30))
					]),
				aA: 5,
				bI: 'True Name Revelation',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						70,
						120,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				aA: 59,
				bI: 'Divine Judgement',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1482, bA: 2420},
			bx: {a9: 10501, bA: 18076},
			bG: {a9: 9593, bA: 16500}
		},
		ca: _List_fromArray(
			[10, 22, 20])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[2, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[0, 1, 4, 6])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[4, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[0, 1, 2, 6]))),
		ba: 0,
		bi: 8,
		bk: 10,
		bm: 21,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.86, bN: 3, b1: 10, b2: 100},
		ay: {a8: 2, be: 1, bs: 7, bY: 3},
		aB: 93,
		aD: true,
		bI: 'Amakusa Shirou',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5)
			]),
		T: {
			bf: 2,
			bp: 'Dual Arm, Zero-Order Convergence',
			ao: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Twin Arm—Big Crunch',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[4, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[0, 2, 1, 6])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[4, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[0, 2, 1, 6])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[4, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[0, 2, 1, 6])),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9))
					]),
				aA: 57,
				bI: 'Revelation',
				bZ: 5
			},
				{
				bg: 12,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$GaugePerTurn,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$EnemyType(21),
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$EnemyType(5),
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1))
					]),
				aA: 40,
				bI: 'Baptism Rite',
				bZ: 8
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						100,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				aA: 59,
				bI: 'Divine Judgement',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1695, bA: 2069},
			bx: {a9: 12011, bA: 15455},
			bG: {a9: 10972, bA: 14107}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		ba: 0,
		bi: 9,
		bk: 15,
		bm: 5.7,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.83, bN: 5, b1: 6, b2: 29},
		ay: {a8: 2, be: 4, bs: 7, bY: 3},
		aB: 106,
		aD: true,
		bI: 'Jeanne d\'Arc (Alter)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$avenger(9),
				author$project$Database$Passive$oblivionCorrection(5),
				author$project$Database$Passive$selfRestoreMagic(4)
			]),
		T: {
			bf: 2,
			bp: 'Howl Loudly, My Resentment',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 0, author$project$Database$Skill$BuffBlock, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Army',
			bI: 'La Grondement Du Haine',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 400, 800))
					]),
				aA: 17,
				bI: 'Self-Modification',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(8),
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 63,
				bI: 'Dragon Witch',
				bZ: 1
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritHealth,
						author$project$Database$Skill$Flat(1000))
					]),
				aA: 9,
				bI: 'Ephemeral Dream',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 2046, bA: 1724},
			bx: {a9: 14498, bA: 12885},
			bG: {a9: 13244, bA: 11761}
		},
		ca: _List_fromArray(
			[10, 22, 20])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		ba: 0,
		bi: 9,
		bk: 15,
		bm: 7,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 0.62, bN: 6, b1: 5.9, b2: 30},
		ay: {a8: 2, be: 3, bs: 5, bY: 4},
		aB: 96,
		aD: true,
		bI: 'Edmond Dantes',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$avenger(5),
				author$project$Database$Passive$oblivionCorrection(9),
				author$project$Database$Passive$selfRestoreMagic(16)
			]),
		T: {
			bf: 0,
			bp: 'Tyger, Tyger, Burning Bright',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 8,
			bE: 'Anti-Army',
			bI: 'Enfer Château d\'If',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 1500))
				]),
			bZ: 5
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 14, 32))
					]),
				aA: 50,
				bI: 'Iron Determination',
				bZ: 1
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 12,
				bI: 'Wisdom of Crisis',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1953, bA: 1785},
			bx: {a9: 13838, bA: 13340},
			bG: {a9: 12641, bA: 12177}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[0, 4, 6])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[1, 2, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[0, 4, 6])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[1, 2, 3, 5]))),
		ba: 0,
		bi: 8,
		bk: 4,
		bm: 21,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 0.76, bN: 3, b1: 10, b2: 102},
		ay: {a8: 3, be: 1, bs: 5, bY: 4},
		aB: 135,
		aD: true,
		bI: 'Martha (Ruler)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(1)
			]),
		T: {
			bf: 2,
			bp: 'O Tragic Drake Who Knew Naught of Love',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: true,
			ay: 10,
			bE: 'Anti-Unit/Anti-Dragon',
			bI: 'Tarasque',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					1,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[0, 4, 6])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[1, 2, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[0, 4, 6])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[1, 2, 3, 5])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[0, 4, 6])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[1, 2, 3, 5])),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('on Waterside or Beach field'),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 38,
				bI: 'Saint of the Shore',
				bZ: 8
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 21,
				bI: 'Natural Body (Sea)',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(5)),
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(7)),
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(21)),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 11,
				bI: 'Jacob\'s Limbs',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1591, bA: 1800},
			bx: {a9: 11558, bA: 13640},
			bG: {a9: 9546, bA: 11250}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(author$project$Database$Servant$Clear, 'Septem', 'London pt. 4, Arrow II', 'Camelot pt. 15, Arrow I', 'Babylonia'),
		ba: 1,
		bi: 7,
		bk: 11,
		bm: 24.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 9.9, b2: 99},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 1,
		aD: false,
		bI: 'Mash Kyrielight',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(13)
			]),
		T: {
			bf: 1,
			bp: 'Castle of the Distant Utopia',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 100, 1000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Others,
					3,
					author$project$Database$Skill$AttackUp,
					author$project$Database$Skill$Flat(30))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Evil',
			bI: 'Lord Camelot',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			bZ: 7
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 15, 20)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$DamageDown),
						author$project$Database$Skill$Flat(2000))
					]),
				aA: 52,
				bI: 'Honorable Wall of Snowflakes',
				bZ: 0
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 49,
				bI: 'Obscurant Wall of Chalk',
				bZ: 0
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 200, 400))
					]),
				aA: 65,
				bI: 'Shield of Rousing Resolution',
				bZ: 0
			}
			]),
		a1: {
			bb: {a9: 1261, bA: 1854},
			bx: {a9: 10575, bA: 15619},
			bG: {a9: 6791, bA: 10302}
		},
		ca: _List_fromArray(
			[10, 18, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 10)
				])),
		ba: 0,
		bi: 9,
		bk: 2,
		bm: 9,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.79, bN: 5, b1: 6, b2: 29},
		ay: {a8: 2, be: 1, bs: 4, bY: 3},
		aB: 107,
		aD: false,
		bI: 'Angra Mainyu',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$avenger(5),
				author$project$Database$Passive$oblivionCorrection(5),
				author$project$Database$Passive$selfRestoreMagic(18)
			]),
		T: {
			bf: 1,
			bp: 'Falsely Transcribed Creation',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Stun, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Avenge,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Unit',
			bI: 'Verg Avesta',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			bZ: 14
		},
		aU: 0,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 18,
				bI: 'Zarich',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 12,
				bI: 'Tawrich',
				bZ: 13
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$When,
						'turn 1',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(0),
							A2(author$project$Database$Skill$Range, 20, 40))),
						A2(
						author$project$Database$Skill$When,
						'turn 2',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(0),
							A2(author$project$Database$Skill$Range, 40, 80))),
						A2(
						author$project$Database$Skill$When,
						'turn 3',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(0),
							A2(author$project$Database$Skill$Range, 60, 120))),
						A2(
						author$project$Database$Skill$When,
						'turn 4',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(0),
							A2(author$project$Database$Skill$Range, 80, 160))),
						A2(
						author$project$Database$Skill$When,
						'turn 5',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(0),
							A2(author$project$Database$Skill$Range, 100, 200))),
						A2(
						author$project$Database$Skill$When,
						'turn 6',
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$DemeritKill, author$project$Database$Skill$Full))
					]),
				aA: 45,
				bI: 'Annihilation Wish',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1008, bA: 1502},
			bx: {a9: 8235, bA: 11518},
			bG: {a9: 5683, bA: 7981}
		},
		ca: _List_fromArray(
			[15, 22])
	}
	]);
var author$project$Database$Base$AllyOfJustice = 0;
var author$project$Database$Base$Summer = 7;
var author$project$Database$Skill$DemeritCharge = {$: 10};
var author$project$Database$Servant$Lancer$lancers = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 3,
		bi: 2,
		bk: 4,
		bm: 32,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 0.71, bN: 4, b1: 12.2, b2: 88},
		ay: {a8: 3, be: 6, bs: 7, bY: 2},
		aB: 70,
		aD: true,
		bI: 'Scathach',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5)
			]),
		T: {
			bf: 0,
			bp: 'Soaring Spear that Pierces with Death',
			ao: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Chance,
					500,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Gáe Bolg Alternative',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 60, 100))
				]),
			bZ: 8
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$StarAbsorb),
						A2(author$project$Database$Skill$Range, 300, 500))
					]),
				aA: 15,
				bI: 'Wisdom of Dun Scaith',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 45,
				bI: 'Primordial Rune',
				bZ: 0
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(7)),
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(21)),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 11,
				bI: 'God-Slayer',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1758, bA: 2174},
			bx: {a9: 12452, bA: 16241},
			bG: {a9: 11375, bA: 14825}
		},
		ca: _List_fromArray(
			[10, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 2,
		bi: 2,
		bk: 10,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 0.72, bN: 4, b1: 12.2, b2: 88},
		ay: {a8: 3, be: 1, bs: 4, bY: 3},
		aB: 85,
		aD: false,
		bI: 'Karna',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$divinity(5),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 2,
			bp: 'O Sun, Abide to Death',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Divine',
			bI: 'Vasavi Shakti',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(7)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 54),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$DebuffVuln,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 10,
				bI: 'Knowledge of the Deprived',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 9,
				bI: 'Mana Burst (Flame)',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 38,
				bI: 'Uncrowned Arms Mastership',
				bZ: 0
			}
			]),
		a1: {
			bb: {a9: 1850, bA: 1999},
			bx: {a9: 13110, bA: 14934},
			bG: {a9: 11976, bA: 13632}
		},
		ca: _List_fromArray(
			[15, 18, 3, 7, 22])
	},
		{
		a6: _List_fromArray(
			[1, 7]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 6),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 12)
				])),
		ba: 2,
		bi: 2,
		bk: 5,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.05, bN: 4, b1: 12.2, b2: 91},
		ay: {a8: 2, be: 3, bs: 4, bY: 4},
		aB: 128,
		aD: true,
		bI: 'Tamamo-no-Mae (Lancer)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$riding(5),
				author$project$Database$Passive$territoryCreation(5),
				author$project$Database$Passive$divinity(3)
			]),
		T: {
			bf: 2,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Unit',
			bI: 'Tokonatsu Nikkou—Goddess\' Love Parasol',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(15)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 13
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(15),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 22, 42))
					]),
				aA: 63,
				bI: 'Beach Flower',
				bZ: 1
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						5,
						author$project$Database$Skill$Curse,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$DemeritCharge,
						author$project$Database$Skill$Flat(1))
					]),
				aA: 26,
				bI: 'Midsummer Curse',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$HealingReceived,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 1, author$project$Database$Skill$StunBomb, author$project$Database$Skill$Full)
					]),
				aA: 49,
				bI: 'Goddess Morph',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1657, bA: 2221},
			bx: {a9: 11741, bA: 16594},
			bG: {a9: 10726, bA: 15147}
		},
		ca: _List_fromArray(
			[10, 7, 18, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				])),
		ba: 2,
		bi: 2,
		bk: 25,
		bm: 32,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.07, bN: 4, b1: 12.2, b2: 87},
		ay: {a8: 2, be: 1, bs: 5, bY: 3},
		aB: 88,
		aD: true,
		bI: 'Brynhild',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(5),
				author$project$Database$Passive$divinity(18)
			]),
		T: {
			bf: 2,
			bp: 'Till Death Divides the Two',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$StarUp,
					author$project$Database$Skill$Flat(30))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Personnel',
			bI: 'Brynhild Romantia',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(3)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 9
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 15),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 15))
					]),
				aA: 9,
				bI: 'Mana Burst (Flame)',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 15, 30))
					]),
				aA: 18,
				bI: 'Primordial Rune',
				bZ: 0
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 58,
				bI: 'Hero\'s Assistant',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1766, bA: 2174},
			bx: {a9: 12514, bA: 16241},
			bG: {a9: 11432, bA: 14825}
		},
		ca: _List_fromArray(
			[10, 18, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 20),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		ba: 2,
		bi: 2,
		bk: 5,
		bm: 24,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.1, bN: 4, b1: 12.2, b2: 89},
		ay: {a8: 2, be: 1, bs: 5, bY: 3},
		aB: 119,
		aD: false,
		bI: 'Altria Pendragon (Lancer)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 2,
			bp: 'Spear Shining at the End of the World',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 2,
			bE: 'Anti-Fortress',
			bI: 'Rhongomyniad',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 3
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					5),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 18),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				aA: 38,
				bI: 'Protection of World\'s End',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1699, bA: 2288},
			bx: {a9: 12036, bA: 17097},
			bG: {a9: 10995, bA: 15606}
		},
		ca: _List_fromArray(
			[10, 1, 8, 14, 18, 20, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 2,
		bi: 2,
		bk: 29,
		bm: 23,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 0.74, bN: 4, b1: 11.8, b2: 88},
		ay: {a8: 3, be: 1, bs: 4, bY: 2},
		aB: 78,
		aD: false,
		bI: 'Altria Pendragon (Lancer Alter)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 2,
			bp: 'Spear that Shines to the End of the World',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A2(
					author$project$Database$Skill$Chance,
					60,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Fortress',
			bI: 'Rhongomyniad',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			bZ: 1
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 35, 55))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 4
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 10))
					]),
				aA: 58,
				bI: 'Protection of World\'s End',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 6, 12))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 18
			}
			]),
		a1: {
			bb: {a9: 1661, bA: 1881},
			bx: {a9: 12069, bA: 14260},
			bG: {a9: 9968, bA: 11761}
		},
		ca: _List_fromArray(
			[10, 18, 8, 20, 1, 22, 14])
	},
		{
		a6: _List_fromArray(
			[1, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 0,
		bi: 2,
		bk: 14,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.52, bN: 4, b1: 12.2, b2: 87},
		ay: {a8: 3, be: 1, bs: 5, bY: 3},
		aB: 102,
		aD: false,
		bI: 'Li Shuwen',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16)
			]),
		T: {
			bf: 1,
			bp: 'Divine Spear—No Second Strike',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 900, 1500)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Unit',
			bI: 'Shen Qiang Wu Er Da',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 40, 80))
				]),
			bZ: 0
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 7,
				bI: 'Chinese Martial Arts (Liu He Da Qiang)',
				bZ: 3
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 500))
					]),
				aA: 15,
				bI: 'Sphere Boundary',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 50,
				bI: 'Juezhao',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1608, bA: 1817},
			bx: {a9: 11688, bA: 13774},
			bG: {a9: 9653, bA: 11360}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 6)
				])),
		ba: 1,
		bi: 2,
		bk: 4,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.05, bN: 4, b1: 12, b2: 92},
		ay: {a8: 2, be: 6, bs: 5, bY: 2},
		aB: 134,
		aD: true,
		bI: 'Kiyohime (Lancer)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$madness(1),
				author$project$Database$Passive$magicResistance(16)
			]),
		T: {
			bf: 2,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Chance,
					150,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 6,
			bE: 'Anti-Personnel',
			bI: 'Dojo-ji Bell Form 108—Karyu-nagi',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 18,
				bI: 'Passionate Summer',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 9,
				bI: 'Bath Transformation',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(500),
						A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 3, author$project$Database$Skill$DefenseDown),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20))
					]),
				aA: 51,
				bI: 'Stalking',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1489, bA: 1899},
			bx: {a9: 10820, bA: 14392},
			bG: {a9: 8936, bA: 11870}
		},
		ca: _List_fromArray(
			[10, 8, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 24),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 1,
		bi: 2,
		bk: 14,
		bm: 24,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.1, bN: 4, b1: 11.6, b2: 88},
		ay: {a8: 2, be: 3, bs: 5, bY: 3},
		aB: 140,
		aD: false,
		bI: 'Vlad III (EXTRA)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13)
			]),
		T: {
			bf: 2,
			bp: 'The Fortress of Impalement',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 6,
			bE: 'Anti-Enemy',
			bI: 'Kazikli Bey',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsAlignment(5)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 13
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 27,
				bI: 'Protection of the Faith',
				bZ: 2
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A3(
						author$project$Database$Skill$Chances,
						100,
						300,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full))
					]),
				aA: 57,
				bI: 'Innocent Monster',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1462, bA: 2080},
			bx: {a9: 10625, bA: 15769},
			bG: {a9: 8775, bA: 13005}
		},
		ca: _List_fromArray(
			[15, 14, 0])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				])),
		ba: 0,
		bi: 2,
		bk: 4,
		bm: 24,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.1, bN: 4, b1: 11.8, b2: 90},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 18,
		aD: false,
		bI: 'Elisabeth Bathory',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$territoryCreation(9)
			]),
		T: {
			bf: 2,
			bp: 'Fresh Blood Demoness',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Personnel',
			bI: 'Báthory Erzsébet',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 19
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 15),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 51,
				bI: 'Torture Technique',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 4, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1520, bA: 1899},
			bx: {a9: 11045, bA: 14392},
			bG: {a9: 9122, bA: 11870}
		},
		ca: _List_fromArray(
			[10, 8, 22])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				])),
		ba: 2,
		bi: 2,
		bk: 9,
		bm: 32,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.55, bN: 4, b1: 12.3, b2: 89},
		ay: {a8: 2, be: 1, bs: 4, bY: 2},
		aB: 87,
		aD: false,
		bI: 'Fionn mac Cumhaill',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$divinity(16)
			]),
		T: {
			bf: 1,
			bp: 'Undefeated Violet Flower',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 900)),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Mac an Luin',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 19, 38))
					]),
				aA: 56,
				bI: 'Clairvoyance',
				bZ: 9
			},
				{
				bg: 12,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						100,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CharmVuln,
						author$project$Database$Skill$Flat(80))
					]),
				aA: 15,
				bI: 'Trouble with Women',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 24, 40))
					]),
				aA: 2,
				bI: 'Magecraft',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1488, bA: 2040},
			bx: {a9: 10812, bA: 15459},
			bG: {a9: 8930, bA: 12750}
		},
		ca: _List_fromArray(
			[15, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		ba: 2,
		bi: 2,
		bk: 8,
		bm: 32,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.07, bN: 4, b1: 12.1, b2: 87},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 17,
		aD: false,
		bI: 'Cu Chulainn',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 0,
			bp: 'Barbed Spear that Pierces with Death',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Gáe Bolg',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 15,
				bI: 'Protection from Arrows',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				aA: 6,
				bI: 'Disengage',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1334, bA: 1726},
			bx: {a9: 9797, bA: 13007},
			bG: {a9: 7239, bA: 9593}
		},
		ca: _List_fromArray(
			[15, 7, 3, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		ba: 2,
		bi: 2,
		bk: 13,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.08, bN: 4, b1: 12.1, b2: 88},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 20,
		aD: false,
		bI: 'Cu Chulainn (Prototype)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 0,
			bp: 'The Spear which Reverses Causality',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: true,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Gáe Bolg',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 18, 45)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				aA: 17,
				bI: 'Rune Spell',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 15,
				bI: 'Protection from Arrows',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(2)),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				aA: 11,
				bI: 'Beast-Slayer',
				bZ: 8
			}
			]),
		a1: {
			bb: {a9: 1315, bA: 1817},
			bx: {a9: 9584, bA: 13691},
			bG: {a9: 7082, bA: 10098}
		},
		ca: _List_fromArray(
			[15, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				])),
		ba: 0,
		bi: 2,
		bk: 7,
		bm: 32,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.07, bN: 4, b1: 11.8, b2: 89},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 21,
		aD: false,
		bI: 'Leonidas I',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13)
			]),
		T: {
			bf: 2,
			bp: 'Guardian of the Hot Gates',
			ao: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Personnel',
			bI: 'Thermopylae Enomotia',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			bZ: 9
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 65,
				bI: 'Rear Guard\'s Pride',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 15, 25))
					]),
				aA: 9,
				bI: 'Warrior\'s War Cry',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1168, bA: 1498},
			bx: {a9: 9539, bA: 11486},
			bG: {a9: 6583, bA: 7959}
		},
		ca: _List_fromArray(
			[15, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 3,
		bi: 2,
		bk: 3,
		bm: 32,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.07, bN: 4, b1: 12.1, b2: 90},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 22,
		aD: false,
		bI: 'Romulus',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9)
			]),
		T: {
			bf: 2,
			bp: 'All Things Lead to My Spear',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 7,
			bE: 'Anti-Army',
			bI: 'Magna Voluisse Magnum',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 3
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 27,
				bI: 'Natural Body',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1200, 3400)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 22, 44)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 22, 44))
					]),
				aA: 23,
				bI: 'Imperial Privilege',
				bZ: 1
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 32,
				bI: 'Seven Hills',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1344, bA: 1779},
			bx: {a9: 9797, bA: 13400},
			bG: {a9: 7239, bA: 9883}
		},
		ca: _List_fromArray(
			[15, 19, 14])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		ba: 0,
		bi: 2,
		bk: 3,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.08, bN: 4, b1: 12.2, b2: 90},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 64,
		aD: false,
		bI: 'Hektor',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 2,
			bp: 'Ultimate Unbroken Spear',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Durindana',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 5
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8.5, 17))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 12
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$Chances,
						60,
						80,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				aA: 12,
				bI: 'Proof of Friendship',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 800, 2000))
					]),
				aA: 6,
				bI: 'Disengage',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1334, bA: 1726},
			bx: {a9: 9376, bA: 13829},
			bG: {a9: 6928, bA: 10200}
		},
		ca: _List_fromArray(
			[15, 18, 22, 11])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					3),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				])),
		ba: 0,
		bi: 2,
		bk: 7,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.79, bN: 4, b1: 11.9, b2: 89},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 19,
		aD: false,
		bI: 'Musashibou Benkei',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(12)
			]),
		T: {
			bf: 1,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					80,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Pilgrimage of the Five Hundred Arhat',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 1
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					3),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 42)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						100,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
					]),
				aA: 10,
				bI: 'Vengeful Spirit Exorcism',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 30, 60))
					]),
				aA: 65,
				bI: 'Imposing Stance',
				bZ: 9
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						80,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
					]),
				aA: 10,
				bI: 'Blank Subscription List',
				bZ: 0
			}
			]),
		a1: {
			bb: {a9: 1029, bA: 1722},
			bx: {a9: 8406, bA: 13204},
			bG: {a9: 5801, bA: 9149}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(2),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 1,
		bi: 2,
		bk: 8,
		bm: 36,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.79, bN: 4, b1: 12.3, b2: 87},
		ay: {a8: 2, be: 2, bs: 4, bY: 2},
		aB: 71,
		aD: false,
		bI: 'Diarmuid Ua Duibhne',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9)
			]),
		T: {
			bf: 0,
			bp: 'Crimson Rose of Exorcism and Yellow Rose of Mortality',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 2,
			bE: 'Anti-Personnel',
			bI: 'Gáe Dearg and Gáe Buidhe',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 1500))
				]),
			bZ: 8
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(2),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(2),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (True)',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$EnemiesType(10),
						1,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 60,
				bI: 'Love Spot',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 56,
				bI: 'Knight\'s Strategy',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1277, bA: 1817},
			bx: {a9: 9307, bA: 13691},
			bG: {a9: 6877, bA: 10098}
		},
		ca: _List_fromArray(
			[15, 22, 3])
	}
	]);
var author$project$Database$Base$Nonbinary = 16;
var author$project$Database$Passive$surfing = A3(
	author$project$Database$Passive$passive,
	'Surfing',
	2,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(1),
			_List_fromArray(
				[
					_Utils_Tuple2(5, 5)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$StarUp,
			_List_fromArray(
				[
					_Utils_Tuple2(5, 5)
				]))
		]));
var author$project$Database$Skill$ApplyTrait = function (a) {
	return {$: 0, a: a};
};
var author$project$Database$Skill$BuffUp = {$: 2};
var author$project$Database$Skill$MentalVuln = {$: 17};
var author$project$Database$Servant$Rider$riders = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 5)
				])),
		ba: 2,
		bi: 4,
		bk: 5,
		bm: 30,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.59, bN: 3, b1: 9, b2: 205},
		ay: {a8: 3, be: 1, bs: 5, bY: 5},
		aB: 118,
		aD: false,
		bI: 'Ozymandias',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(4),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 2,
			bp: 'The Shining Great Temple Complex',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Fortress',
			bI: 'Ramesseum Tentyris',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 29),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 18),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 23,
				bI: 'Imperial Privilege',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$BuffUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 38,
				bI: 'Protection of the Sun God',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1850, bA: 1881},
			bx: {a9: 13104, bA: 14056},
			bG: {a9: 11971, bA: 12830}
		},
		ca: _List_fromArray(
			[15, 3, 7, 18, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 3,
		bi: 4,
		bk: 10,
		bm: 50,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.42, bN: 3, b1: 9, b2: 208},
		ay: {a8: 4, be: 2, bs: 4, bY: 6},
		aB: 65,
		aD: false,
		bI: 'Francis Drake',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$riding(16)
			]),
		T: {
			bf: 2,
			bp: 'Golden Stag and the Eventide Tempest',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Golden Wild Hunt',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 18),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8.5, 17)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8.5, 17))
					]),
				aA: 4,
				bI: 'Voyager of the Storm',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 38,
				bI: 'Pioneer of the Stars',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1750, bA: 1881},
			bx: {a9: 12398, bA: 14056},
			bG: {a9: 11326, bA: 12830}
		},
		ca: _List_fromArray(
			[10, 18])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 8)
				])),
		ba: 0,
		bi: 4,
		bk: 10,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.66, bN: 3, b1: 8.8, b2: 205},
		ay: {a8: 2, be: 1, bs: 6, bY: 3},
		aB: 108,
		aD: true,
		bI: 'Iskandar',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$riding(4),
				author$project$Database$Passive$divinity(13)
			]),
		T: {
			bf: 2,
			bp: 'Army of the King',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 8,
			bE: 'Anti-Army',
			bI: 'Ionioi Hetairoi',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 22),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						author$project$Database$Skill$Flat(50))
					]),
				aA: 9,
				bI: 'Lightning Conqueror',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1786, bA: 1938},
			bx: {a9: 12654, bA: 14482},
			bG: {a9: 11560, bA: 13219}
		},
		ca: _List_fromArray(
			[15, 3, 7, 11, 14, 18, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 10),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 8)
				])),
		ba: 1,
		bi: 4,
		bk: 5,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.86, bN: 3, b1: 9, b2: 208},
		ay: {a8: 2, be: 1, bs: 7, bY: 3},
		aB: 99,
		aD: false,
		bI: 'Queen Medb',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 2,
			bp: 'My Dear Iron Chariot',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Chariot My Love',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(15)),
					A2(author$project$Database$Skill$Range, 150, 200)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$MentalVuln,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			bZ: 9
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 18),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$GaugePerTurn,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 24,
				bI: 'Golden Rule (Body)',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 9
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						80,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(15),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Siren Song',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1591, bA: 2048},
			bx: {a9: 11270, bA: 15303},
			bG: {a9: 10296, bA: 13968}
		},
		ca: _List_fromArray(
			[10, 18, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: author$project$Database$Servant$Welfare('Golden Bear Lighter'),
		ba: 1,
		bi: 4,
		bk: 9,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: true,
		S: {bM: 1.15, bN: 3, b1: 9, b2: 198},
		ay: {a8: 2, be: 1, bs: 5, bY: 4},
		aB: 115,
		aD: true,
		bI: 'Sakata Kintoki (Rider)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$divinity(13)
			]),
		T: {
			bf: 0,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Army',
			bI: 'Golden Drive, Good Night',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(0),
					A2(author$project$Database$Skill$Range, 10, 90))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 15),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 45,
				bI: 'Long-Distance Dash',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 38,
				bI: 'Animal Communication',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 60, 120)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 27,
				bI: 'Natural Body',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1636, bA: 1728},
			bx: {a9: 11889, bA: 13095},
			bG: {a9: 9819, bA: 10800}
		},
		ca: _List_fromArray(
			[15, 3, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: author$project$Database$Servant$Welfare('Bucket of Chicken'),
		ba: 0,
		bi: 4,
		bk: 29,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: true,
		S: {bM: 0.87, bN: 3, b1: 8.9, b2: 204},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 73,
		aD: true,
		bI: 'Altria Pendragon (Santa Alter)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 2,
			bp: 'Sword of Promised Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 650))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Army',
			bI: 'Excalibur Morgan',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 3
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1500, 3500)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$StarUp,
						author$project$Database$Skill$Flat(30))
					]),
				aA: 23,
				bI: 'Saint\'s Gift',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 25, 45))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 6
			}
			]),
		a1: {
			bb: {a9: 1543, bA: 1805},
			bx: {a9: 11209, bA: 13684},
			bG: {a9: 9258, bA: 11286}
		},
		ca: _List_fromArray(
			[10, 1, 8, 18, 20, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 0,
		bi: 4,
		bk: 4,
		bm: 30,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 1, 2),
		bw: false,
		S: {bM: 1.58, bN: 3, b1: 9, b2: 205},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 30,
		aD: false,
		bI: 'Martha',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(3),
				author$project$Database$Passive$divinity(13)
			]),
		T: {
			bf: 2,
			bp: 'O Tragic Drake Who Knew Naught of Love',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Tarasque',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 27,
				bI: 'Protection of the Faith',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				aA: 23,
				bI: 'Miracle',
				bZ: 15
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
					]),
				aA: 51,
				bI: 'Oath of the Holy Maiden',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1335, bA: 2090},
			bx: {a9: 9703, bA: 15845},
			bG: {a9: 8014, bA: 13068}
		},
		ca: _List_fromArray(
			[10, 18, 7, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 1,
		bi: 4,
		bk: 24,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.71, bN: 3, b1: 9.2, b2: 204},
		ay: {a8: 2, be: 1, bs: 4, bY: 3},
		aB: 132,
		aD: true,
		bI: 'Mordred (Rider)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$surfing(5)
			]),
		T: {
			bf: 1,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Wave',
			bI: 'Prydwen Tube Riding',
			bS: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(author$project$Database$Skill$Chances, 50, 90),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 2,
				bI: 'Cerulean Ride',
				bZ: 5
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 15,
				bI: 'Rodeo Flip',
				bZ: 4
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 32,
				bI: 'Endless Summer',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1535, bA: 1824},
			bx: {a9: 11154, bA: 13822},
			bG: {a9: 9212, bA: 11400}
		},
		ca: _List_fromArray(
			[10, 8, 20, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		ba: 0,
		bi: 4,
		bk: 9,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 1, bN: 3, b1: 9, b2: 201},
		ay: {a8: 1, be: 1, bs: 3, bY: 2},
		aB: 29,
		aD: false,
		bI: 'Marie Antoinette',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$riding(4)
			]),
		T: {
			bf: 0,
			bp: 'Glory to the Crown of Lilies',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Guillotine Breaker',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						80,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(15),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Siren Song',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 200, 600))
					]),
				aA: 49,
				bI: 'Beautiful Princess',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalSuccess,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 54,
				bI: 'God\'s Grace',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1382, bA: 1975},
			bx: {a9: 10041, bA: 14972},
			bG: {a9: 8293, bA: 12348}
		},
		ca: _List_fromArray(
			[10, 18, 22])
	},
		{
		a6: _List_fromArray(
			[2, 5, 2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				])),
		ba: 0,
		bi: 4,
		bk: 29,
		bm: 50,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 9.1, b2: 200},
		ay: {a8: 2, be: 1, bs: 1, bY: 2},
		aB: 66,
		aD: false,
		bI: 'Anne Bonny & Mary Read',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16)
			]),
		T: {
			bf: 0,
			bp: 'Bond of Lovebirds',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			bu: false,
			ay: 6,
			bE: 'Anti-Personnel',
			bI: 'Caribbean Free Bird',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$LastStand,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bZ: 11
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 56,
				bI: 'Voyage',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 17,
				bI: 'Marksmanship',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 58,
				bI: 'Combination',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1504, bA: 1805},
			bx: {a9: 10932, bA: 13684},
			bG: {a9: 9029, bA: 11286}
		},
		ca: _List_fromArray(
			[10, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		ba: 1,
		bi: 4,
		bk: 24,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 0, 1, 2),
		bw: false,
		S: {bM: 0.66, bN: 1, b1: 9, b2: 205},
		ay: {a8: 2, be: 1, bs: 4, bY: 2},
		aB: 94,
		aD: false,
		bI: 'Astolfo',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(4),
				author$project$Database$Passive$independentAction(9)
			]),
		T: {
			bf: 0,
			bp: 'Otherworldly Phantom Horse',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Times,
					3,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Hippogriff',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			bZ: 8
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 15),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 28))
					]),
				aA: 63,
				bI: 'Monstrous Strength',
				bZ: 14
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						90,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				aA: 59,
				bI: 'Trap of Argalia',
				bZ: 16
			},
				{
				bg: 10,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(65),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$StarsPerTurn),
						A2(author$project$Database$Skill$Range, 5, 10)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(65),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$StarUp),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(65),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 57,
				bI: 'Evaporation of Reason',
				bZ: 16
			}
			]),
		a1: {
			bb: {a9: 1489, bA: 1787},
			bx: {a9: 10821, bA: 13546},
			bG: {a9: 8937, bA: 11172}
		},
		ca: _List_fromArray(
			[16, 18, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					3),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				])),
		ba: 0,
		bi: 4,
		bk: 2,
		bm: 45,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.85, bN: 3, b1: 8.9, b2: 205},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 24,
		aD: false,
		bI: 'Georgios',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 1,
			bp: 'Blessed Sword of Force Subversion',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$ApplyTrait(8),
					author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Personnel',
			bI: 'Ascalon',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 9
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					3),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 9),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 65,
				bI: 'Guardian Knight',
				bZ: 4
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				aA: 27,
				bI: 'Martyr\'s Soul',
				bZ: 8
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 929, bA: 1731},
			bx: {a9: 7587, bA: 13278},
			bG: {a9: 5236, bA: 9200}
		},
		ca: _List_fromArray(
			[15, 18, 3, 22])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		ba: 0,
		bi: 4,
		bk: 8,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.87, bN: 3, b1: 9.1, b2: 204},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 27,
		aD: false,
		bI: 'Ushiwakamaru',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$riding(4)
			]),
		T: {
			bf: 0,
			bp: 'Dan No Ura—Hassoutobi',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Personnel',
			bI: 'Dan-No-Ura Eight-Boat Leap',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 50, 90))
				]),
			bZ: 13
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 41,
				bI: 'Tengu\'s Strategy',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8.5, 17))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 12
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						1,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 15,
				bI: 'Art of the Swallow',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1314, bA: 1625},
			bx: {a9: 9576, bA: 12240},
			bG: {a9: 7076, bA: 9028}
		},
		ca: _List_fromArray(
			[10, 18, 3, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		ba: 1,
		bi: 4,
		bk: 24,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.58, bN: 3, b1: 9, b2: 194},
		ay: {a8: 3, be: 1, bs: 3, bY: 2},
		aB: 23,
		aD: false,
		bI: 'Medusa',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$independentAction(13),
				author$project$Database$Passive$divinity(19),
				author$project$Database$Passive$riding(4)
			]),
		T: {
			bf: 0,
			bp: 'Bridle of Chivalry',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Bellerophon',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 4
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						100,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				aA: 59,
				bI: 'Mystic Eyes',
				bZ: 4
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						2,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 63,
				bI: 'Monstrous Strength',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 38,
				bI: 'Blood Fort Andromeda',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1337, bA: 1608},
			bx: {a9: 9744, bA: 12117},
			bG: {a9: 7200, bA: 8937}
		},
		ca: _List_fromArray(
			[10, 18, 7])
	},
		{
		a6: _List_fromArray(
			[2, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6)
				])),
		ba: 0,
		bi: 4,
		bk: 12,
		bm: 45,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.56, bN: 3, b1: 8.8, b2: 198},
		ay: {a8: 3, be: 1, bs: 3, bY: 2},
		aB: 25,
		aD: false,
		bI: 'Edward Teach',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(18)
			]),
		T: {
			bf: 2,
			bp: '',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					author$project$Database$Skill$Flat(5))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Queen Anne\'s Revenge',
			bS: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(author$project$Database$Skill$Chances, 30, 70),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			bZ: 11
		},
		aU: 2,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 9),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 15)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 16)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 4,
				bI: 'Voyager of the Storm',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 27)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffVuln,
						author$project$Database$Skill$Flat(50))
					]),
				aA: 63,
				bI: 'Pirate\'s Glory',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$AlliesType(10),
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$AlliesType(16),
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 23,
				bI: 'Gentlemanly Love',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1097, bA: 1488},
			bx: {a9: 8967, bA: 11411},
			bG: {a9: 6188, bA: 7907}
		},
		ca: _List_fromArray(
			[15, 22])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				])),
		ba: 0,
		bi: 4,
		bk: 3,
		bm: 40,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: false,
		S: {bM: 0.86, bN: 3, b1: 9, b2: 205},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 28,
		aD: false,
		bI: 'Alexander',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$divinity(18),
				author$project$Database$Passive$riding(4)
			]),
		T: {
			bf: 0,
			bp: 'The Beginning of Trampling Conquest',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 800, 1200))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Bucephalus',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			bZ: 7
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 48)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 13
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						80,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(13),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				aA: 26,
				bI: 'Fair Youth',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 45,
				bI: 'Omen of the Conqueror',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1366, bA: 1979},
			bx: {a9: 9955, bA: 11714},
			bG: {a9: 7356, bA: 8640}
		},
		ca: _List_fromArray(
			[15, 18, 7, 22, 11, 14])
	},
		{
		a6: _List_fromArray(
			[1, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		ba: 0,
		bi: 4,
		bk: 3,
		bm: 45,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 1, 2),
		bw: true,
		S: {bM: 0.85, bN: 3, b1: 8.9, b2: 196},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 26,
		aD: false,
		bI: 'Boudica',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(16),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 1,
			bp: 'Chariot of Promised Protection',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Chariot of Boudica',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 8
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(4),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(4),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(19)),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				aA: 11,
				bI: 'Vow to the Goddess',
				bZ: 9
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 32,
				bI: 'Battle Continuation',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 2,
				bI: 'Andraste\'s Protection',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1168, bA: 1823},
			bx: {a9: 8511, bA: 13735},
			bG: {a9: 6289, bA: 10130}
		},
		ca: _List_fromArray(
			[10, 18, 22, 14])
	}
	]);
var author$project$Database$Base$Bride = 8;
var author$project$Database$Base$IconFace = 19;
var author$project$Database$Passive$connectionRoot = A3(
	author$project$Database$Passive$passive,
	'Connection to the Root',
	11,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(0),
			_List_fromArray(
				[
					_Utils_Tuple2(5, 6),
					_Utils_Tuple2(13, 4)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(1),
			_List_fromArray(
				[
					_Utils_Tuple2(5, 6),
					_Utils_Tuple2(13, 4)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(2),
			_List_fromArray(
				[
					_Utils_Tuple2(5, 6),
					_Utils_Tuple2(13, 4)
				]))
		]));
var author$project$Database$Base$IconMissing = 35;
var author$project$Database$Passive$doubleClass = A3(author$project$Database$Passive$passive, 'Double Class', 35, _List_Nil);
var author$project$Database$Passive$independentManifestation = A3(
	author$project$Database$Passive$passive,
	'Independent Manifestation',
	13,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$CritUp,
			_List_fromArray(
				[
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(18, 2)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$MentalResist,
			_List_fromArray(
				[
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(18, 2)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$KillResist,
			_List_fromArray(
				[
					_Utils_Tuple2(13, 6),
					_Utils_Tuple2(18, 2)
				]))
		]));
var author$project$Database$Skill$ApplyAtRandom = {$: 0};
var author$project$Database$Skill$DamageVuln = {$: 11};
var author$project$Database$Skill$GaugeSpend = {$: 17};
var author$project$Database$Servant$Saber$sabers = _List_fromArray(
	[
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10)
				])),
		ba: 0,
		bi: 0,
		bk: 10,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.09, bN: 3, b1: 10.2, b2: 98},
		ay: {a8: 2, be: 1, bs: 3, bY: 5},
		aB: 68,
		aD: true,
		bI: 'Okita Souji',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(18),
				author$project$Database$Passive$riding(18)
			]),
		T: {
			bf: 0,
			bp: 'Three-Stage Thrust',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Personnel',
			bI: 'Mumyou Sandanzuki',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			bZ: 0
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(0),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 45,
				bI: 'Shukuchi',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				aA: 58,
				bI: 'Weak Constitution',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (Fake)',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1865, bA: 1939},
			bx: {a9: 13210, bA: 14489},
			bG: {a9: 12068, bA: 13225}
		},
		ca: _List_fromArray(
			[10, 18, 20, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 0,
		bi: 0,
		bk: 5,
		bm: 24.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 10.1, b2: 102},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 8,
		aD: false,
		bI: 'Altera',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(5),
				author$project$Database$Passive$divinity(9)
			]),
		T: {
			bf: 2,
			bp: 'Sword of the God of War',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Photon Ray',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 5
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 54),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 40, 80)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 27,
				bI: 'Natural Body',
				bZ: 16
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 63,
				bI: 'Crest of the Star',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1907, bA: 2039},
			bx: {a9: 13511, bA: 15236},
			bG: {a9: 12343, bA: 13907}
		},
		ca: _List_fromArray(
			[10, 18, 7, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 8]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				])),
		ba: 0,
		bi: 0,
		bk: 30,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.7, bN: 3, b1: 10.1, b2: 102},
		ay: {a8: 3, be: 1, bs: 5, bY: 3},
		aB: 90,
		aD: true,
		bI: 'Nero Claudius (Bride)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 1,
			bp: 'Ending of the Rose of Prominence',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 2,
			bE: 'Anti-Personnel',
			bI: 'Fax Caelestis',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 900)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 8
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 15),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 35, 45))
					]),
				aA: 41,
				bI: 'Stars for the Sky',
				bZ: 5
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 63,
				bI: 'Flowers for the Earth',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 23,
				bI: 'Love for the People',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1793, bA: 2089},
			bx: {a9: 12706, bA: 15609},
			bG: {a9: 11607, bA: 14284}
		},
		ca: _List_fromArray(
			[10, 18, 20, 19, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		ba: 1,
		bi: 0,
		bk: 25,
		bm: 24.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.56, bN: 3, b1: 10, b2: 98},
		ay: {a8: 3, be: 1, bs: 4, bY: 2},
		aB: 76,
		aD: false,
		bI: 'Mordred',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 2,
			bp: 'Rebellion Against My Beautiful Father',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Clarent Blood Arthur',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(1)),
					A2(author$project$Database$Skill$Range, 180, 220)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 4
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				aA: 52,
				bI: 'Secret of Pedigree',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1811, bA: 2153},
			bx: {a9: 12833, bA: 16083},
			bG: {a9: 11723, bA: 14680}
		},
		ca: _List_fromArray(
			[10, 18, 8, 20, 22])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		ba: 0,
		bi: 0,
		bk: 15,
		bm: 24.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 9.9, b2: 102},
		ay: {a8: 2, be: 1, bs: 4, bY: 4},
		aB: 91,
		aD: true,
		bI: 'Ryougi Shiki (Saber)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$connectionRoot(5),
				author$project$Database$Passive$independentManifestation(13)
			]),
		T: {
			bf: 1,
			bp: 'Mukushiki Kara no Kyoukai',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Unit',
			bI: 'Amalavijñāna—Boundary of Emptiness',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 60, 100))
				]),
			bZ: 1
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 18),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 24)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(1),
						A2(author$project$Database$Skill$Range, 25, 40)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						1,
						author$project$Database$Skill$DeathDown,
						A2(author$project$Database$Skill$Range, 60, 80))
					]),
				aA: 36,
				bI: 'Mystic Eyes of Death Perception',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				aA: 63,
				bI: 'Unyou',
				bZ: 9
			},
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 5000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritGauge,
						author$project$Database$Skill$Flat(10))
					]),
				aA: 67,
				bI: 'Yin-Yang',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1656, bA: 2266},
			bx: {a9: 11736, bA: 16929},
			bG: {a9: 10721, bA: 15453}
		},
		ca: _List_fromArray(
			[10, 22, 17])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		ba: 1,
		bi: 0,
		bk: 5,
		bm: 21,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.86, bN: 3, b1: 10, b2: 102},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 2,
		aD: false,
		bI: 'Altria Pendragon',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 2,
			bp: 'Sword of Promised Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Fortress',
			bI: 'Excalibur',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 50))
				]),
			bZ: 3
		},
		aU: 5,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1734, bA: 2222},
			bx: {a9: 12283, bA: 16597},
			bG: {a9: 11221, bA: 15150}
		},
		ca: _List_fromArray(
			[10, 18, 8, 20, 1, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: author$project$Database$Servant$Welfare('Dragon Orb'),
		ba: 1,
		bi: 0,
		bk: 12,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: true,
		S: {bM: 0.55, bN: 3, b1: 9.9, b2: 100},
		ay: {a8: 3, be: 1, bs: 5, bY: 4},
		aB: 138,
		aD: true,
		bI: 'Elisabeth Bathory (Brave)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$territoryCreation(13),
				author$project$Database$Passive$doubleClass(18)
			]),
		T: {
			bf: 2,
			bp: 'Tornado Demon Daughter of Fresh Blood',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 7,
			bE: 'Anti-Army',
			bI: 'Báthory Brave Erzsébet',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 30),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)
					]),
				aA: 49,
				bI: 'Hero\'s Great Principle',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(20))
					]),
				aA: 9,
				bI: 'Mana Burst (Bravery)',
				bZ: 16
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeSpend,
						author$project$Database$Skill$Flat(100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$ApplyAtRandom,
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 3000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 11,
				bI: 'Legendary Crimson Hero',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1649, bA: 1799},
			bx: {a9: 11986, bA: 13638},
			bG: {a9: 9899, bA: 11248}
		},
		ca: _List_fromArray(
			[10, 8, 22, 0])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 1,
		bi: 0,
		bk: 14,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.83, bN: 3, b1: 10, b2: 100},
		ay: {a8: 2, be: 4, bs: 5, bY: 3},
		aB: 121,
		aD: false,
		bI: 'Lancelot (Saber)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 1,
			bp: 'Severance of the Binding Chains—Lake\'s Overflowing Light',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(1),
					author$project$Database$Skill$Flat(30)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Arondight Overload',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$DamageVuln,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			bZ: 5
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 12)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 38,
				bI: 'Knight of the Lake',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000))
					]),
				aA: 58,
				bI: 'Eternal Arms Mastery',
				bZ: 4
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 57,
				bI: 'Knight of Owner',
				bZ: 3
			}
			]),
		a1: {
			bb: {a9: 1658, bA: 1854},
			bx: {a9: 12046, bA: 14051},
			bG: {a9: 9949, bA: 11589}
		},
		ca: _List_fromArray(
			[15, 3, 18, 22])
	},
		{
		a6: _List_fromArray(
			[0, 5]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 0,
		bi: 0,
		bk: 14,
		bm: 19.2,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.86, bN: 3, b1: 9.9, b2: 99},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 3,
		aD: false,
		bI: 'Altria Pendragon (Alter)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9)
			]),
		T: {
			bf: 2,
			bp: 'Sword of Promised Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 650))
				]),
			bu: false,
			ay: 3,
			bE: 'Anti-Fortress',
			bI: 'Excalibur Morgan',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bZ: 3
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 6, 12))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 18
			}
			]),
		a1: {
			bb: {a9: 1708, bA: 1854},
			bx: {a9: 12408, bA: 14051},
			bG: {a9: 10248, bA: 11589}
		},
		ca: _List_fromArray(
			[10, 14, 8, 20, 1, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 4)
				])),
		ba: 2,
		bi: 0,
		bk: 24,
		bm: 24.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 10.2, b2: 100},
		ay: {a8: 2, be: 1, bs: 4, bY: 2},
		aB: 101,
		aD: false,
		bI: 'Rama',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(5),
				author$project$Database$Passive$riding(4),
				author$project$Database$Passive$divinity(5)
			]),
		T: {
			bf: 2,
			bp: 'The Rakshasa-Piercing Immortal',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Demon',
			bI: 'Brahmastra',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(6)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 60)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 6,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 500)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 58,
				bI: 'Blessing of Martial Arts',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 9
			},
				{
				bg: 9,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				aA: 32,
				bI: 'Curse of Separation',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1642, bA: 1901},
			bx: {a9: 11931, bA: 14541},
			bG: {a9: 9854, bA: 11882}
		},
		ca: _List_fromArray(
			[15, 18, 3, 7, 22, 14])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		ba: 0,
		bi: 0,
		bk: 15,
		bm: 24.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.84, bN: 3, b1: 10.1, b2: 102},
		ay: {a8: 2, be: 1, bs: 5, bY: 2},
		aB: 5,
		aD: false,
		bI: 'Nero Claudius',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 1,
			bp: 'Imperium of the Maiden\'s Flowery Words',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 900))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Encampment',
			bI: 'Laus St. Claudius',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 2000))
					]),
				aA: 27,
				bI: 'Migraine',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1200, 3400)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 22, 44)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 22, 44))
					]),
				aA: 23,
				bI: 'Imperial Privilege',
				bZ: 1
			},
				{
				bg: 12,
				ao: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(3),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				aA: 32,
				bI: 'Invictus Spiritus',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1574, bA: 1880},
			bx: {a9: 11441, bA: 14250},
			bG: {a9: 9449, bA: 11753}
		},
		ca: _List_fromArray(
			[10, 18, 19, 20, 22, 14])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				])),
		ba: 0,
		bi: 0,
		bk: 9,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.83, bN: 3, b1: 10, b2: 102},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 10,
		aD: false,
		bI: 'Chevalier d\'Eon',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 1,
			bp: 'Gorgeous Blooming Lilies',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					2,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					2,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Army',
			bI: 'Fleur de Lis',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					10,
					50,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full))
				]),
			bZ: 13
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 15),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (True)',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				aA: 6,
				bI: 'Self-Suggestion',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 19,
				bI: 'Beautiful Appearance',
				bZ: 13
			}
			]),
		a1: {
			bb: {a9: 1734, bA: 2121},
			bx: {a9: 10613, bA: 16073},
			bG: {a9: 8765, bA: 13256}
		},
		ca: _List_fromArray(
			[16, 18, 22])
	},
		{
		a6: _List_fromArray(
			[2, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 1,
		bi: 0,
		bk: 4,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.83, bN: 3, b1: 10, b2: 97},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 6,
		aD: false,
		bI: 'Siegfried',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 2,
			bp: 'Illusory Greatsword: Felling of the Sky Demon',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			bu: false,
			ay: 1,
			bE: 'Anti-Army',
			bI: 'Balmung',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$SpecialDamage(
						author$project$Database$Skill$VsTrait(8)),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 15, 37.5))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 14
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				aA: 6,
				bI: 'Disengage',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$AttackUp,
							author$project$Database$Skill$VsTrait(8)),
						A2(author$project$Database$Skill$Range, 50, 80)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						A2(
							author$project$Database$Skill$Special,
							author$project$Database$Skill$DefenseUp,
							author$project$Database$Skill$VsTrait(8)),
						author$project$Database$Skill$Flat(30))
					]),
				aA: 11,
				bI: 'Dragon-Slayer',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1363, bA: 2266},
			bx: {a9: 9905, bA: 17175},
			bG: {a9: 8181, bA: 14165}
		},
		ca: _List_fromArray(
			[15, 18, 3, 8, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 30)
				])),
		ba: 1,
		bi: 0,
		bk: 4,
		bm: 21,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.14, bN: 3, b1: 10, b2: 102},
		ay: {a8: 2, be: 1, bs: 5, bY: 2},
		aB: 123,
		aD: false,
		bI: 'Gawain',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 2,
			bp: 'The Reborn Sword of Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full)
				]),
			bu: false,
			ay: 4,
			bE: 'Anti-Army',
			bI: 'Excalibur Galatine',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			bZ: 4
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('on Open Field with Sunshine'),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(2)),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				aA: 63,
				bI: 'Numeral of The Saint',
				bZ: 1
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 6, 12))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 18
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 10)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				aA: 38,
				bI: 'Belt of Bertilak',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1695, bA: 1827},
			bx: {a9: 12317, bA: 13845},
			bG: {a9: 10173, bA: 11419}
		},
		ca: _List_fromArray(
			[15, 3, 18, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		ba: 1,
		bi: 0,
		bk: 14,
		bm: 21,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: true,
		S: {bM: 0.86, bN: 3, b1: 10, b2: 102},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 4,
		aD: true,
		bI: 'Altria Pendragon (Lily)',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(13)
			]),
		T: {
			bf: 2,
			bp: 'Golden Sword of Assured Victory',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 600))
				]),
			bu: false,
			ay: 8,
			bE: 'Anti-Personnel',
			bI: 'Caliburn',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			bZ: 9
		},
		aU: 4,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				aA: 55,
				bI: 'Intuition',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 9,
				bI: 'Mana Burst',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 41,
				bI: 'Journey of the Flowers',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1287, bA: 1699},
			bx: {a9: 9355, bA: 12880},
			bG: {a9: 7726, bA: 10623}
		},
		ca: _List_fromArray(
			[10, 18, 8, 20, 1, 22, 14])
	},
		{
		a6: _List_fromArray(
			[1, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				])),
		ba: 0,
		bi: 0,
		bk: 13,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: false,
		S: {bM: 1.1, bN: 3, b1: 10, b2: 99},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 7,
		aD: false,
		bI: 'Gaius Julius Caesar',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(13),
				author$project$Database$Passive$riding(9),
				author$project$Database$Passive$divinity(16)
			]),
		T: {
			bf: 0,
			bp: 'The Yellow Death',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			bu: false,
			ay: 10,
			bE: 'Anti-Personnel',
			bI: 'Crocea Mors',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			bZ: 8
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 63,
				bI: 'Charisma',
				bZ: 13
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(20))
					]),
				aA: 17,
				bI: 'Incite',
				bZ: 1
			}
			]),
		a1: {
			bb: {a9: 1392, bA: 1727},
			bx: {a9: 10146, bA: 13009},
			bG: {a9: 7497, bA: 9595}
		},
		ca: _List_fromArray(
			[15, 14, 18, 3, 19, 7, 22])
	},
		{
		a6: _List_fromArray(
			[0, 4]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				])),
		ba: 1,
		bi: 0,
		bk: 23,
		bm: 35,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 2, 2, 2),
		bw: false,
		S: {bM: 1.09, bN: 3, b1: 10, b2: 99},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 72,
		aD: false,
		bI: 'Fergus mac Roich',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(9)
			]),
		T: {
			bf: 2,
			bp: 'Rainbow Sword',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			bu: false,
			ay: 5,
			bE: 'Anti-Army',
			bI: 'Caladbolg',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			bZ: 4
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 16)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 63,
				bI: 'Valor',
				bZ: 5
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$BuffFail,
						author$project$Database$Skill$Flat(50))
					]),
				aA: 52,
				bI: 'Defiant',
				bZ: 9
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				aA: 15,
				bI: 'Mind\'s Eye (True)',
				bZ: 5
			}
			]),
		a1: {
			bb: {a9: 1385, bA: 1761},
			bx: {a9: 10096, bA: 13268},
			bG: {a9: 7460, bA: 9786}
		},
		ca: _List_fromArray(
			[15, 18, 3, 22, 14])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16)
				])),
		ba: 3,
		bi: 0,
		bk: 13,
		bm: 28,
		bo: A5(author$project$Database$Servant$Deck, 0, 0, 1, 2, 2),
		bw: true,
		S: {bM: 1.11, bN: 3, b1: 10.2, b2: 100},
		ay: {a8: 2, be: 1, bs: 5, bY: 2},
		aB: 126,
		aD: false,
		bI: 'Bedivere',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(5)
			]),
		T: {
			bf: 2,
			bp: 'Be my Sword, Silver Arm',
			ao: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			bu: true,
			ay: 2,
			bE: 'Anti-Unit',
			bI: 'Switch On—Airgetlám',
			bS: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(2),
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			bZ: 13
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 36),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 38,
				bI: 'Calm and Collected',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				aA: 52,
				bI: 'Oath of Protection',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1416, bA: 1727},
			bx: {a9: 10322, bA: 13009},
			bG: {a9: 7627, bA: 9595}
		},
		ca: _List_fromArray(
			[15, 3, 22])
	},
		{
		a6: _List_fromArray(
			[0, 3]),
		aj: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		ba: 0,
		bi: 0,
		bk: 13,
		bm: 31.5,
		bo: A5(author$project$Database$Servant$Deck, 0, 1, 1, 2, 2),
		bw: false,
		S: {bM: 0.82, bN: 3, b1: 9.9, b2: 98},
		ay: {a8: 2, be: 1, bs: 3, bY: 2},
		aB: 9,
		aD: false,
		bI: 'Gilles de Rais',
		bT: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(9),
				author$project$Database$Passive$riding(9),
				author$project$Database$Passive$madness(1)
			]),
		T: {
			bf: 1,
			bp: 'Rally Thy War Cries Under the Holy Flag',
			ao: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					2,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(50))
				]),
			bu: false,
			ay: 0,
			bE: 'Anti-Personnel',
			bI: 'Saint War Order',
			bS: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			bZ: 9
		},
		aU: 3,
		a_: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(0),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(0),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 7)
				])),
		b0: _List_fromArray(
			[
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				aA: 4,
				bI: 'Tactics',
				bZ: 13
			},
				{
				bg: 8,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				aA: 41,
				bI: 'Golden Rule',
				bZ: 9
			},
				{
				bg: 7,
				ao: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$Performance(2),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				aA: 9,
				bI: 'Prelati\'s Encouragement',
				bZ: 9
			}
			]),
		a1: {
			bb: {a9: 1228, bA: 1889},
			bx: {a9: 8952, bA: 14234},
			bG: {a9: 6615, bA: 10498}
		},
		ca: _List_fromArray(
			[15, 18, 3, 22])
	}
	]);
var elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);
		}
	});
var elm$core$List$concat = function (lists) {
	return A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);
};
var elm$core$List$sortBy = _List_sortBy;
var author$project$Database$servants = function () {
	var addUniversal = function (s) {
		return _Utils_update(
			s,
			{
				bT: A2(
					elm$core$List$sortBy,
					function ($) {
						return $.bI;
					},
					s.bT),
				ca: A2(
					elm$core$List$sortBy,
					author$project$Class$Show$trait,
					A2(elm$core$List$cons, 12, s.ca))
			});
	};
	var addHeavenOrEarth = function (s) {
		var _n0 = s.ba;
		switch (_n0) {
			case 1:
				return _Utils_update(
					s,
					{
						ca: A2(elm$core$List$cons, 9, s.ca)
					});
			case 2:
				return _Utils_update(
					s,
					{
						ca: A2(elm$core$List$cons, 9, s.ca)
					});
			default:
				return s;
		}
	};
	return A3(
		elm$core$Basics$composeR,
		elm$core$List$concat,
		elm$core$List$map(
			A2(elm$core$Basics$composeR, addHeavenOrEarth, addUniversal)),
		_List_fromArray(
			[author$project$Database$Servant$Archer$archers, author$project$Database$Servant$Assassin$assassins, author$project$Database$Servant$Berserker$berserkers, author$project$Database$Servant$Caster$casters, author$project$Database$Servant$Extra$extras, author$project$Database$Servant$Lancer$lancers, author$project$Database$Servant$Rider$riders, author$project$Database$Servant$Saber$sabers]));
}();
var author$project$Main$export = _Platform_outgoingPort(
	'export',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			elm$json$Json$Encode$list,
			elm$core$Basics$identity,
			_List_fromArray(
				[
					elm$json$Json$Encode$string(a),
					elm$core$Basics$identity(b)
				]));
	});
var elm$core$Platform$Cmd$batch = _Platform_batch;
var author$project$Main$runExports = elm$core$Platform$Cmd$batch(
	_List_fromArray(
		[
			author$project$Main$export(
			_Utils_Tuple2(
				'servants',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$servant, author$project$Database$servants))),
			author$project$Main$export(
			_Utils_Tuple2(
				'craftEssences',
				A2(elm$json$Json$Encode$list, author$project$Class$ToJSON$craftEssence, author$project$Database$CraftEssence$craftEssences)))
		]));
var author$project$Main$store = _Platform_outgoingPort(
	'store',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			elm$json$Json$Encode$list,
			elm$core$Basics$identity,
			_List_fromArray(
				[
					elm$json$Json$Encode$string(a),
					elm$core$Basics$identity(b)
				]));
	});
var author$project$Main$title = _Platform_outgoingPort('title', elm$json$Json$Encode$string);
var author$project$Database$Servant$ordServant = function ($) {
	return $.aB;
};
var author$project$Database$Base$enumClass = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
var elm$core$List$sum = function (numbers) {
	return A3(elm$core$List$foldl, elm$core$Basics$add, 0, numbers);
};
var author$project$Database$Calculator$matchSum = F2(
	function (xs, k) {
		return A3(
			elm$core$Basics$composeL,
			elm$core$List$sum,
			A2(author$project$StandardLibrary$flip, elm$core$List$map, xs),
			function (_n0) {
				var k1 = _n0.a;
				var v = _n0.b;
				return _Utils_eq(k, k1) ? v : 0;
			});
	});
var author$project$Database$Calculator$selfable = function (a) {
	switch (a.$) {
		case 1:
			return true;
		case 2:
			return true;
		case 3:
			return true;
		default:
			return false;
	}
};
var author$project$Database$Skill$allied = function (a) {
	switch (a.$) {
		case 1:
			return true;
		case 2:
			return true;
		case 3:
			return true;
		case 6:
			return true;
		case 7:
			return true;
		default:
			return false;
	}
};
var author$project$Database$Base$enumAlignment = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8]);
var author$project$Database$Base$DemiServant = 4;
var author$project$Database$Base$enumTrait = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]);
var author$project$Database$Skill$enumSpecial = _Utils_ap(
	A2(elm$core$List$map, author$project$Database$Skill$VsTrait, author$project$Database$Base$enumTrait),
	_Utils_ap(
		A2(elm$core$List$map, author$project$Database$Skill$VsClass, author$project$Database$Base$enumClass),
		A2(elm$core$List$map, author$project$Database$Skill$VsAlignment, author$project$Database$Base$enumAlignment)));
var author$project$Database$Skill$simplify = function (a) {
	simplify:
	while (true) {
		switch (a.$) {
			case 4:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue simplify;
			case 5:
				var ef = a.c;
				var $temp$a = ef;
				a = $temp$a;
				continue simplify;
			case 6:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue simplify;
			case 7:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue simplify;
			case 8:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue simplify;
			default:
				return a;
		}
	}
};
var author$project$Database$Skill$toMax = function (a) {
	switch (a.$) {
		case 0:
			return 0;
		case 1:
			return 0;
		case 2:
			var x = a.a;
			return x;
		default:
			var y = a.b;
			return y;
	}
};
var author$project$Database$Skill$toMin = function (a) {
	switch (a.$) {
		case 0:
			return 0;
		case 1:
			return 0;
		case 2:
			var x = a.a;
			return x;
		default:
			var x = a.a;
			return x;
	}
};
var elm$core$List$concatMap = F2(
	function (f, list) {
		return elm$core$List$concat(
			A2(elm$core$List$map, f, list));
	});
var elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return elm$core$Maybe$Just(
			A3(elm$core$List$foldl, elm$core$Basics$max, x, xs));
	} else {
		return elm$core$Maybe$Nothing;
	}
};
var elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2(elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var elm$core$List$takeTailRec = F2(
	function (n, list) {
		return elm$core$List$reverse(
			A3(elm$core$List$takeReverse, n, list, _List_Nil));
	});
var elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _n0 = _Utils_Tuple2(n, list);
			_n0$1:
			while (true) {
				_n0$5:
				while (true) {
					if (!_n0.b.b) {
						return list;
					} else {
						if (_n0.b.b.b) {
							switch (_n0.a) {
								case 1:
									break _n0$1;
								case 2:
									var _n2 = _n0.b;
									var x = _n2.a;
									var _n3 = _n2.b;
									var y = _n3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_n0.b.b.b.b) {
										var _n4 = _n0.b;
										var x = _n4.a;
										var _n5 = _n4.b;
										var y = _n5.a;
										var _n6 = _n5.b;
										var z = _n6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _n0$5;
									}
								default:
									if (_n0.b.b.b.b && _n0.b.b.b.b.b) {
										var _n7 = _n0.b;
										var x = _n7.a;
										var _n8 = _n7.b;
										var y = _n8.a;
										var _n9 = _n8.b;
										var z = _n9.a;
										var _n10 = _n9.b;
										var w = _n10.a;
										var tl = _n10.b;
										return (ctr > 1000) ? A2(
											elm$core$List$cons,
											x,
											A2(
												elm$core$List$cons,
												y,
												A2(
													elm$core$List$cons,
													z,
													A2(
														elm$core$List$cons,
														w,
														A2(elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											elm$core$List$cons,
											x,
											A2(
												elm$core$List$cons,
												y,
												A2(
													elm$core$List$cons,
													z,
													A2(
														elm$core$List$cons,
														w,
														A3(elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _n0$5;
									}
							}
						} else {
							if (_n0.a === 1) {
								break _n0$1;
							} else {
								break _n0$5;
							}
						}
					}
				}
				return list;
			}
			var _n1 = _n0.b;
			var x = _n1.a;
			return _List_fromArray(
				[x]);
		}
	});
var elm$core$List$take = F2(
	function (n, list) {
		return A3(elm$core$List$takeFast, 0, n, list);
	});
var author$project$Database$Calculator$npDamage = F4(
	function (addSkills, special, maxOver, s) {
		var specialDefMod = -0;
		var skillFs = A3(
			elm$core$Basics$composeR,
			A2(
				author$project$StandardLibrary$doIf,
				addSkills,
				elm$core$Basics$append(s.b0)),
			A2(
				elm$core$Basics$composeR,
				elm$core$List$concatMap(
					function ($) {
						return $.ao;
					}),
				elm$core$List$map(author$project$Database$Skill$simplify)),
			s.bT);
		var servantAtk = s.a1.bG.a9;
		var selfDmgCutAdd = 0;
		var selfDamageMod = 0;
		var randomModifier = 1;
		var powerMod = 0;
		var maxIf = function (x) {
			return x ? author$project$Database$Skill$toMax : author$project$Database$Skill$toMin;
		};
		var npStrength = maxIf(s.bw || ((s.aU <= 3) && (s.aU > 0)));
		var overStrength = maxIf(maxOver);
		var isSuperEffective = 1.0;
		var isNP = 1;
		var isCrit = 0;
		var ifSpecial = special ? elm$core$Basics$identity : elm$core$Basics$always(_List_Nil);
		var firstCardBonus = 0;
		var extraCardModifier = 1;
		var criticalModifier = 1;
		var critDamageMod = 0;
		var classAtkBonus = function () {
			var _n5 = s.bi;
			switch (_n5) {
				case 6:
					return 1.1;
				case 8:
					return 1.1;
				case 9:
					return 1.1;
				case 2:
					return 1.05;
				case 1:
					return 0.95;
				case 3:
					return 0.9;
				case 5:
					return 0.9;
				default:
					return 1;
			}
		}();
		var busterChainMod = 0;
		var attributeModifier = 1;
		var _n0 = s.T;
		var card = _n0.bf;
		var effect = _n0.ao;
		var over = _n0.bS;
		var first = _n0.bu;
		var cardDamageValue = function () {
			switch (card) {
				case 0:
					return 0.8;
				case 1:
					return 1;
				default:
					return 1.5;
			}
		}();
		var npFs = A2(elm$core$List$map, author$project$Database$Skill$simplify, effect);
		var overFs = A2(elm$core$List$map, author$project$Database$Skill$simplify, over);
		var firstFs = first ? A2(elm$core$List$take, 1, overFs) : _List_Nil;
		var buffs = function () {
			var go = F2(
				function (f, a) {
					if (!a.$) {
						var t = a.a;
						var buff = a.c;
						var n = a.d;
						return author$project$Database$Calculator$selfable(t) ? _List_fromArray(
							[
								_Utils_Tuple2(
								buff,
								f(n) / 100)
							]) : _List_Nil;
					} else {
						return _List_Nil;
					}
				});
			return _Utils_ap(
				A2(
					elm$core$List$concatMap,
					go(author$project$Database$Skill$toMax),
					skillFs),
				_Utils_ap(
					A2(
						elm$core$List$concatMap,
						go(npStrength),
						npFs),
					A2(
						elm$core$List$concatMap,
						go(overStrength),
						firstFs)));
		}();
		var atkMod = A3(
			elm$core$Basics$composeR,
			elm$core$List$map(
				A2(
					elm$core$Basics$composeR,
					author$project$Database$Skill$Special(author$project$Database$Skill$AttackUp),
					author$project$Database$Calculator$matchSum(buffs))),
			A2(
				elm$core$Basics$composeR,
				elm$core$List$maximum,
				A2(
					elm$core$Basics$composeR,
					elm$core$Maybe$withDefault(0),
					elm$core$Basics$add(
						A2(author$project$Database$Calculator$matchSum, buffs, author$project$Database$Skill$AttackUp)))),
			ifSpecial(author$project$Database$Skill$enumSpecial));
		var cardMod = A2(
			author$project$Database$Calculator$matchSum,
			buffs,
			author$project$Database$Skill$Performance(card));
		var npDamageMod = A2(author$project$Database$Calculator$matchSum, buffs, author$project$Database$Skill$NPUp);
		var triangleModifier = A3(
			elm$core$Basics$composeR,
			elm$core$List$map(
				A2(
					elm$core$Basics$composeR,
					author$project$Database$Skill$VsClass,
					A2(
						elm$core$Basics$composeR,
						author$project$Database$Skill$Special(author$project$Database$Skill$AttackUp),
						author$project$Database$Calculator$matchSum(buffs)))),
			A2(
				elm$core$Basics$composeR,
				elm$core$List$sum,
				elm$core$Basics$add(1)),
			ifSpecial(author$project$Database$Base$enumClass));
		var debuffs = function () {
			var go = F2(
				function (f, a) {
					if (a.$ === 1) {
						var t = a.a;
						var debuff = a.c;
						var n = a.d;
						return (!author$project$Database$Skill$allied(t)) ? _List_fromArray(
							[
								_Utils_Tuple2(
								debuff,
								f(n) / 100)
							]) : _List_Nil;
					} else {
						return _List_Nil;
					}
				});
			return _Utils_ap(
				A2(
					elm$core$List$concatMap,
					go(author$project$Database$Skill$toMax),
					skillFs),
				_Utils_ap(
					A2(
						elm$core$List$concatMap,
						go(npStrength),
						npFs),
					A2(
						elm$core$List$concatMap,
						go(overStrength),
						firstFs)));
		}();
		var defMod = (-1) * A2(author$project$Database$Calculator$matchSum, debuffs, author$project$Database$Skill$DefenseDown);
		var dmgPlusAdd = 100 * (A2(author$project$Database$Calculator$matchSum, buffs, author$project$Database$Skill$DamageUp) + A2(author$project$Database$Calculator$matchSum, debuffs, author$project$Database$Skill$DamageVuln));
		var instants = function () {
			var go = F2(
				function (f, a) {
					if (a.$ === 2) {
						var t = a.a;
						var instant = a.b;
						var n = a.c;
						return (!author$project$Database$Skill$allied(t)) ? _List_fromArray(
							[
								_Utils_Tuple2(
								instant,
								f(n) / 100)
							]) : _List_Nil;
					} else {
						return _List_Nil;
					}
				});
			return _Utils_ap(
				A2(
					elm$core$List$concatMap,
					go(author$project$Database$Skill$toMax),
					skillFs),
				_Utils_ap(
					A2(
						elm$core$List$concatMap,
						go(npStrength),
						npFs),
					A2(
						elm$core$List$concatMap,
						go(overStrength),
						overFs)));
		}();
		var directDamage = A2(elm$core$Basics$max, s.a1.bb.bA, s.a1.bG.bA) * A2(author$project$Database$Calculator$matchSum, instants, author$project$Database$Skill$Avenge);
		var npDamageMultiplier = A3(
			elm$core$Basics$composeR,
			A2(
				author$project$StandardLibrary$doIf,
				special,
				elm$core$List$cons(author$project$Database$Skill$LastStand)),
			A2(
				elm$core$Basics$composeR,
				elm$core$List$map(
					author$project$Database$Calculator$matchSum(instants)),
				elm$core$List$sum),
			_List_fromArray(
				[author$project$Database$Skill$Damage, author$project$Database$Skill$DamageThruDef]));
		var superEffectiveModifier = A3(
			elm$core$Basics$composeR,
			elm$core$List$map(
				A2(
					elm$core$Basics$composeR,
					author$project$Database$Skill$SpecialDamage,
					author$project$Database$Calculator$matchSum(instants))),
			A2(
				elm$core$Basics$composeR,
				elm$core$List$maximum,
				A2(
					elm$core$Basics$composeR,
					elm$core$Maybe$withDefault(0),
					A2(
						elm$core$Basics$composeR,
						elm$core$Basics$add(
							A2(author$project$Database$Calculator$matchSum, instants, author$project$Database$Skill$DamagePoison)),
						elm$core$Basics$add(1)))),
			ifSpecial(author$project$Database$Skill$enumSpecial));
		return (!(npDamageMultiplier + directDamage)) ? 0 : (((((((((((((((((servantAtk * npDamageMultiplier) * (firstCardBonus + (cardDamageValue * (1.0 + cardMod)))) * classAtkBonus) * triangleModifier) * attributeModifier) * randomModifier) * 0.23) * ((1.0 + atkMod) - defMod)) * criticalModifier) * extraCardModifier) * (1.0 - specialDefMod)) * ((((1.0 + powerMod) + selfDamageMod) + (critDamageMod * isCrit)) + (npDamageMod * isNP))) * (1.0 + ((superEffectiveModifier - 1.0) * isSuperEffective))) + dmgPlusAdd) + selfDmgCutAdd) + (servantAtk * busterChainMod)) + directDamage);
	});
var author$project$Database$Calculator$passiveBuffs = function (s) {
	var go = function (a) {
		if (!a.$) {
			var t = a.a;
			var buff = a.c;
			var n = a.d;
			return author$project$Database$Calculator$selfable(t) ? _List_fromArray(
				[
					_Utils_Tuple2(
					buff,
					author$project$Database$Skill$toMax(n) / 100)
				]) : _List_Nil;
		} else {
			return _List_Nil;
		}
	};
	return A2(
		elm$core$List$concatMap,
		A2(elm$core$Basics$composeR, author$project$Database$Skill$simplify, go),
		A2(
			elm$core$List$concatMap,
			function ($) {
				return $.ao;
			},
			s.bT));
};
var author$project$Database$Calculator$npPer = F2(
	function (s, card) {
		var overkillModifier = 1;
		var offensiveNPRate = s.S.bM;
		var firstCardBonus = 1;
		var enemyServerMod = 1;
		var criticalModifier = 1;
		var cardNpValue = 1.5 * function () {
			switch (card) {
				case 1:
					return 3;
				case 0:
					return 1;
				default:
					return 0;
			}
		}();
		var buffs = author$project$Database$Calculator$passiveBuffs(s);
		var cardMod = A2(
			author$project$Database$Calculator$matchSum,
			buffs,
			author$project$Database$Skill$Performance(card));
		var npChargeRateMod = A2(author$project$Database$Calculator$matchSum, buffs, author$project$Database$Skill$NPGen);
		return (((((s.ay.a8 * offensiveNPRate) * (firstCardBonus + (cardNpValue * (1 + cardMod)))) * enemyServerMod) * (1 + npChargeRateMod)) * criticalModifier) * overkillModifier;
	});
var elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var author$project$Database$Calculator$starsPer = F2(
	function (s, card) {
		var serverRate = 0;
		var overkillModifier = 1;
		var overkillAdd = 0;
		var firstCardBonus = 0.2;
		var enemyStarDropMod = 0;
		var criticalModifier = 0;
		var cardStarValue = function () {
			switch (card) {
				case 0:
					return 1.3;
				case 1:
					return 0.15;
				default:
					return 0;
			}
		}();
		var buffs = author$project$Database$Calculator$passiveBuffs(s);
		var cardMod = A2(
			author$project$Database$Calculator$matchSum,
			buffs,
			author$project$Database$Skill$Performance(card));
		var starDropMod = A2(author$project$Database$Calculator$matchSum, buffs, author$project$Database$Skill$StarUp);
		var baseStarRate = s.S.b1 / 100;
		return ((s.ay.bY * A2(elm$core$Basics$min, 3, (((((baseStarRate + firstCardBonus) + (cardStarValue * (1 + cardMod))) + serverRate) + starDropMod) - enemyStarDropMod) + criticalModifier)) * overkillModifier) + overkillAdd;
	});
var author$project$MyServant$toSort = F3(
	function (addSkills, sortBy, s) {
		switch (sortBy) {
			case 1:
				return (-1) * s.aB;
			case 0:
				return s.aU;
			case 2:
				return s.a1.bG.a9;
			case 3:
				return s.a1.bG.bA;
			case 4:
				return s.S.b2;
			case 5:
				return A2(author$project$Database$Calculator$npPer, s, 1);
			case 6:
				return A3(
					elm$core$Basics$composeR,
					elm$core$List$map(
						author$project$Database$Calculator$npPer(s)),
					elm$core$List$sum,
					author$project$Database$Servant$getDeck(s));
			case 7:
				return A2(author$project$Database$Calculator$starsPer, s, 0);
			case 8:
				return A3(
					elm$core$Basics$composeR,
					elm$core$List$map(
						author$project$Database$Calculator$starsPer(s)),
					elm$core$List$sum,
					author$project$Database$Servant$getDeck(s));
			case 9:
				return A4(author$project$Database$Calculator$npDamage, addSkills, false, false, s);
			case 10:
				return A4(author$project$Database$Calculator$npDamage, addSkills, false, true, s);
			case 11:
				return A4(author$project$Database$Calculator$npDamage, addSkills, true, false, s);
			default:
				return A4(author$project$Database$Calculator$npDamage, addSkills, true, true, s);
		}
	});
var author$project$Sorting$ATK = 2;
var author$project$Sorting$HP = 3;
var author$project$Sorting$ID = 1;
var author$project$Sorting$NPArts = 5;
var author$project$Sorting$NPDeck = 6;
var author$project$Sorting$NPDmg = 9;
var author$project$Sorting$NPDmgOver = 10;
var author$project$Sorting$NPSpec = 11;
var author$project$Sorting$NPSpecOver = 12;
var author$project$Sorting$Rarity = 0;
var author$project$Sorting$StarDeck = 8;
var author$project$Sorting$StarQuick = 7;
var author$project$Sorting$StarWeight = 4;
var author$project$Sorting$enumSortBy = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
var elm_community$list_extra$List$Extra$findIndexHelp = F3(
	function (index, predicate, list) {
		findIndexHelp:
		while (true) {
			if (!list.b) {
				return elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$predicate = predicate,
						$temp$list = xs;
					index = $temp$index;
					predicate = $temp$predicate;
					list = $temp$list;
					continue findIndexHelp;
				}
			}
		}
	});
var elm_community$list_extra$List$Extra$findIndex = elm_community$list_extra$List$Extra$findIndexHelp(0);
var author$project$StandardLibrary$enumToOrd = F2(
	function (xs, x) {
		return A2(
			elm$core$Maybe$withDefault,
			-1,
			A2(
				elm_community$list_extra$List$Extra$findIndex,
				elm$core$Basics$eq(x),
				xs));
	});
var author$project$Sorting$ordSortBy = author$project$StandardLibrary$enumToOrd(author$project$Sorting$enumSortBy);
var author$project$StandardLibrary$dict = function (xs) {
	return A2(
		elm$core$Basics$composeR,
		A2(author$project$StandardLibrary$flip, elm$core$List$map, xs),
		elm$core$Dict$fromList);
};
var author$project$MyServant$mapSort = function (ms) {
	var go = function (sorter) {
		var doSort = function (addSkills) {
			return A3(author$project$MyServant$toSort, addSkills, sorter, ms.J);
		};
		return _Utils_Tuple2(
			author$project$Sorting$ordSortBy(sorter),
			_Utils_Tuple2(
				doSort(true),
				doSort(false)));
	};
	return _Utils_update(
		ms,
		{
			V: A2(author$project$StandardLibrary$dict, author$project$Sorting$enumSortBy, go)
		});
};
var author$project$MyServant$makeUnowned = function (s) {
	return author$project$MyServant$mapSort(
		{
			Z: 1,
			bb: s,
			R: {a9: 990, bA: 990},
			H: 0,
			y: (s.bw || ((s.aU <= 3) && (s.aU > 0))) ? 5 : 1,
			J: s,
			b0: _List_fromArray(
				[10, 10, 10]),
			V: elm$core$Dict$empty
		});
};
var author$project$MyServant$unowneds = A2(
	author$project$StandardLibrary$dict,
	author$project$Database$servants,
	function (x) {
		return _Utils_Tuple2(
			author$project$Database$Servant$ordServant(x),
			author$project$MyServant$makeUnowned(x));
	});
var author$project$MyServant$unowned = function (s) {
	var _n0 = A2(
		elm$core$Dict$get,
		author$project$Database$Servant$ordServant(s),
		author$project$MyServant$unowneds);
	if (!_n0.$) {
		var ms = _n0.a;
		return ms;
	} else {
		return author$project$MyServant$makeUnowned(s);
	}
};
var author$project$MyServant$owned = F2(
	function (team, s) {
		var _n0 = A2(
			elm$core$Dict$get,
			author$project$Database$Servant$ordServant(s),
			team);
		if (!_n0.$) {
			var ms = _n0.a;
			return ms;
		} else {
			return author$project$MyServant$unowned(s);
		}
	});
var author$project$Site$Algebra$DoNothing = {$: 13};
var author$project$Site$Application$ChangeUrl = function (a) {
	return {$: 1, a: a};
};
var author$project$Site$Application$CraftEssences = 0;
var author$project$Site$Application$CraftEssencesMsg = function (a) {
	return {$: 2, a: a};
};
var author$project$Site$Application$RequestUrl = function (a) {
	return {$: 0, a: a};
};
var author$project$Site$Application$Servants = 1;
var author$project$Site$Application$ServantsMsg = function (a) {
	return {$: 3, a: a};
};
var elm$core$String$filter = _String_filter;
var author$project$Printing$urlName = elm$core$String$filter(
	elm$core$Basics$neq(' '));
var author$project$Site$Application$focusFromPath = F3(
	function (path, show, st) {
		var snd = elm$core$Tuple$second;
		var match = A2(
			elm$core$Basics$composeR,
			show,
			A2(
				elm$core$Basics$composeR,
				author$project$Printing$urlName,
				elm$core$Basics$eq(path)));
		var _n0 = A2(elm$core$Maybe$map, match, st.aw);
		if ((!_n0.$) && _n0.a) {
			return st;
		} else {
			return _Utils_update(
				st,
				{
					aw: A2(
						elm$core$Maybe$map,
						snd,
						A2(
							elm_community$list_extra$List$Extra$find,
							A2(elm$core$Basics$composeR, snd, match),
							st.aE))
				});
		}
	});
var elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return elm$core$Maybe$Just(x);
	} else {
		return elm$core$Maybe$Nothing;
	}
};
var elm$core$String$contains = _String_contains;
var author$project$Site$Application$stateFromPath = F2(
	function (fullPath, st) {
		var path = A3(
			elm$core$Basics$composeR,
			elm$core$List$reverse,
			A2(
				elm$core$Basics$composeR,
				elm$core$List$head,
				elm$core$Maybe$withDefault('')),
			A2(elm$core$String$split, '/', fullPath));
		if (A2(elm$core$String$contains, 'CraftEssences', fullPath)) {
			var ceModel = A3(
				author$project$Site$Application$focusFromPath,
				path,
				function ($) {
					return $.bI;
				},
				st.j);
			return _Utils_Tuple2(
				_Utils_update(
					st,
					{j: ceModel, u: 0}),
				A2(
					elm$core$Maybe$withDefault,
					'Craft Essences',
					A2(
						elm$core$Maybe$map,
						function ($) {
							return $.bI;
						},
						ceModel.aw)));
		} else {
			var sModel = A3(
				author$project$Site$Application$focusFromPath,
				path,
				A2(
					elm$core$Basics$composeR,
					function ($) {
						return $.bb;
					},
					function ($) {
						return $.bI;
					}),
				st.l);
			var mineOnly = A2(elm$core$String$contains, 'MyServants', fullPath);
			var _n0 = sModel;
			var extra = _n0.at;
			return _Utils_Tuple2(
				_Utils_update(
					st,
					{
						l: _Utils_update(
							sModel,
							{
								at: _Utils_update(
									extra,
									{aG: mineOnly})
							}),
						u: 1
					}),
				A2(
					elm$core$Maybe$withDefault,
					A3(
						author$project$StandardLibrary$doIf,
						mineOnly,
						elm$core$Basics$append('My '),
						'Servants'),
					A2(
						elm$core$Maybe$map,
						A2(
							elm$core$Basics$composeR,
							function ($) {
								return $.bb;
							},
							function ($) {
								return $.bI;
							}),
						sModel.aw)));
		}
	});
var elm$browser$Browser$External = function (a) {
	return {$: 1, a: a};
};
var elm$browser$Browser$Internal = function (a) {
	return {$: 0, a: a};
};
var elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;
var elm$core$Basics$never = function (_n0) {
	never:
	while (true) {
		var nvr = _n0;
		var $temp$_n0 = nvr;
		_n0 = $temp$_n0;
		continue never;
	}
};
var elm$core$Task$Perform = elm$core$Basics$identity;
var elm$core$Task$succeed = _Scheduler_succeed;
var elm$core$Task$init = elm$core$Task$succeed(0);
var elm$core$Task$andThen = _Scheduler_andThen;
var elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			elm$core$Task$andThen,
			function (a) {
				return elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			elm$core$Task$andThen,
			function (a) {
				return A2(
					elm$core$Task$andThen,
					function (b) {
						return elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var elm$core$Task$sequence = function (tasks) {
	return A3(
		elm$core$List$foldr,
		elm$core$Task$map2(elm$core$List$cons),
		elm$core$Task$succeed(_List_Nil),
		tasks);
};
var elm$core$Platform$sendToApp = _Platform_sendToApp;
var elm$core$Task$spawnCmd = F2(
	function (router, _n0) {
		var task = _n0;
		return _Scheduler_spawn(
			A2(
				elm$core$Task$andThen,
				elm$core$Platform$sendToApp(router),
				task));
	});
var elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			elm$core$Task$map,
			function (_n0) {
				return 0;
			},
			elm$core$Task$sequence(
				A2(
					elm$core$List$map,
					elm$core$Task$spawnCmd(router),
					commands)));
	});
var elm$core$Task$onSelfMsg = F3(
	function (_n0, _n1, _n2) {
		return elm$core$Task$succeed(0);
	});
var elm$core$Task$cmdMap = F2(
	function (tagger, _n0) {
		var task = _n0;
		return A2(elm$core$Task$map, tagger, task);
	});
_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);
var elm$core$Task$command = _Platform_leaf('Task');
var elm$core$Task$perform = F2(
	function (toMessage, task) {
		return elm$core$Task$command(
			A2(elm$core$Task$map, toMessage, task));
	});
var elm$json$Json$Decode$map = _Json_map1;
var elm$json$Json$Decode$map2 = _Json_map2;
var elm$json$Json$Decode$succeed = _Json_succeed;
var elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		default:
			return 3;
	}
};
var elm$core$String$startsWith = _String_startsWith;
var elm$url$Url$Http = 0;
var elm$url$Url$Https = 1;
var elm$core$String$indexes = _String_indexes;
var elm$core$String$isEmpty = function (string) {
	return string === '';
};
var elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);
	});
var elm$core$String$toInt = _String_toInt;
var elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {ax: fragment, az: host, aM: path, aO: port_, aS: protocol, aT: query};
	});
var elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, ':', str);
			if (!_n0.b) {
				return elm$core$Maybe$Just(
					A6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_n0.b.b) {
					var i = _n0.a;
					var _n1 = elm$core$String$toInt(
						A2(elm$core$String$dropLeft, i + 1, str));
					if (_n1.$ === 1) {
						return elm$core$Maybe$Nothing;
					} else {
						var port_ = _n1;
						return elm$core$Maybe$Just(
							A6(
								elm$url$Url$Url,
								protocol,
								A2(elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return elm$core$Maybe$Nothing;
				}
			}
		}
	});
var elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if (elm$core$String$isEmpty(str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, '/', str);
			if (!_n0.b) {
				return A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _n0.a;
				return A5(
					elm$url$Url$chompBeforePath,
					protocol,
					A2(elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2(elm$core$String$left, i, str));
			}
		}
	});
var elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if (elm$core$String$isEmpty(str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, '?', str);
			if (!_n0.b) {
				return A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _n0.a;
				return A4(
					elm$url$Url$chompBeforeQuery,
					protocol,
					elm$core$Maybe$Just(
						A2(elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2(elm$core$String$left, i, str));
			}
		}
	});
var elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if (elm$core$String$isEmpty(str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, '#', str);
			if (!_n0.b) {
				return A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);
			} else {
				var i = _n0.a;
				return A3(
					elm$url$Url$chompBeforeFragment,
					protocol,
					elm$core$Maybe$Just(
						A2(elm$core$String$dropLeft, i + 1, str)),
					A2(elm$core$String$left, i, str));
			}
		}
	});
var elm$url$Url$fromString = function (str) {
	return A2(elm$core$String$startsWith, 'http://', str) ? A2(
		elm$url$Url$chompAfterProtocol,
		0,
		A2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(
		elm$url$Url$chompAfterProtocol,
		1,
		A2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);
};
var elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var elm$url$Url$Builder$toQueryPair = function (_n0) {
	var key = _n0.a;
	var value = _n0.b;
	return key + ('=' + value);
};
var elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			elm$core$String$join,
			'&',
			A2(elm$core$List$map, elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var elm$url$Url$Builder$absolute = F2(
	function (pathSegments, parameters) {
		return '/' + (A2(elm$core$String$join, '/', pathSegments) + elm$url$Url$Builder$toQuery(parameters));
	});
var author$project$Site$Common$setPath = F2(
	function (key, path) {
		return A2(
			elm$browser$Browser$Navigation$pushUrl,
			key,
			A2(
				elm$url$Url$Builder$absolute,
				A2(
					elm$core$List$cons,
					'chaldeas',
					A2(elm$core$List$map, author$project$Printing$urlName, path)),
				_List_Nil));
	});
var author$project$Site$Common$setFocus = F3(
	function (key, root, a) {
		if (a.$ === 1) {
			return A2(
				author$project$Site$Common$setPath,
				key,
				_List_fromArray(
					[root]));
		} else {
			var name = a.a;
			return A2(
				author$project$Site$Common$setPath,
				key,
				_List_fromArray(
					[
						root,
						author$project$Printing$urlName(name)
					]));
		}
	});
var author$project$Site$Algebra$Switch = function (a) {
	return {$: 12, a: a};
};
var author$project$Date$Date = F3(
	function (year, month, day) {
		return {am: day, aH: month, a5: year};
	});
var elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var elm$time$Time$customZone = elm$time$Time$Zone;
var author$project$Date$here = A2(elm$time$Time$customZone, (-4) * 60, _List_Nil);
var elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return elm$core$Basics$floor(numerator / denominator);
	});
var elm$time$Time$posixToMillis = function (_n0) {
	var millis = _n0;
	return millis;
};
var elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.a0, posixMinutes) < 0) {
					return posixMinutes + era.aK;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var elm$time$Time$toAdjustedMinutes = F2(
	function (_n0, time) {
		var defaultOffset = _n0.a;
		var eras = _n0.b;
		return A3(
			elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				elm$time$Time$flooredDiv,
				elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var elm$core$Basics$ge = _Utils_ge;
var elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2(elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		am: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		aH: month,
		a5: year + ((month <= 2) ? 1 : 0)
	};
};
var elm$time$Time$toDay = F2(
	function (zone, time) {
		return elm$time$Time$toCivil(
			A2(elm$time$Time$toAdjustedMinutes, zone, time)).am;
	});
var elm$time$Time$Apr = 3;
var elm$time$Time$Aug = 7;
var elm$time$Time$Dec = 11;
var elm$time$Time$Feb = 1;
var elm$time$Time$Jan = 0;
var elm$time$Time$Jul = 6;
var elm$time$Time$Jun = 5;
var elm$time$Time$Mar = 2;
var elm$time$Time$May = 4;
var elm$time$Time$Nov = 10;
var elm$time$Time$Oct = 9;
var elm$time$Time$Sep = 8;
var elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _n0 = elm$time$Time$toCivil(
			A2(elm$time$Time$toAdjustedMinutes, zone, time)).aH;
		switch (_n0) {
			case 1:
				return 0;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 3;
			case 5:
				return 4;
			case 6:
				return 5;
			case 7:
				return 6;
			case 8:
				return 7;
			case 9:
				return 8;
			case 10:
				return 9;
			case 11:
				return 10;
			default:
				return 11;
		}
	});
var elm$time$Time$toYear = F2(
	function (zone, time) {
		return elm$time$Time$toCivil(
			A2(elm$time$Time$toAdjustedMinutes, zone, time)).a5;
	});
var author$project$Date$today = function (now) {
	var get = function (f) {
		return A2(f, author$project$Date$here, now);
	};
	return A3(
		author$project$Date$Date,
		get(elm$time$Time$toYear),
		get(elm$time$Time$toMonth),
		get(elm$time$Time$toDay));
};
var author$project$Persist$Flags$Flags = F3(
	function (today, preferences, team) {
		return {bX: preferences, b6: team, b9: today};
	});
var elm$json$Json$Decode$andThen = _Json_andThen;
var elm$json$Json$Decode$int = _Json_decodeInt;
var elm$time$Time$Posix = elm$core$Basics$identity;
var elm$time$Time$millisToPosix = elm$core$Basics$identity;
var author$project$Persist$Flags$decodeDate = A2(
	elm$json$Json$Decode$andThen,
	A2(
		elm$core$Basics$composeR,
		elm$time$Time$millisToPosix,
		A2(elm$core$Basics$composeR, author$project$Date$today, elm$json$Json$Decode$succeed)),
	elm$json$Json$Decode$int);
var author$project$Class$Show$preference = function (a) {
	switch (a) {
		case 6:
			return 'Add skills to NP damage';
		case 0:
			return 'Artorify';
		case 4:
			return 'Exclude self-applied effects';
		case 7:
			return 'Hide (Class) in names';
		case 5:
			return 'Show all at max ascension';
		case 1:
			return 'Night Mode';
		case 3:
			return 'Show skill and NP tables';
		default:
			return 'Thumbnails';
	}
};
var author$project$Persist$Preferences$AddSkills = 6;
var author$project$Persist$Preferences$Artorify = 0;
var author$project$Persist$Preferences$ExcludeSelf = 4;
var author$project$Persist$Preferences$HideClasses = 7;
var author$project$Persist$Preferences$MaxAscension = 5;
var author$project$Persist$Preferences$NightMode = 1;
var author$project$Persist$Preferences$ShowTables = 3;
var author$project$Persist$Preferences$Thumbnails = 2;
var author$project$Persist$Preferences$enumPreference = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7]);
var author$project$Persist$Preferences$prefDefault = function (a) {
	if (a === 6) {
		return true;
	} else {
		return false;
	}
};
var author$project$Persist$Preferences$ordPreference = author$project$StandardLibrary$enumToOrd(author$project$Persist$Preferences$enumPreference);
var elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;
var elm$core$Set$insert = F2(
	function (key, _n0) {
		var dict = _n0;
		return A3(elm$core$Dict$insert, key, 0, dict);
	});
var elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === -1) && (dict.d.$ === -1)) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.e.d.$ === -1) && (!dict.e.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _n1 = dict.d;
			var lClr = _n1.a;
			var lK = _n1.b;
			var lV = _n1.c;
			var lLeft = _n1.d;
			var lRight = _n1.e;
			var _n2 = dict.e;
			var rClr = _n2.a;
			var rK = _n2.b;
			var rV = _n2.c;
			var rLeft = _n2.d;
			var _n3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _n2.e;
			return A5(
				elm$core$Dict$RBNode_elm_builtin,
				0,
				rlK,
				rlV,
				A5(
					elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					rlL),
				A5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _n4 = dict.d;
			var lClr = _n4.a;
			var lK = _n4.b;
			var lV = _n4.c;
			var lLeft = _n4.d;
			var lRight = _n4.e;
			var _n5 = dict.e;
			var rClr = _n5.a;
			var rK = _n5.b;
			var rV = _n5.c;
			var rLeft = _n5.d;
			var rRight = _n5.e;
			if (clr === 1) {
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.d.d.$ === -1) && (!dict.d.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _n1 = dict.d;
			var lClr = _n1.a;
			var lK = _n1.b;
			var lV = _n1.c;
			var _n2 = _n1.d;
			var _n3 = _n2.a;
			var llK = _n2.b;
			var llV = _n2.c;
			var llLeft = _n2.d;
			var llRight = _n2.e;
			var lRight = _n1.e;
			var _n4 = dict.e;
			var rClr = _n4.a;
			var rK = _n4.b;
			var rV = _n4.c;
			var rLeft = _n4.d;
			var rRight = _n4.e;
			return A5(
				elm$core$Dict$RBNode_elm_builtin,
				0,
				lK,
				lV,
				A5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
				A5(
					elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					lRight,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _n5 = dict.d;
			var lClr = _n5.a;
			var lK = _n5.b;
			var lV = _n5.c;
			var lLeft = _n5.d;
			var lRight = _n5.e;
			var _n6 = dict.e;
			var rClr = _n6.a;
			var rK = _n6.b;
			var rV = _n6.c;
			var rLeft = _n6.d;
			var rRight = _n6.e;
			if (clr === 1) {
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === -1) && (!left.a)) {
			var _n1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));
		} else {
			_n2$2:
			while (true) {
				if ((right.$ === -1) && (right.a === 1)) {
					if (right.d.$ === -1) {
						if (right.d.a === 1) {
							var _n3 = right.a;
							var _n4 = right.d;
							var _n5 = _n4.a;
							return elm$core$Dict$moveRedRight(dict);
						} else {
							break _n2$2;
						}
					} else {
						var _n6 = right.a;
						var _n7 = right.d;
						return elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _n2$2;
				}
			}
			return dict;
		}
	});
var elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === -1) && (dict.d.$ === -1)) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor === 1) {
			if ((lLeft.$ === -1) && (!lLeft.a)) {
				var _n3 = lLeft.a;
				return A5(
					elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					elm$core$Dict$removeMin(left),
					right);
			} else {
				var _n4 = elm$core$Dict$moveRedLeft(dict);
				if (_n4.$ === -1) {
					var nColor = _n4.a;
					var nKey = _n4.b;
					var nValue = _n4.c;
					var nLeft = _n4.d;
					var nRight = _n4.e;
					return A5(
						elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === -2) {
			return elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === -1) && (left.a === 1)) {
					var _n4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === -1) && (!lLeft.a)) {
						var _n6 = lLeft.a;
						return A5(
							elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2(elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _n7 = elm$core$Dict$moveRedLeft(dict);
						if (_n7.$ === -1) {
							var nColor = _n7.a;
							var nKey = _n7.b;
							var nValue = _n7.c;
							var nLeft = _n7.d;
							var nRight = _n7.e;
							return A5(
								elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2(elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2(elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7(elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === -1) {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _n1 = elm$core$Dict$getMin(right);
				if (_n1.$ === -1) {
					var minKey = _n1.b;
					var minValue = _n1.c;
					return A5(
						elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						elm$core$Dict$removeMin(right));
				} else {
					return elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2(elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var elm$core$Dict$remove = F2(
	function (key, dict) {
		var _n0 = A2(elm$core$Dict$removeHelp, key, dict);
		if ((_n0.$ === -1) && (!_n0.a)) {
			var _n1 = _n0.a;
			var k = _n0.b;
			var v = _n0.c;
			var l = _n0.d;
			var r = _n0.e;
			return A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _n0;
			return x;
		}
	});
var elm$core$Set$remove = F2(
	function (key, _n0) {
		var dict = _n0;
		return A2(elm$core$Dict$remove, key, dict);
	});
var author$project$Persist$Preferences$setPreference = F2(
	function (pref, a) {
		if (a) {
			return elm$core$Set$insert(
				author$project$Persist$Preferences$ordPreference(pref));
		} else {
			return elm$core$Set$remove(
				author$project$Persist$Preferences$ordPreference(pref));
		}
	});
var elm$core$Set$empty = elm$core$Dict$empty;
var author$project$Persist$Preferences$noPreferences = function () {
	var acc = function (pref) {
		return A2(
			author$project$Persist$Preferences$setPreference,
			pref,
			author$project$Persist$Preferences$prefDefault(pref));
	};
	return A3(elm$core$List$foldr, acc, elm$core$Set$empty, author$project$Persist$Preferences$enumPreference);
}();
var elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var elm$json$Json$Decode$list = _Json_decodeList;
var elm$json$Json$Decode$null = _Json_decodeNull;
var elm$json$Json$Decode$oneOf = _Json_oneOf;
var elm$json$Json$Decode$nullable = function (decoder) {
	return elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				elm$json$Json$Decode$null(elm$core$Maybe$Nothing),
				A2(elm$json$Json$Decode$map, elm$core$Maybe$Just, decoder)
			]));
};
var elm$json$Json$Decode$string = _Json_decodeString;
var author$project$Persist$Flags$decodePreferences = function () {
	var fromList = function (a) {
		return elm$json$Json$Decode$succeed(
			function () {
				if (a.$ === 1) {
					return author$project$Persist$Preferences$noPreferences;
				} else {
					var prefs = a.a;
					var acc = function (pref) {
						return A2(
							author$project$Persist$Preferences$setPreference,
							pref,
							A2(
								elm$core$List$member,
								author$project$Class$Show$preference(pref),
								prefs));
					};
					return A3(elm$core$List$foldr, acc, elm$core$Set$empty, author$project$Persist$Preferences$enumPreference);
				}
			}());
	};
	return A3(
		elm$core$Basics$composeR,
		elm$json$Json$Decode$nullable,
		elm$json$Json$Decode$andThen(fromList),
		elm$json$Json$Decode$list(elm$json$Json$Decode$string));
}();
var author$project$Database$Base$addStats = F2(
	function (x, y) {
		return {a9: x.a9 + y.a9, bA: x.bA + y.bA};
	});
var author$project$Database$Skill$mapAmount = F2(
	function (f, eff) {
		var f_ = function (x) {
			if (x.$ === 3) {
				var a = x.a;
				var b = x.b;
				return A2(f, a, b);
			} else {
				return x;
			}
		};
		var go = function (x) {
			go:
			while (true) {
				switch (x.$) {
					case 0:
						var a = x.a;
						var b = x.b;
						var c = x.c;
						var d = x.d;
						return A4(
							author$project$Database$Skill$Grant,
							a,
							b,
							c,
							f_(d));
					case 1:
						var a = x.a;
						var b = x.b;
						var c = x.c;
						var d = x.d;
						return A4(
							author$project$Database$Skill$Debuff,
							a,
							b,
							c,
							f_(d));
					case 2:
						var a = x.a;
						var b = x.b;
						var c = x.c;
						return A3(
							author$project$Database$Skill$To,
							a,
							b,
							f_(c));
					case 3:
						var a = x.a;
						var b = x.b;
						var c = x.c;
						return A3(
							author$project$Database$Skill$Bonus,
							a,
							b,
							f_(c));
					case 4:
						var a = x.a;
						var b = x.b;
						return A2(
							author$project$Database$Skill$Chance,
							a,
							go(b));
					case 6:
						var a = x.a;
						var b = x.b;
						return A2(
							author$project$Database$Skill$When,
							a,
							go(b));
					case 7:
						var a = x.a;
						var b = x.b;
						return A2(
							author$project$Database$Skill$Times,
							a,
							go(b));
					case 8:
						var a = x.a;
						var b = x.b;
						return A2(
							author$project$Database$Skill$ToMax,
							f_(a),
							go(b));
					default:
						var a = x.a;
						var b = x.b;
						var c = x.c;
						var _n1 = A2(f, a, b);
						switch (_n1.$) {
							case 2:
								var y = _n1.a;
								return A2(
									author$project$Database$Skill$Chance,
									elm$core$Basics$floor(y),
									go(c));
							case 3:
								var y = _n1.a;
								var z = _n1.b;
								return A3(
									author$project$Database$Skill$Chances,
									elm$core$Basics$floor(y),
									elm$core$Basics$floor(z),
									go(c));
							case 0:
								var $temp$x = c;
								x = $temp$x;
								continue go;
							default:
								var $temp$x = c;
								x = $temp$x;
								continue go;
						}
				}
			}
		};
		return go(eff);
	});
var elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);
			var jsArray = _n0.a;
			var remainingItems = _n0.b;
			if (_Utils_cmp(
				elm$core$Elm$JsArray$length(jsArray),
				elm$core$Array$branchFactor) < 0) {
				return A2(
					elm$core$Array$builderToArray,
					true,
					{d: nodeList, a: nodeListSize, c: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					elm$core$List$cons,
					elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return elm$core$Array$empty;
	} else {
		return A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var author$project$MyServant$GrowthCurves$growthCurves = A3(
	elm$core$Basics$composeL,
	elm$core$Array$fromList,
	elm$core$List$map(elm$core$Array$fromList),
	_List_fromArray(
		[
			_List_fromArray(
			[0, 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 202, 212, 222, 232, 242, 252, 262, 272, 282, 292, 303, 313, 323, 333, 343, 353, 363, 373, 383, 393, 404, 414, 424, 434, 444, 454, 464, 474, 484, 494, 505, 515, 525, 535, 545, 555, 565, 575, 585, 595, 606, 616, 626, 636, 646, 656, 666, 676, 686, 696, 707, 717, 727, 737, 747, 757, 767, 777, 787, 797, 808, 818, 828, 838, 848, 858, 868, 878, 888, 898, 909, 919, 929, 939, 949, 959, 969, 979, 989, 1000, 1010, 1020, 1030, 1040, 1050, 1060, 1070, 1080, 1090, 1101, 1111, 1121, 1131, 1141, 1151, 1161, 1171, 1181, 1191, 1202, 1212, 1222, 1232, 1242, 1252, 1262, 1272, 1282, 1292, 1303, 1313, 1323, 1333, 1343, 1353, 1363, 1373, 1383, 1393, 1404, 1414, 1424, 1434, 1444, 1454, 1464, 1474, 1484, 1494, 1505, 1515, 1525, 1535, 1545, 1555, 1565, 1575, 1585, 1595, 1606, 1616, 1626, 1636, 1646, 1656, 1666, 1676, 1686, 1696, 1707, 1717, 1727, 1737, 1747, 1757, 1767, 1777, 1787, 1797, 1808, 1818, 1828, 1838, 1848, 1858, 1868, 1878, 1888, 1898, 1909, 1919, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 2000, 2010]),
			_List_fromArray(
			[0, 0, 16, 33, 50, 67, 84, 101, 118, 135, 152, 169, 186, 203, 220, 237, 254, 271, 288, 305, 322, 338, 355, 372, 389, 406, 423, 440, 457, 474, 491, 508, 525, 542, 559, 576, 593, 610, 627, 644, 661, 677, 694, 711, 728, 745, 762, 779, 796, 813, 830, 847, 864, 881, 898, 915, 932, 949, 966, 983, 1000, 1016, 1033, 1050, 1067, 1084, 1101, 1118, 1135, 1152, 1169, 1186, 1203, 1220, 1237, 1254, 1271, 1288, 1305, 1322, 1338, 1355, 1372, 1389, 1406, 1423, 1440, 1457, 1474, 1491, 1508, 1525, 1542, 1559, 1576, 1593, 1610, 1627, 1644, 1661, 1677]),
			_List_fromArray(
			[0, 0, 15, 31, 46, 62, 78, 93, 109, 125, 140, 156, 171, 187, 203, 218, 234, 250, 265, 281, 296, 312, 328, 343, 359, 375, 390, 406, 421, 437, 453, 468, 484, 500, 515, 531, 546, 562, 578, 593, 609, 625, 640, 656, 671, 687, 703, 718, 734, 750, 765, 781, 796, 812, 828, 843, 859, 875, 890, 906, 921, 937, 953, 968, 984, 1000, 1015, 1031, 1046, 1062, 1078, 1093, 1109, 1125, 1140, 1156, 1171, 1187, 1203, 1218, 1234, 1250, 1265, 1281, 1296, 1312, 1328, 1343, 1359, 1375, 1390, 1406, 1421, 1437, 1453, 1468, 1484, 1500, 1515, 1531, 1546]),
			_List_fromArray(
			[0, 0, 14, 28, 43, 57, 72, 86, 101, 115, 130, 144, 159, 173, 188, 202, 217, 231, 246, 260, 275, 289, 304, 318, 333, 347, 362, 376, 391, 405, 420, 434, 449, 463, 478, 492, 507, 521, 536, 550, 565, 579, 594, 608, 623, 637, 652, 666, 681, 695, 710, 724, 739, 753, 768, 782, 797, 811, 826, 840, 855, 869, 884, 898, 913, 927, 942, 956, 971, 985, 1000, 1014, 1028, 1043, 1057, 1072, 1086, 1101, 1115, 1130, 1144, 1159, 1173, 1188, 1202, 1217, 1231, 1246, 1260, 1275, 1289, 1304, 1318, 1333, 1347, 1362, 1376, 1391, 1405, 1420, 1434]),
			_List_fromArray(
			[0, 0, 12, 25, 37, 50, 63, 75, 88, 101, 113, 126, 139, 151, 164, 177, 189, 202, 215, 227, 240, 253, 265, 278, 291, 303, 316, 329, 341, 354, 367, 379, 392, 405, 417, 430, 443, 455, 468, 481, 493, 506, 518, 531, 544, 556, 569, 582, 594, 607, 620, 632, 645, 658, 670, 683, 696, 708, 721, 734, 746, 759, 772, 784, 797, 810, 822, 835, 848, 860, 873, 886, 898, 911, 924, 936, 949, 962, 974, 987, 1000, 1012, 1025, 1037, 1050, 1063, 1075, 1088, 1101, 1113, 1126, 1139, 1151, 1164, 1177, 1189, 1202, 1215, 1227, 1240, 1253]),
			_List_fromArray(
			[0, 0, 11, 22, 33, 44, 56, 67, 78, 89, 101, 112, 123, 134, 146, 157, 168, 179, 191, 202, 213, 224, 235, 247, 258, 269, 280, 292, 303, 314, 325, 337, 348, 359, 370, 382, 393, 404, 415, 426, 438, 449, 460, 471, 483, 494, 505, 516, 528, 539, 550, 561, 573, 584, 595, 606, 617, 629, 640, 651, 662, 674, 685, 696, 707, 719, 730, 741, 752, 764, 775, 786, 797, 808, 820, 831, 842, 853, 865, 876, 887, 898, 910, 921, 932, 943, 955, 966, 977, 988, 1000, 1011, 1022, 1033, 1044, 1056, 1067, 1078, 1089, 1101, 1112]),
			_List_fromArray(
			[0, 0, 26, 53, 79, 105, 131, 157, 182, 206, 230, 253, 276, 298, 319, 339, 358, 376, 393, 409, 423, 437, 449, 460, 470, 478, 485, 491, 495, 498, 499, 500, 501, 504, 508, 514, 521, 529, 539, 550, 562, 576, 590, 606, 623, 641, 660, 680, 701, 723, 746, 769, 793, 817, 842, 868, 894, 920, 946, 973, 1000, 1016, 1033, 1050, 1067, 1084, 1101, 1118, 1135, 1152, 1169, 1186, 1203, 1220, 1237, 1254, 1271, 1288, 1305, 1322, 1338, 1355, 1372, 1389, 1406, 1423, 1440, 1457, 1474, 1491, 1508, 1525, 1542, 1559, 1576, 1593, 1610, 1627, 1644, 1661, 1677]),
			_List_fromArray(
			[0, 0, 24, 49, 73, 97, 121, 145, 168, 191, 213, 235, 257, 277, 297, 317, 335, 353, 370, 386, 401, 415, 428, 440, 451, 461, 470, 478, 485, 490, 494, 497, 499, 500, 501, 502, 505, 509, 514, 521, 529, 538, 548, 559, 571, 584, 598, 613, 629, 646, 664, 682, 702, 722, 742, 764, 786, 808, 831, 854, 878, 902, 926, 950, 975, 1000, 1015, 1031, 1046, 1062, 1078, 1093, 1109, 1125, 1140, 1156, 1171, 1187, 1203, 1218, 1234, 1250, 1265, 1281, 1296, 1312, 1328, 1343, 1359, 1375, 1390, 1406, 1421, 1437, 1453, 1468, 1484, 1500, 1515, 1531, 1546]),
			_List_fromArray(
			[0, 0, 22, 45, 68, 90, 112, 134, 156, 178, 199, 219, 240, 259, 278, 297, 315, 332, 349, 365, 380, 394, 408, 421, 433, 443, 453, 463, 471, 478, 484, 489, 493, 496, 498, 499, 500, 501, 503, 506, 510, 515, 521, 528, 536, 546, 556, 566, 578, 591, 605, 619, 634, 650, 667, 684, 702, 721, 740, 759, 780, 800, 821, 843, 865, 887, 909, 931, 954, 977, 1000, 1014, 1028, 1043, 1057, 1072, 1086, 1101, 1115, 1130, 1144, 1159, 1173, 1188, 1202, 1217, 1231, 1246, 1260, 1275, 1289, 1304, 1318, 1333, 1347, 1362, 1376, 1391, 1405, 1420, 1434]),
			_List_fromArray(
			[0, 0, 19, 39, 59, 79, 98, 118, 137, 156, 175, 193, 211, 229, 247, 264, 280, 297, 312, 328, 342, 357, 370, 383, 396, 407, 419, 429, 439, 448, 457, 464, 471, 477, 483, 488, 492, 495, 497, 499, 500, 501, 502, 503, 504, 507, 511, 516, 522, 528, 535, 542, 551, 560, 570, 580, 592, 603, 616, 629, 642, 657, 671, 687, 702, 719, 735, 752, 770, 788, 806, 824, 843, 862, 881, 901, 920, 940, 960, 980, 1000, 1012, 1025, 1037, 1050, 1063, 1075, 1088, 1101, 1113, 1126, 1139, 1151, 1164, 1177, 1189, 1202, 1215, 1227, 1240, 1253]),
			_List_fromArray(
			[0, 0, 17, 35, 52, 70, 87, 105, 122, 139, 156, 172, 189, 205, 221, 237, 252, 267, 282, 296, 310, 324, 337, 350, 362, 374, 386, 397, 407, 417, 427, 435, 444, 452, 459, 466, 472, 477, 482, 486, 490, 493, 496, 498, 499, 500, 501, 502, 503, 504, 506, 509, 513, 517, 522, 527, 533, 540, 547, 555, 564, 572, 582, 592, 602, 613, 625, 637, 649, 662, 675, 689, 703, 717, 732, 747, 762, 778, 794, 810, 827, 843, 860, 877, 894, 912, 929, 947, 964, 982, 1000, 1011, 1022, 1033, 1044, 1056, 1067, 1078, 1089, 1101, 1112]),
			_List_fromArray(
			[0, 0, 2, 6, 11, 17, 25, 34, 44, 56, 69, 83, 98, 115, 132, 151, 170, 191, 212, 234, 257, 281, 305, 330, 355, 381, 407, 433, 460, 486, 513, 539, 566, 592, 618, 644, 669, 694, 718, 742, 765, 787, 808, 829, 848, 867, 884, 901, 916, 930, 943, 955, 965, 974, 982, 985, 988, 991, 994, 997, 1000, 1016, 1033, 1050, 1067, 1084, 1101, 1118, 1135, 1152, 1169, 1186, 1203, 1220, 1237, 1254, 1271, 1288, 1305, 1322, 1338, 1355, 1372, 1389, 1406, 1423, 1440, 1457, 1474, 1491, 1508, 1525, 1542, 1559, 1576, 1593, 1610, 1627, 1644, 1661, 1677]),
			_List_fromArray(
			[0, 0, 2, 5, 9, 14, 21, 29, 38, 48, 59, 71, 84, 98, 113, 129, 146, 164, 182, 202, 222, 242, 264, 286, 308, 331, 354, 378, 402, 426, 450, 475, 500, 524, 549, 573, 597, 621, 645, 668, 691, 713, 735, 757, 777, 797, 817, 835, 853, 870, 886, 901, 915, 928, 940, 951, 961, 970, 978, 982, 985, 988, 991, 994, 997, 1000, 1015, 1031, 1046, 1062, 1078, 1093, 1109, 1125, 1140, 1156, 1171, 1187, 1203, 1218, 1234, 1250, 1265, 1281, 1296, 1312, 1328, 1343, 1359, 1375, 1390, 1406, 1421, 1437, 1453, 1468, 1484, 1500, 1515, 1531, 1546]),
			_List_fromArray(
			[0, 0, 2, 4, 8, 12, 18, 25, 32, 41, 50, 61, 72, 85, 98, 112, 126, 142, 158, 175, 193, 211, 230, 250, 269, 290, 311, 332, 354, 376, 398, 420, 443, 465, 488, 511, 534, 556, 579, 601, 623, 645, 667, 688, 709, 730, 750, 769, 788, 806, 824, 841, 857, 873, 887, 901, 914, 927, 938, 949, 958, 967, 974, 981, 986, 990, 992, 994, 996, 998, 1000, 1014, 1028, 1043, 1057, 1072, 1086, 1101, 1115, 1130, 1144, 1159, 1173, 1188, 1202, 1217, 1231, 1246, 1260, 1275, 1289, 1304, 1318, 1333, 1347, 1362, 1376, 1391, 1405, 1420, 1434]),
			_List_fromArray(
			[0, 0, 1, 3, 6, 9, 14, 19, 25, 31, 39, 47, 55, 65, 75, 86, 97, 109, 122, 136, 149, 164, 179, 194, 210, 227, 244, 261, 279, 297, 315, 334, 353, 372, 391, 411, 430, 450, 470, 490, 509, 529, 549, 569, 588, 608, 627, 646, 665, 684, 702, 720, 738, 755, 772, 789, 805, 820, 835, 850, 863, 877, 890, 902, 913, 924, 934, 944, 952, 960, 968, 974, 980, 984, 987, 990, 992, 994, 996, 998, 1000, 1012, 1025, 1037, 1050, 1063, 1075, 1088, 1101, 1113, 1126, 1139, 1151, 1164, 1177, 1189, 1202, 1215, 1227, 1240, 1253]),
			_List_fromArray(
			[0, 0, 1, 2, 4, 7, 11, 15, 19, 25, 30, 37, 44, 51, 59, 68, 77, 87, 97, 108, 119, 131, 143, 155, 168, 182, 196, 210, 224, 239, 255, 270, 286, 302, 318, 335, 352, 369, 386, 403, 420, 438, 455, 473, 491, 508, 526, 544, 561, 579, 596, 613, 630, 647, 664, 681, 697, 713, 729, 744, 760, 775, 789, 803, 817, 831, 844, 856, 868, 880, 891, 902, 912, 922, 931, 940, 948, 955, 962, 969, 974, 980, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1011, 1022, 1033, 1044, 1056, 1067, 1078, 1089, 1101, 1112]),
			_List_fromArray(
			[0, 0, 20, 40, 61, 81, 102, 122, 142, 163, 183, 204, 224, 244, 265, 285, 306, 326, 346, 367, 387, 408, 428, 448, 469, 489, 510, 530, 551, 571, 591, 612, 632, 653, 673, 693, 714, 734, 755, 775, 795, 816, 836, 857, 877, 897, 918, 938, 959, 979, 1000, 1020, 1040, 1061, 1081, 1102, 1122, 1142, 1163, 1183, 1204, 1224, 1244, 1265, 1285, 1306, 1326, 1346, 1367, 1387, 1408, 1428, 1448, 1469, 1489, 1510, 1530, 1551, 1571, 1591, 1612, 1632, 1653, 1673, 1693, 1714, 1734, 1755, 1775, 1795, 1816, 1836, 1857, 1877, 1897, 1918, 1938, 1959, 1979, 2000, 2020]),
			_List_fromArray(
			[0, 0, 18, 37, 55, 74, 92, 111, 129, 148, 166, 185, 203, 222, 240, 259, 277, 296, 314, 333, 351, 370, 388, 407, 425, 444, 462, 481, 500, 518, 537, 555, 574, 592, 611, 629, 648, 666, 685, 703, 722, 740, 759, 777, 796, 814, 833, 851, 870, 888, 907, 925, 944, 962, 981, 1000, 1018, 1037, 1055, 1074, 1092, 1111, 1129, 1148, 1166, 1185, 1203, 1222, 1240, 1259, 1277, 1296, 1314, 1333, 1351, 1370, 1388, 1407, 1425, 1444, 1462, 1481, 1500, 1518, 1537, 1555, 1574, 1592, 1611, 1629, 1648, 1666, 1685, 1703, 1722, 1740, 1759, 1777, 1796, 1814, 1833]),
			_List_fromArray(
			[0, 0, 16, 33, 50, 67, 84, 101, 118, 135, 152, 169, 186, 203, 220, 237, 254, 271, 288, 305, 322, 338, 355, 372, 389, 406, 423, 440, 457, 474, 491, 508, 525, 542, 559, 576, 593, 610, 627, 644, 661, 677, 694, 711, 728, 745, 762, 779, 796, 813, 830, 847, 864, 881, 898, 915, 932, 949, 966, 983, 1000, 1016, 1033, 1050, 1067, 1084, 1101, 1118, 1135, 1152, 1169, 1186, 1203, 1220, 1237, 1254, 1271, 1288, 1305, 1322, 1338, 1355, 1372, 1389, 1406, 1423, 1440, 1457, 1474, 1491, 1508, 1525, 1542, 1559, 1576, 1593, 1610, 1627, 1644, 1661, 1677]),
			_List_fromArray(
			[0, 0, 12, 25, 37, 50, 63, 75, 88, 101, 113, 126, 139, 151, 164, 177, 189, 202, 215, 227, 240, 253, 265, 278, 291, 303, 316, 329, 341, 354, 367, 379, 392, 405, 417, 430, 443, 455, 468, 481, 493, 506, 518, 531, 544, 556, 569, 582, 594, 607, 620, 632, 645, 658, 670, 683, 696, 708, 721, 734, 746, 759, 772, 784, 797, 810, 822, 835, 848, 860, 873, 886, 898, 911, 924, 936, 949, 962, 974, 987, 1000, 1012, 1025, 1037, 1050, 1063, 1075, 1088, 1101, 1113, 1126, 1139, 1151, 1164, 1177, 1189, 1202, 1215, 1227, 1240, 1253]),
			_List_fromArray(
			[0, 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 202, 212, 222, 232, 242, 252, 262, 272, 282, 292, 303, 313, 323, 333, 343, 353, 363, 373, 383, 393, 404, 414, 424, 434, 444, 454, 464, 474, 484, 494, 505, 515, 525, 535, 545, 555, 565, 575, 585, 595, 606, 616, 626, 636, 646, 656, 666, 676, 686, 696, 707, 717, 727, 737, 747, 757, 767, 777, 787, 797, 808, 818, 828, 838, 848, 858, 868, 878, 888, 898, 909, 919, 929, 939, 949, 959, 969, 979, 989, 1000]),
			_List_fromArray(
			[0, 0, 21, 43, 65, 86, 108, 129, 150, 171, 191, 211, 231, 250, 269, 288, 306, 323, 340, 357, 372, 388, 402, 416, 430, 442, 454, 466, 476, 486, 495, 504, 513, 523, 533, 545, 557, 569, 583, 597, 611, 627, 642, 659, 676, 693, 711, 730, 749, 768, 788, 808, 828, 849, 870, 891, 913, 934, 956, 978, 1000, 1016, 1033, 1050, 1067, 1084, 1101, 1118, 1135, 1152, 1169, 1186, 1203, 1220, 1237, 1254, 1271, 1288, 1305, 1322, 1338, 1355, 1372, 1389, 1406, 1423, 1440, 1457, 1474, 1491, 1508, 1525, 1542, 1559, 1576, 1593, 1610, 1627, 1644, 1661, 1677]),
			_List_fromArray(
			[0, 0, 20, 40, 60, 80, 99, 119, 138, 158, 177, 195, 214, 232, 250, 267, 285, 301, 318, 333, 349, 364, 378, 392, 405, 418, 430, 442, 453, 463, 473, 483, 491, 500, 508, 516, 526, 536, 546, 557, 569, 581, 594, 607, 621, 635, 650, 666, 681, 698, 714, 732, 749, 767, 785, 804, 822, 841, 861, 880, 900, 919, 939, 959, 979, 1000, 1015, 1031, 1046, 1062, 1078, 1093, 1109, 1125, 1140, 1156, 1171, 1187, 1203, 1218, 1234, 1250, 1265, 1281, 1296, 1312, 1328, 1343, 1359, 1375, 1390, 1406, 1421, 1437, 1453, 1468, 1484, 1500, 1515, 1531, 1546]),
			_List_fromArray(
			[0, 0, 18, 37, 55, 74, 92, 110, 129, 147, 164, 182, 199, 216, 233, 250, 266, 282, 297, 313, 327, 342, 356, 370, 383, 395, 408, 419, 431, 442, 452, 462, 471, 480, 488, 496, 503, 511, 519, 528, 537, 547, 557, 568, 580, 591, 604, 616, 629, 643, 657, 672, 686, 702, 717, 733, 749, 766, 783, 800, 817, 835, 852, 870, 889, 907, 925, 944, 962, 981, 1000, 1014, 1028, 1043, 1057, 1072, 1086, 1101, 1115, 1130, 1144, 1159, 1173, 1188, 1202, 1217, 1231, 1246, 1260, 1275, 1289, 1304, 1318, 1333, 1347, 1362, 1376, 1391, 1405, 1420, 1434]),
			_List_fromArray(
			[0, 0, 16, 32, 48, 64, 81, 97, 113, 128, 144, 160, 175, 190, 205, 220, 235, 249, 264, 277, 291, 305, 318, 331, 343, 355, 367, 379, 390, 401, 412, 422, 432, 441, 450, 459, 467, 475, 482, 490, 496, 503, 509, 517, 524, 532, 540, 549, 558, 567, 577, 587, 598, 609, 620, 632, 644, 656, 668, 681, 694, 708, 722, 735, 750, 764, 779, 794, 809, 824, 839, 855, 871, 886, 902, 918, 935, 951, 967, 983, 1000, 1012, 1025, 1037, 1050, 1063, 1075, 1088, 1101, 1113, 1126, 1139, 1151, 1164, 1177, 1189, 1202, 1215, 1227, 1240, 1253]),
			_List_fromArray(
			[0, 0, 14, 28, 43, 57, 71, 86, 100, 114, 128, 142, 156, 170, 183, 197, 210, 223, 236, 249, 262, 274, 286, 298, 310, 322, 333, 344, 355, 366, 376, 386, 396, 405, 415, 424, 432, 441, 449, 456, 464, 471, 478, 484, 491, 497, 502, 508, 515, 521, 528, 535, 543, 550, 558, 567, 575, 584, 594, 603, 613, 623, 633, 644, 655, 666, 677, 689, 701, 713, 725, 737, 750, 763, 776, 789, 802, 816, 829, 843, 857, 871, 885, 899, 913, 928, 942, 956, 971, 985, 1000, 1011, 1022, 1033, 1044, 1056, 1067, 1078, 1089, 1101, 1112]),
			_List_fromArray(
			[0, 0, 8, 18, 28, 39, 51, 63, 76, 90, 104, 119, 134, 151, 167, 184, 202, 220, 239, 258, 278, 298, 318, 339, 360, 381, 402, 424, 445, 467, 489, 510, 532, 554, 575, 597, 618, 639, 660, 681, 701, 721, 741, 760, 779, 797, 815, 832, 848, 865, 880, 895, 909, 923, 936, 948, 960, 971, 981, 991, 1000, 1016, 1033, 1050, 1067, 1084, 1101, 1118, 1135, 1152, 1169, 1186, 1203, 1220, 1237, 1254, 1271, 1288, 1305, 1322, 1338, 1355, 1372, 1389, 1406, 1423, 1440, 1457, 1474, 1491, 1508, 1525, 1542, 1559, 1576, 1593, 1610, 1627, 1644, 1661, 1677]),
			_List_fromArray(
			[0, 0, 8, 16, 26, 36, 46, 57, 69, 81, 94, 107, 121, 135, 150, 166, 181, 198, 214, 232, 249, 267, 285, 304, 322, 341, 361, 380, 400, 419, 439, 459, 479, 500, 520, 540, 560, 580, 599, 619, 638, 658, 677, 695, 714, 732, 750, 767, 785, 801, 818, 833, 849, 864, 878, 892, 905, 918, 930, 942, 953, 963, 973, 983, 991, 1000, 1015, 1031, 1046, 1062, 1078, 1093, 1109, 1125, 1140, 1156, 1171, 1187, 1203, 1218, 1234, 1250, 1265, 1281, 1296, 1312, 1328, 1343, 1359, 1375, 1390, 1406, 1421, 1437, 1453, 1468, 1484, 1500, 1515, 1531, 1546]),
			_List_fromArray(
			[0, 0, 7, 15, 24, 33, 42, 52, 63, 74, 85, 97, 110, 123, 136, 150, 164, 179, 194, 209, 225, 241, 258, 274, 291, 308, 326, 344, 361, 379, 398, 416, 434, 453, 472, 490, 509, 527, 546, 565, 583, 601, 620, 638, 655, 673, 691, 708, 725, 741, 758, 774, 790, 805, 820, 835, 849, 863, 876, 889, 902, 914, 925, 936, 947, 957, 966, 975, 984, 992, 1000, 1014, 1028, 1043, 1057, 1072, 1086, 1101, 1115, 1130, 1144, 1159, 1173, 1188, 1202, 1217, 1231, 1246, 1260, 1275, 1289, 1304, 1318, 1333, 1347, 1362, 1376, 1391, 1405, 1420, 1434]),
			_List_fromArray(
			[0, 0, 6, 13, 20, 28, 36, 45, 53, 63, 72, 82, 93, 103, 114, 126, 138, 150, 162, 175, 188, 201, 215, 228, 243, 257, 271, 286, 301, 316, 332, 347, 363, 379, 394, 410, 427, 443, 459, 475, 491, 508, 524, 540, 556, 572, 589, 605, 620, 636, 652, 667, 683, 698, 713, 728, 742, 756, 771, 784, 798, 811, 824, 837, 849, 861, 873, 885, 896, 906, 917, 927, 936, 946, 954, 963, 971, 979, 986, 993, 1000, 1012, 1025, 1037, 1050, 1063, 1075, 1088, 1101, 1113, 1126, 1139, 1151, 1164, 1177, 1189, 1202, 1215, 1227, 1240, 1253]),
			_List_fromArray(
			[0, 0, 5, 11, 18, 24, 31, 39, 46, 54, 63, 71, 80, 89, 98, 108, 118, 128, 139, 149, 160, 172, 183, 195, 207, 219, 231, 244, 256, 269, 282, 296, 309, 323, 336, 350, 364, 378, 392, 406, 420, 435, 449, 463, 478, 492, 507, 521, 536, 550, 564, 579, 593, 607, 621, 635, 649, 663, 676, 690, 703, 717, 730, 743, 755, 768, 780, 792, 804, 816, 827, 839, 850, 860, 871, 881, 891, 901, 910, 919, 928, 936, 945, 953, 960, 968, 975, 981, 988, 994, 1000, 1011, 1022, 1033, 1044, 1056, 1067, 1078, 1089, 1101, 1112])
		]));
var elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);
var elm$core$Bitwise$and = _Bitwise_and;
var elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = elm$core$Array$bitMask & (index >>> shift);
			var _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (!_n0.$) {
				var subTree = _n0.a;
				var $temp$shift = shift - elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _n0.a;
				return A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);
			}
		}
	});
var elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var elm$core$Array$get = F2(
	function (index, _n0) {
		var len = _n0.a;
		var startShift = _n0.b;
		var tree = _n0.c;
		var tail = _n0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			elm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(
			A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(
			A3(elm$core$Array$getHelp, startShift, index, tree)));
	});
var elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (!maybeValue.$) {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return elm$core$Maybe$Nothing;
		}
	});
var author$project$MyServant$GrowthCurves$lvlStats = F2(
	function (_n0, level) {
		var curve = _n0.bk;
		var stats = _n0.a1;
		var modifier = A3(
			elm$core$Basics$composeR,
			elm$core$Maybe$andThen(
				elm$core$Array$get(level)),
			A2(
				elm$core$Basics$composeR,
				elm$core$Maybe$withDefault(0),
				elm$core$Basics$toFloat),
			A2(elm$core$Array$get, curve, author$project$MyServant$GrowthCurves$growthCurves));
		var go = F2(
			function (baseVal, maxVal) {
				return A3(
					elm$core$Basics$composeR,
					elm$core$Basics$floor,
					elm$core$Basics$add(baseVal),
					((maxVal - baseVal) * modifier) / 1000);
			});
		if (!level) {
			return stats.bG;
		} else {
			return {
				a9: A2(go, stats.bb.a9, stats.bG.a9),
				bA: A2(go, stats.bb.bA, stats.bG.bA)
			};
		}
	});
var author$project$MyServant$recalc = function (ms) {
	var s = ms.bb;
	var stats = s.a1;
	var calcStats = A2(
		author$project$Database$Base$addStats,
		ms.R,
		A2(author$project$MyServant$GrowthCurves$lvlStats, s, ms.H));
	var calcOver = F2(
		function (minAmount, maxAmount) {
			var _n3 = ms.y;
			if (_n3 === 1) {
				return author$project$Database$Skill$Flat(minAmount);
			} else {
				return A2(author$project$Database$Skill$Range, minAmount, minAmount + (((maxAmount - minAmount) * (ms.y - 1)) / 4));
			}
		});
	var calcNP = F2(
		function (minAmount, maxAmount) {
			return author$project$Database$Skill$Flat(
				minAmount + ((maxAmount - minAmount) * function () {
					var _n2 = ms.y;
					switch (_n2) {
						case 1:
							return 0;
						case 2:
							return 0.5;
						case 3:
							return 0.75;
						case 4:
							return 0.875;
						default:
							return 1;
					}
				}()));
		});
	var calcActives = F2(
		function (lvl, skill) {
			var calc = F2(
				function (minAmount, maxAmount) {
					if (lvl === 10) {
						return author$project$Database$Skill$Flat(maxAmount);
					} else {
						return author$project$Database$Skill$Flat(minAmount + (((maxAmount - minAmount) * (lvl - 1)) / 10));
					}
				});
			return _Utils_update(
				skill,
				{
					bg: skill.bg - (((A2(elm$core$Basics$max, 2, lvl) - 2) / 4) | 0),
					ao: A2(
						elm$core$List$map,
						author$project$Database$Skill$mapAmount(calc),
						skill.ao)
				});
		});
	return author$project$MyServant$mapSort(
		_Utils_update(
			ms,
			{
				J: _Utils_update(
					s,
					{
						T: function () {
							var x = s.T;
							return _Utils_update(
								x,
								{
									ao: A2(
										elm$core$List$map,
										author$project$Database$Skill$mapAmount(calcNP),
										s.T.ao),
									bS: function () {
										var _n0 = ms.H;
										if (!_n0) {
											return s.T.bS;
										} else {
											return A2(
												elm$core$List$map,
												author$project$Database$Skill$mapAmount(calcOver),
												s.T.bS);
										}
									}()
								});
						}(),
						b0: A3(elm$core$List$map2, calcActives, ms.b0, s.b0),
						a1: function () {
							var x = s.a1;
							return _Utils_update(
								x,
								{bb: calcStats, bG: calcStats});
						}()
					})
			}));
};
var author$project$MyServant$MyServant = F8(
	function (level, fou, skills, npLvl, ascent, base, servant, sorted) {
		return {Z: ascent, bb: base, R: fou, H: level, y: npLvl, J: servant, b0: skills, V: sorted};
	});
var elm$json$Json$Decode$fail = _Json_fail;
var author$project$Persist$Flags$decodeServant = function () {
	var fromName = function (name) {
		var _n0 = A2(
			elm_community$list_extra$List$Extra$find,
			A2(
				elm$core$Basics$composeR,
				function ($) {
					return $.bI;
				},
				elm$core$Basics$eq(name)),
			author$project$Database$servants);
		if (_n0.$ === 1) {
			return elm$json$Json$Decode$fail('Unknown Servant ' + name);
		} else {
			var s = _n0.a;
			return elm$json$Json$Decode$succeed(s);
		}
	};
	return A2(elm$json$Json$Decode$andThen, fromName, elm$json$Json$Decode$string);
}();
var author$project$Database$Base$Stat = F2(
	function (atk, hp) {
		return {a9: atk, bA: hp};
	});
var elm$json$Json$Decode$field = _Json_decodeField;
var author$project$Persist$Flags$decodeStat = A3(
	elm$json$Json$Decode$map2,
	author$project$Database$Base$Stat,
	A2(elm$json$Json$Decode$field, 'atk', elm$json$Json$Decode$int),
	A2(elm$json$Json$Decode$field, 'hp', elm$json$Json$Decode$int));
var elm$json$Json$Decode$map8 = _Json_map8;
var author$project$Persist$Flags$decodeMyServant = A9(
	elm$json$Json$Decode$map8,
	author$project$MyServant$MyServant,
	A2(elm$json$Json$Decode$field, 'level', elm$json$Json$Decode$int),
	A2(elm$json$Json$Decode$field, 'fou', author$project$Persist$Flags$decodeStat),
	A2(
		elm$json$Json$Decode$field,
		'skills',
		elm$json$Json$Decode$list(elm$json$Json$Decode$int)),
	A2(elm$json$Json$Decode$field, 'npLvl', elm$json$Json$Decode$int),
	A2(elm$json$Json$Decode$field, 'ascent', elm$json$Json$Decode$int),
	A2(elm$json$Json$Decode$field, 'servant', author$project$Persist$Flags$decodeServant),
	A2(elm$json$Json$Decode$field, 'servant', author$project$Persist$Flags$decodeServant),
	elm$json$Json$Decode$succeed(elm$core$Dict$empty));
var author$project$Persist$Flags$decodeTeam = function () {
	var keyPair = function (ms) {
		return _Utils_Tuple2(
			author$project$Database$Servant$ordServant(ms.bb),
			author$project$MyServant$recalc(ms));
	};
	return A2(
		elm$json$Json$Decode$andThen,
		A2(
			elm$core$Basics$composeR,
			elm$core$List$map(keyPair),
			A2(elm$core$Basics$composeR, elm$core$Dict$fromList, elm$json$Json$Decode$succeed)),
		elm$json$Json$Decode$list(author$project$Persist$Flags$decodeMyServant));
}();
var elm$json$Json$Decode$map3 = _Json_map3;
var author$project$Persist$Flags$decodeFlags = A4(
	elm$json$Json$Decode$map3,
	author$project$Persist$Flags$Flags,
	A2(elm$json$Json$Decode$field, 'today', author$project$Persist$Flags$decodeDate),
	A2(elm$json$Json$Decode$field, 'preferences', author$project$Persist$Flags$decodePreferences),
	A2(elm$json$Json$Decode$field, 'team', author$project$Persist$Flags$decodeTeam));
var elm$json$Json$Decode$decodeValue = _Json_run;
var author$project$Site$Algebra$siteInit = F4(
	function (getFilters, val, navKey, extra) {
		var _n0 = function () {
			var _n1 = A2(elm$json$Json$Decode$decodeValue, author$project$Persist$Flags$decodeFlags, val);
			if (!_n1.$) {
				var flags = _n1.a;
				return _Utils_Tuple2(elm$core$Maybe$Nothing, flags);
			} else {
				var err = _n1.a;
				return _Utils_Tuple2(
					elm$core$Maybe$Just(
						elm$json$Json$Decode$errorToString(err)),
					{
						bX: author$project$Persist$Preferences$noPreferences,
						b6: elm$core$Dict$empty,
						b9: A3(elm$core$Basics$composeR, elm$time$Time$millisToPosix, author$project$Date$today, 0)
					});
			}
		}();
		var error = _n0.a;
		var today = _n0.b.b9;
		var preferences = _n0.b.bX;
		var team = _n0.b.b6;
		return {
			ai: getFilters(today),
			aq: error,
			as: _List_Nil,
			at: extra,
			av: _List_Nil,
			aw: elm$core$Maybe$Nothing,
			aE: _List_Nil,
			aF: true,
			aJ: navKey,
			aP: preferences,
			aX: '',
			aZ: elm$core$Maybe$Nothing,
			a$: 0,
			V: _List_Nil,
			b6: team,
			b9: today
		};
	});
var elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			elm$json$Json$Encode$string(string));
	});
var elm$html$Html$Attributes$href = function (url) {
	return A2(
		elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var author$project$Site$Common$href_ = A2(
	elm$core$Basics$composeL,
	elm$html$Html$Attributes$href,
	elm$core$Basics$append('/chaldeas/'));
var elm$html$Html$a = _VirtualDom_node('a');
var elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var elm$html$Html$text = elm$virtual_dom$VirtualDom$text;
var elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 0, a: a};
};
var elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			elm$virtual_dom$VirtualDom$on,
			event,
			elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var elm$html$Html$Events$onClick = function (msg) {
	return A2(
		elm$html$Html$Events$on,
		'click',
		elm$json$Json$Decode$succeed(msg));
};
var author$project$Site$Common$a_ = F2(
	function (label, click) {
		return A2(
			elm$html$Html$a,
			_List_fromArray(
				[
					author$project$Site$Common$href_(
					author$project$Printing$urlName(label)),
					elm$html$Html$Events$onClick(click)
				]),
			_List_fromArray(
				[
					elm$html$Html$text(label)
				]));
	});
var author$project$Site$Common$text_ = F2(
	function (el, txt) {
		return A2(
			el,
			_List_Nil,
			_List_fromArray(
				[
					elm$html$Html$text(txt)
				]));
	});
var author$project$Class$ToImage$ImagePath = F2(
	function (dir, file) {
		return {P: dir, Q: file};
	});
var author$project$Class$ToImage$craftEssence = A2(
	elm$core$Basics$composeL,
	author$project$Class$ToImage$ImagePath('CraftEssence'),
	function ($) {
		return $.bI;
	});
var elm$core$String$cons = _String_cons;
var elm$core$String$fromChar = function (_char) {
	return A2(elm$core$String$cons, _char, '');
};
var author$project$Printing$filterOut = function (pattern) {
	return elm$core$String$filter(
		A2(
			elm$core$Basics$composeL,
			A2(
				elm$core$Basics$composeL,
				elm$core$Basics$not,
				A2(author$project$StandardLibrary$flip, elm$core$String$contains, pattern)),
			elm$core$String$fromChar));
};
var author$project$Printing$fileName = author$project$Printing$filterOut('?:/');
var elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {bC: index, bF: match, bO: number, b3: submatches};
	});
var elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var elm$regex$Regex$fromString = function (string) {
	return A2(
		elm$regex$Regex$fromStringWith,
		{ak: false, aI: false},
		string);
};
var elm$regex$Regex$never = _Regex_never;
var author$project$Printing$camel = A2(
	elm$core$Maybe$withDefault,
	elm$regex$Regex$never,
	elm$regex$Regex$fromString('([a-z])([A-Z])|([A-Z])([A-Z][a-z])'));
var elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			elm$core$String$join,
			after,
			A2(elm$core$String$split, before, string));
	});
var elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);
var author$project$Printing$unCamel = function () {
	var replacer = function (_n2) {
		var match = _n2.bF;
		var submatches = _n2.b3;
		if (((submatches.b && (!submatches.a.$)) && submatches.b.b) && (!submatches.b.a.$)) {
			var x = submatches.a.a;
			var _n1 = submatches.b;
			var y = _n1.a.a;
			return x + (' ' + y);
		} else {
			return match;
		}
	};
	return A2(
		elm$core$Basics$composeR,
		A2(elm$regex$Regex$replace, author$project$Printing$camel, replacer),
		A2(
			elm$core$Basics$composeR,
			A2(elm$core$String$replace, ' The ', ' the '),
			A2(elm$core$String$replace, ' Of ', ' of ')));
}();
var elm$html$Html$img = _VirtualDom_node('img');
var elm$html$Html$Attributes$src = function (url) {
	return A2(
		elm$html$Html$Attributes$stringProperty,
		'src',
		_VirtualDom_noJavaScriptOrHtmlUri(url));
};
var elm$html$Html$Attributes$title = elm$html$Html$Attributes$stringProperty('title');
var author$project$Class$ToImage$image = function (_n0) {
	var dir = _n0.P;
	var file = _n0.Q;
	return A2(
		elm$html$Html$img,
		_List_fromArray(
			[
				elm$html$Html$Attributes$src(
				'/chaldeas/img/' + (dir + ('/' + (author$project$Printing$fileName(file) + '.png')))),
				elm$html$Html$Attributes$title(
				author$project$Printing$unCamel(file))
			]),
		_List_Nil);
};
var author$project$Class$ToImage$thumbnail = function (_n0) {
	var dir = _n0.P;
	var file = _n0.Q;
	return A2(
		elm$html$Html$img,
		_List_fromArray(
			[
				elm$html$Html$Attributes$src(
				'/chaldeas/img/' + (dir + ('/' + (author$project$Printing$fileName(file) + ' Thumbnail.png')))),
				elm$html$Html$Attributes$title(
				author$project$Printing$unCamel(file))
			]),
		_List_Nil);
};
var elm$core$Dict$member = F2(
	function (key, dict) {
		var _n0 = A2(elm$core$Dict$get, key, dict);
		if (!_n0.$) {
			return true;
		} else {
			return false;
		}
	});
var elm$core$Set$member = F2(
	function (key, _n0) {
		var dict = _n0;
		return A2(elm$core$Dict$member, key, dict);
	});
var author$project$Persist$Preferences$prefer = function (prefs) {
	return A2(
		elm$core$Basics$composeR,
		author$project$Persist$Preferences$ordPreference,
		A2(author$project$StandardLibrary$flip, elm$core$Set$member, prefs));
};
var elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						elm$core$List$cons,
						sep,
						A2(elm$core$List$cons, x, rest));
				});
			var spersed = A3(elm$core$List$foldr, step, _List_Nil, tl);
			return A2(elm$core$List$cons, hd, spersed);
		}
	});
var elm$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (n <= 0) {
				return result;
			} else {
				var $temp$result = A2(elm$core$List$cons, value, result),
					$temp$n = n - 1,
					$temp$value = value;
				result = $temp$result;
				n = $temp$n;
				value = $temp$value;
				continue repeatHelp;
			}
		}
	});
var elm$core$List$repeat = F2(
	function (n, value) {
		return A3(elm$core$List$repeatHelp, _List_Nil, n, value);
	});
var elm$core$String$fromList = _String_fromList;
var author$project$Printing$stars = F2(
	function (padded, rarity) {
		return padded ? A2(
			elm$core$String$join,
			'  ',
			A2(elm$core$List$repeat, rarity, '★')) : A3(
			elm$core$Basics$composeR,
			elm$core$List$intersperse(' '),
			elm$core$String$fromList,
			A2(elm$core$List$repeat, rarity, '★'));
	});
var author$project$Site$Algebra$Focus = function (a) {
	return {$: 1, a: a};
};
var author$project$Printing$prettify = function (a) {
	switch (a) {
		case 'Fergus mac Roich':
			return 'Fergus mac Róich';
		case 'Mugashiki—Shinkuu Myou':
			return 'Mugashiki—Shinkuu Myōu';
		case 'Heroic Portrait: Scathach':
			return 'Heroic Portrait: Scáthach';
		case 'Cu Chulainn':
			return 'Cú Chulainn';
		case 'Cu Chulainn (Prototype)':
			return 'Cú Chulainn (Prototype)';
		case 'Cu Chulainn (Alter)':
			return 'Cú Chulainn (Alter)';
		case 'Cu Chulainn (Caster)':
			return 'Cú Chulainn (Caster)';
		case 'Elisabeth Bathory':
			return 'Elisabeth Báthory';
		case 'Elisabeth Bathory (Brave)':
			return 'Elisabeth Báthory (Brave)';
		case 'Elisabeth Bathory (Halloween)':
			return 'Elisabeth Báthory (Halloween)';
		case 'Scathach':
			return 'Scáthach';
		case 'Scathach (Assassin)':
			return 'Scáthach (Assassin)';
		case 'Angra Mainyu':
			return 'Aŋra Mainiiu';
		case 'Edmond Dantes':
			return 'Edmond Dantès';
		case 'Leonardo da Vinci':
			return 'Leonardo Da Vinci';
		case 'Wisdom of Dun Scaith':
			return 'Wisdom of Dún Scáith';
		default:
			return a;
	}
};
var elm$core$String$endsWith = _String_endsWith;
var author$project$StandardLibrary$stripSuffix = F2(
	function (pattern, s) {
		return A2(elm$core$String$endsWith, pattern, s) ? A2(
			elm$core$String$dropRight,
			elm$core$String$length(pattern),
			s) : s;
	});
var elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var author$project$Site$Common$noBreakName = F2(
	function (shouldPrettify, hideClasses) {
		var replaceSpaces = A2(elm$core$String$replace, ' ', ' ');
		var replacePirates = A2(
			elm$core$Basics$composeR,
			A2(elm$core$String$replace, 'Anne Bonny', 'Anne Bonny'),
			A2(elm$core$String$replace, '& Mary Read', '& Mary Read'));
		var classNames = A2(elm$core$List$map, author$project$Class$Show$class, author$project$Database$Base$enumClass);
		var unBreak = function (xs) {
			if ((xs.b && xs.b.b) && (!xs.b.b.b)) {
				var x = xs.a;
				var _n1 = xs.b;
				var y = _n1.a;
				return shouldPrettify ? x : ((!hideClasses) ? (x + (' (' + y)) : _Utils_ap(
					x,
					function () {
						var _n2 = A2(
							elm$core$String$split,
							' ',
							A2(author$project$StandardLibrary$stripSuffix, ')', y));
						if (!_n2.b) {
							return ' (' + replaceSpaces(y);
						} else {
							var w = _n2.a;
							var ws = _n2.b;
							return (!A2(elm$core$List$member, w, classNames)) ? (' (' + replaceSpaces(y)) : (elm$core$List$isEmpty(ws) ? '' : (' (' + (replaceSpaces(
								A2(elm$core$String$join, ' ', ws)) + ')')));
						}
					}()));
			} else {
				var ws = xs;
				return A2(elm$core$String$join, ' (', ws);
			}
		};
		return A2(
			elm$core$Basics$composeR,
			elm$core$String$split(' ('),
			A2(
				elm$core$Basics$composeR,
				unBreak,
				A2(
					elm$core$Basics$composeR,
					replacePirates,
					A2(author$project$StandardLibrary$doIf, shouldPrettify, author$project$Printing$prettify))));
	});
var elm$html$Html$br = _VirtualDom_node('br');
var elm$html$Html$div = _VirtualDom_node('div');
var elm$html$Html$footer = _VirtualDom_node('footer');
var elm$html$Html$header = _VirtualDom_node('header');
var elm$html$Html$span = _VirtualDom_node('span');
var elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');
var author$project$Site$CraftEssence$Component$portrait = F3(
	function (big, prefs, _n0) {
		var label = _n0.a;
		var ce = _n0.b;
		if ((!big) && A2(author$project$Persist$Preferences$prefer, prefs, 2)) {
			return A2(
				elm$html$Html$div,
				_List_fromArray(
					[
						elm$html$Html$Attributes$class('thumb'),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$Events$onClick,
						author$project$Site$Algebra$Focus,
						elm$core$Maybe$Just(ce))
					]),
				_List_fromArray(
					[
						author$project$Class$ToImage$thumbnail(
						author$project$Class$ToImage$craftEssence(ce))
					]));
		} else {
			var noBreak = A2(author$project$Site$Common$noBreakName, big, false);
			var meta = A3(
				author$project$StandardLibrary$doIf,
				!big,
				elm$core$List$cons(
					A3(
						elm$core$Basics$composeL,
						elm$html$Html$Events$onClick,
						author$project$Site$Algebra$Focus,
						elm$core$Maybe$Just(ce))),
				_List_fromArray(
					[
						elm$html$Html$Attributes$class(
						'portrait stars' + elm$core$String$fromInt(ce.aU))
					]));
			var artorify = A2(
				author$project$StandardLibrary$doIf,
				A2(author$project$Persist$Preferences$prefer, prefs, 0),
				A2(elm$core$String$replace, 'Altria', 'Artoria'));
			var addLabel = A2(
				author$project$StandardLibrary$doIf,
				label !== '',
				elm$core$Basics$append(
					_List_fromArray(
						[
							A2(
							author$project$Site$Common$text_,
							elm$html$Html$span,
							noBreak(label)),
							A2(elm$html$Html$br, _List_Nil, _List_Nil)
						])));
			return A2(
				elm$html$Html$div,
				meta,
				_List_fromArray(
					[
						author$project$Class$ToImage$image(
						author$project$Class$ToImage$craftEssence(ce)),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$header(_List_Nil),
						addLabel,
						_List_fromArray(
							[
								A3(
								elm$core$Basics$composeL,
								author$project$Site$Common$text_(elm$html$Html$span),
								noBreak,
								artorify(ce.bI))
							])),
						A2(
						elm$html$Html$footer,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								author$project$Site$Common$text_,
								elm$html$Html$span,
								A2(author$project$Printing$stars, true, ce.aU))
							]))
					]));
		}
	});
var elm$virtual_dom$VirtualDom$lazy3 = _VirtualDom_lazy3;
var elm$html$Html$Lazy$lazy3 = elm$virtual_dom$VirtualDom$lazy3;
var author$project$Site$CraftEssence$Component$keyedPortrait = F3(
	function (big, prefs, _n0) {
		var label = _n0.a;
		var ce = _n0.b;
		return _Utils_Tuple2(
			ce.bI,
			A4(
				elm$html$Html$Lazy$lazy3,
				author$project$Site$CraftEssence$Component$portrait,
				big,
				prefs,
				_Utils_Tuple2(label, ce)));
	});
var author$project$Class$ToImage$icon = A2(
	elm$core$Basics$composeL,
	author$project$Class$ToImage$ImagePath('Skill'),
	author$project$Class$Show$icon);
var cuducos$elm_format_number$Helpers$FormattedNumber = F5(
	function (original, integers, decimals, prefix, suffix) {
		return {an: decimals, aa: integers, aL: original, U: prefix, W: suffix};
	});
var cuducos$elm_format_number$Helpers$Negative = 2;
var cuducos$elm_format_number$Helpers$Positive = 0;
var cuducos$elm_format_number$Helpers$Zero = 1;
var elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var elm$core$String$concat = function (strings) {
	return A2(elm$core$String$join, '', strings);
};
var cuducos$elm_format_number$Helpers$classify = function (formatted) {
	var onlyZeros = A2(
		elm$core$String$all,
		function (_char) {
			return _char === '0';
		},
		elm$core$String$concat(
			A2(
				elm$core$List$append,
				formatted.aa,
				elm$core$List$singleton(
					A2(elm$core$Maybe$withDefault, '', formatted.an)))));
	return onlyZeros ? 1 : ((formatted.aL < 0) ? 2 : 0);
};
var elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			elm$core$String$slice,
			-n,
			elm$core$String$length(string),
			string);
	});
var cuducos$elm_format_number$Helpers$splitThousands = function (integers) {
	var reversedSplitThousands = function (value) {
		return (elm$core$String$length(value) > 3) ? A2(
			elm$core$List$cons,
			A2(elm$core$String$right, 3, value),
			reversedSplitThousands(
				A2(elm$core$String$dropRight, 3, value))) : _List_fromArray(
			[value]);
	};
	return elm$core$List$reverse(
		reversedSplitThousands(integers));
};
var elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var elm$core$Basics$isInfinite = _Basics_isInfinite;
var elm$core$Basics$isNaN = _Basics_isNaN;
var elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3(elm$core$String$repeatHelp, n, chunk, '');
	});
var elm$core$String$padRight = F3(
	function (n, _char, string) {
		return _Utils_ap(
			string,
			A2(
				elm$core$String$repeat,
				n - elm$core$String$length(string),
				elm$core$String$fromChar(_char)));
	});
var elm$core$String$reverse = _String_reverse;
var elm$core$String$foldr = _String_foldr;
var elm$core$String$toList = function (string) {
	return A3(elm$core$String$foldr, elm$core$List$cons, _List_Nil, string);
};
var myrho$elm_round$Round$addSign = F2(
	function (signed, str) {
		var isNotZero = A2(
			elm$core$List$any,
			function (c) {
				return (c !== '0') && (c !== '.');
			},
			elm$core$String$toList(str));
		return _Utils_ap(
			(signed && isNotZero) ? '-' : '',
			str);
	});
var elm$core$Char$fromCode = _Char_fromCode;
var myrho$elm_round$Round$increaseNum = function (_n0) {
	var head = _n0.a;
	var tail = _n0.b;
	if (head === '9') {
		var _n1 = elm$core$String$uncons(tail);
		if (_n1.$ === 1) {
			return '01';
		} else {
			var headtail = _n1.a;
			return A2(
				elm$core$String$cons,
				'0',
				myrho$elm_round$Round$increaseNum(headtail));
		}
	} else {
		var c = elm$core$Char$toCode(head);
		return ((c >= 48) && (c < 57)) ? A2(
			elm$core$String$cons,
			elm$core$Char$fromCode(c + 1),
			tail) : '0';
	}
};
var myrho$elm_round$Round$splitComma = function (str) {
	var _n0 = A2(elm$core$String$split, '.', str);
	if (_n0.b) {
		if (_n0.b.b) {
			var before = _n0.a;
			var _n1 = _n0.b;
			var after = _n1.a;
			return _Utils_Tuple2(before, after);
		} else {
			var before = _n0.a;
			return _Utils_Tuple2(before, '0');
		}
	} else {
		return _Utils_Tuple2('0', '0');
	}
};
var elm$core$Tuple$mapFirst = F2(
	function (func, _n0) {
		var x = _n0.a;
		var y = _n0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var myrho$elm_round$Round$toDecimal = function (fl) {
	var _n0 = A2(
		elm$core$String$split,
		'e',
		elm$core$String$fromFloat(
			elm$core$Basics$abs(fl)));
	if (_n0.b) {
		if (_n0.b.b) {
			var num = _n0.a;
			var _n1 = _n0.b;
			var exp = _n1.a;
			var e = A2(
				elm$core$Maybe$withDefault,
				0,
				elm$core$String$toInt(
					A2(elm$core$String$startsWith, '+', exp) ? A2(elm$core$String$dropLeft, 1, exp) : exp));
			var _n2 = myrho$elm_round$Round$splitComma(num);
			var before = _n2.a;
			var after = _n2.b;
			var total = _Utils_ap(before, after);
			var zeroed = (e < 0) ? A2(
				elm$core$Maybe$withDefault,
				'0',
				A2(
					elm$core$Maybe$map,
					function (_n3) {
						var a = _n3.a;
						var b = _n3.b;
						return a + ('.' + b);
					},
					A2(
						elm$core$Maybe$map,
						elm$core$Tuple$mapFirst(elm$core$String$fromChar),
						elm$core$String$uncons(
							_Utils_ap(
								A2(
									elm$core$String$repeat,
									elm$core$Basics$abs(e),
									'0'),
								total))))) : A3(elm$core$String$padRight, e + 1, '0', total);
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				zeroed);
		} else {
			var num = _n0.a;
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				num);
		}
	} else {
		return '';
	}
};
var myrho$elm_round$Round$roundFun = F3(
	function (functor, s, fl) {
		if (elm$core$Basics$isInfinite(fl) || elm$core$Basics$isNaN(fl)) {
			return elm$core$String$fromFloat(fl);
		} else {
			var signed = fl < 0;
			var _n0 = myrho$elm_round$Round$splitComma(
				myrho$elm_round$Round$toDecimal(
					elm$core$Basics$abs(fl)));
			var before = _n0.a;
			var after = _n0.b;
			var r = elm$core$String$length(before) + s;
			var normalized = _Utils_ap(
				A2(elm$core$String$repeat, (-r) + 1, '0'),
				A3(
					elm$core$String$padRight,
					r,
					'0',
					_Utils_ap(before, after)));
			var totalLen = elm$core$String$length(normalized);
			var roundDigitIndex = A2(elm$core$Basics$max, 1, r);
			var increase = A2(
				functor,
				signed,
				A3(elm$core$String$slice, roundDigitIndex, totalLen, normalized));
			var remains = A3(elm$core$String$slice, 0, roundDigitIndex, normalized);
			var num = increase ? elm$core$String$reverse(
				A2(
					elm$core$Maybe$withDefault,
					'1',
					A2(
						elm$core$Maybe$map,
						myrho$elm_round$Round$increaseNum,
						elm$core$String$uncons(
							elm$core$String$reverse(remains))))) : remains;
			var numLen = elm$core$String$length(num);
			var numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(
				num,
				A2(
					elm$core$String$repeat,
					elm$core$Basics$abs(s),
					'0')) : ((_Utils_cmp(
				s,
				elm$core$String$length(after)) < 0) ? (A3(elm$core$String$slice, 0, numLen - s, num) + ('.' + A3(elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(
				before + '.',
				A3(elm$core$String$padRight, s, '0', after))));
			return A2(myrho$elm_round$Round$addSign, signed, numZeroed);
		}
	});
var myrho$elm_round$Round$round = myrho$elm_round$Round$roundFun(
	F2(
		function (signed, str) {
			var _n0 = elm$core$String$uncons(str);
			if (_n0.$ === 1) {
				return false;
			} else {
				if ('5' === _n0.a.a) {
					if (_n0.a.b === '') {
						var _n1 = _n0.a;
						return !signed;
					} else {
						var _n2 = _n0.a;
						return true;
					}
				} else {
					var _n3 = _n0.a;
					var _int = _n3.a;
					return function (i) {
						return ((i > 53) && signed) || ((i >= 53) && (!signed));
					}(
						elm$core$Char$toCode(_int));
				}
			}
		}));
var cuducos$elm_format_number$Helpers$parse = F2(
	function (locale, original) {
		var parts = A2(
			elm$core$String$split,
			'.',
			A2(myrho$elm_round$Round$round, locale.an, original));
		var integers = cuducos$elm_format_number$Helpers$splitThousands(
			A2(
				elm$core$String$filter,
				elm$core$Char$isDigit,
				A2(
					elm$core$Maybe$withDefault,
					'0',
					elm$core$List$head(parts))));
		var decimals = elm$core$List$head(
			A2(elm$core$List$drop, 1, parts));
		var partial = A5(cuducos$elm_format_number$Helpers$FormattedNumber, original, integers, decimals, '', '');
		var _n0 = cuducos$elm_format_number$Helpers$classify(partial);
		switch (_n0) {
			case 2:
				return _Utils_update(
					partial,
					{U: locale.bJ, W: locale.bK});
			case 0:
				return _Utils_update(
					partial,
					{U: locale.bV, W: locale.bW});
			default:
				return partial;
		}
	});
var cuducos$elm_format_number$Helpers$stringfy = F2(
	function (locale, formatted) {
		var integers = A2(elm$core$String$join, locale.b7, formatted.aa);
		var decimals = function () {
			var _n0 = formatted.an;
			if (!_n0.$) {
				var digits = _n0.a;
				return _Utils_ap(locale.bn, digits);
			} else {
				return '';
			}
		}();
		return elm$core$String$concat(
			_List_fromArray(
				[formatted.U, integers, decimals, formatted.W]));
	});
var cuducos$elm_format_number$FormatNumber$format = F2(
	function (locale, number_) {
		return A2(
			cuducos$elm_format_number$Helpers$stringfy,
			locale,
			A2(cuducos$elm_format_number$Helpers$parse, locale, number_));
	});
var cuducos$elm_format_number$FormatNumber$Locales$Locale = F7(
	function (decimals, thousandSeparator, decimalSeparator, negativePrefix, negativeSuffix, positivePrefix, positiveSuffix) {
		return {bn: decimalSeparator, an: decimals, bJ: negativePrefix, bK: negativeSuffix, bV: positivePrefix, bW: positiveSuffix, b7: thousandSeparator};
	});
var cuducos$elm_format_number$FormatNumber$Locales$usLocale = A7(cuducos$elm_format_number$FormatNumber$Locales$Locale, 2, ',', '.', '−', '', '', '');
var author$project$Printing$commas = cuducos$elm_format_number$FormatNumber$format(
	_Utils_update(
		cuducos$elm_format_number$FormatNumber$Locales$usLocale,
		{an: 0}));
var elm$core$String$toLower = _String_toLower;
var author$project$Class$Show$skillEffect = function () {
	var uncap = function (s) {
		var _n2 = elm$core$String$uncons(s);
		if (_n2.$ === 1) {
			return s;
		} else {
			var _n3 = _n2.a;
			var head = _n3.a;
			var tail = _n3.b;
			return _Utils_ap(
				elm$core$String$toLower(
					elm$core$String$fromChar(head)),
				tail);
		}
	};
	var turns = function (a) {
		switch (a) {
			case 0:
				return '';
			case 1:
				return ' for 1 turn';
			default:
				return ' for ' + (elm$core$String$fromInt(a) + ' turns');
		}
	};
	var go = function (a) {
		switch (a.$) {
			case 0:
				var t = a.a;
				var dur = a.b;
				var buff = a.c;
				var amt = a.d;
				return _Utils_ap(
					A3(author$project$Class$Show$buffEffect, t, amt, buff),
					turns(dur));
			case 1:
				var t = a.a;
				var dur = a.b;
				var deb = a.c;
				var amt = a.d;
				return _Utils_ap(
					A3(author$project$Class$Show$debuffEffect, t, amt, deb),
					turns(dur));
			case 2:
				var t = a.a;
				var instant = a.b;
				var amt = a.c;
				return A3(author$project$Class$Show$instantEffect, t, amt, instant);
			case 3:
				var bonus = a.a;
				var perc = a.b;
				var amt = a.c;
				return A3(author$project$Class$Show$bonusEffect, perc, amt, bonus);
			case 4:
				if (!a.a) {
					var ef = a.b;
					return 'Chance to ' + uncap(
						go(ef));
				} else {
					var per = a.a;
					var ef = a.b;
					return elm$core$String$fromInt(per) + ('% chance to ' + uncap(
						go(ef)));
				}
			case 5:
				var x = a.a;
				var y = a.b;
				var ef = a.c;
				return elm$core$String$fromInt(x) + ('~' + (elm$core$String$fromInt(y) + ('% chance to ' + uncap(
					go(ef)))));
			case 6:
				if (a.a === 'attacking') {
					var ef = a.b;
					return go(ef) + ' when attacking';
				} else {
					var cond = a.a;
					var ef = a.b;
					return 'If ' + (cond + (': ' + uncap(
						go(ef))));
				}
			case 7:
				if (a.a === 1) {
					var ef = a.b;
					return go(ef) + ' (1 time)';
				} else {
					var times = a.a;
					var ef = a.b;
					return go(ef) + (' (' + (elm$core$String$fromInt(times) + ' times)'));
				}
			default:
				var amt = a.a;
				var ef = a.b;
				return go(ef) + (' every turn (max ' + (author$project$Class$Show$amount(amt) + ')'));
		}
	};
	var addPeriod = function (s) {
		return A2(elm$core$String$endsWith, ':', s) ? s : (s + '.');
	};
	return A2(elm$core$Basics$composeR, go, addPeriod);
}();
var author$project$Database$Skill$demerit = function (a) {
	demerit:
	while (true) {
		switch (a.$) {
			case 0:
				var t = a.a;
				return !author$project$Database$Skill$allied(t);
			case 1:
				var t = a.a;
				return author$project$Database$Skill$allied(t);
			case 2:
				switch (a.b.$) {
					case 9:
						var _n1 = a.b;
						return true;
					case 10:
						var _n2 = a.b;
						return true;
					case 11:
						var _n3 = a.b;
						return true;
					case 12:
						var _n4 = a.b;
						return true;
					case 13:
						var _n5 = a.b;
						return true;
					case 14:
						var _n6 = a.b;
						return true;
					default:
						return false;
				}
			case 3:
				return false;
			case 4:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue demerit;
			case 5:
				var ef = a.c;
				var $temp$a = ef;
				a = $temp$a;
				continue demerit;
			case 6:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue demerit;
			case 7:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue demerit;
			default:
				var ef = a.b;
				var $temp$a = ef;
				a = $temp$a;
				continue demerit;
		}
	}
};
var author$project$Site$Algebra$FilterBy = function (a) {
	return {$: 4, a: a};
};
var author$project$Class$Has$Has = F2(
	function (show, has) {
		return {by: has, b$: show};
	});
var elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var author$project$Class$Has$effect = F3(
	function (show, match, f) {
		return A2(
			author$project$Class$Has$Has,
			show,
			F2(
				function (noSelf, x) {
					return A3(
						elm$core$Basics$composeR,
						elm$core$List$map(author$project$Database$Skill$simplify),
						A2(
							elm$core$Basics$composeR,
							elm$core$List$filter(
								A2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$Database$Skill$demerit)),
							A2(
								elm$core$Basics$composeR,
								elm$core$List$map(
									match(noSelf)),
								elm_community$maybe_extra$Maybe$Extra$values)),
						f(x));
				}));
	});
var author$project$Class$Has$bonusEffect = A2(
	author$project$Class$Has$effect,
	A2(author$project$Class$Show$bonusEffect, false, author$project$Database$Skill$Placeholder),
	F2(
		function (_n0, a) {
			if (a.$ === 3) {
				var y = a.a;
				return elm$core$Maybe$Just(y);
			} else {
				return elm$core$Maybe$Nothing;
			}
		}));
var author$project$Class$Has$buffEffect = A2(
	author$project$Class$Has$effect,
	A2(author$project$Class$Show$buffEffect, author$project$Database$Skill$Someone, author$project$Database$Skill$Placeholder),
	F2(
		function (noSelf, a) {
			if (!a.$) {
				var t = a.a;
				var y = a.c;
				return ((!noSelf) || (!_Utils_eq(t, author$project$Database$Skill$Self))) ? elm$core$Maybe$Just(y) : elm$core$Maybe$Nothing;
			} else {
				return elm$core$Maybe$Nothing;
			}
		}));
var author$project$Class$Has$debuffEffect = A2(
	author$project$Class$Has$effect,
	A2(author$project$Class$Show$debuffEffect, author$project$Database$Skill$Someone, author$project$Database$Skill$Placeholder),
	F2(
		function (_n0, a) {
			if (a.$ === 1) {
				var y = a.c;
				return elm$core$Maybe$Just(y);
			} else {
				return elm$core$Maybe$Nothing;
			}
		}));
var author$project$Class$Has$instantEffect = A2(
	author$project$Class$Has$effect,
	A2(author$project$Class$Show$instantEffect, author$project$Database$Skill$Someone, author$project$Database$Skill$Placeholder),
	F2(
		function (noSelf, a) {
			if (a.$ === 2) {
				switch (a.b.$) {
					case 0:
						var _n1 = a.b;
						return elm$core$Maybe$Nothing;
					case 2:
						var _n2 = a.b;
						return elm$core$Maybe$Nothing;
					case 17:
						var _n3 = a.b;
						return elm$core$Maybe$Nothing;
					default:
						var t = a.a;
						var y = a.b;
						return ((!noSelf) || (!_Utils_eq(t, author$project$Database$Skill$Self))) ? elm$core$Maybe$Just(y) : elm$core$Maybe$Nothing;
				}
			} else {
				return elm$core$Maybe$Nothing;
			}
		}));
var author$project$Class$Show$nameBuffEffect = function (a) {
	nameBuffEffect:
	while (true) {
		switch (a.$) {
			case 0:
				return 'AttackUp';
			case 1:
				var c = a.a;
				return 'Performance ' + author$project$Class$Show$card(c);
			case 2:
				return 'BuffUp';
			case 3:
				return 'CritUp';
			case 4:
				return 'DamageDown';
			case 5:
				return 'DamageUp';
			case 6:
				return 'DebuffResist';
			case 7:
				return 'DebuffSuccess';
			case 8:
				return 'DefenseUp';
			case 9:
				return 'Evasion';
			case 10:
				return 'GaugePerTurn';
			case 11:
				return 'Guts';
			case 12:
				var $temp$a = author$project$Database$Skill$Guts;
				a = $temp$a;
				continue nameBuffEffect;
			case 14:
				return 'HealingReceived';
			case 13:
				return 'HealPerTurn';
			case 15:
				return 'HealUp';
			case 16:
				return 'IgnoreInvinc';
			case 17:
				return 'Invincibility';
			case 18:
				return 'KillResist';
			case 19:
				return 'KillUp';
			case 20:
				return 'MaxHP';
			case 21:
				var $temp$a = author$project$Database$Skill$DebuffResist;
				a = $temp$a;
				continue nameBuffEffect;
			case 22:
				var $temp$a = author$project$Database$Skill$DebuffSuccess;
				a = $temp$a;
				continue nameBuffEffect;
			case 23:
				return 'NPUp';
			case 24:
				return 'NPFromDamage';
			case 25:
				return 'NPGen';
			case 26:
				var $temp$a = author$project$Database$Skill$DebuffResist;
				a = $temp$a;
				continue nameBuffEffect;
			case 27:
				return 'Overcharge';
			case 28:
				var $temp$a = author$project$Database$Skill$DebuffResist;
				a = $temp$a;
				continue nameBuffEffect;
			case 29:
				var ef = a.a;
				var $temp$a = ef;
				a = $temp$a;
				continue nameBuffEffect;
			case 30:
				return 'StarAbsorb';
			case 31:
				return 'StarUp';
			case 33:
				var $temp$a = author$project$Database$Skill$DebuffSuccess;
				a = $temp$a;
				continue nameBuffEffect;
			case 34:
				return 'SureHit';
			case 35:
				return 'Taunt';
			default:
				return 'StarsPerTurn';
		}
	}
};
var author$project$Class$ToImage$buffEffect = function (a) {
	buffEffect:
	while (true) {
		switch (a.$) {
			case 28:
				var $temp$a = author$project$Database$Skill$DebuffResist;
				a = $temp$a;
				continue buffEffect;
			case 29:
				var ef = a.a;
				var $temp$a = ef;
				a = $temp$a;
				continue buffEffect;
			case 33:
				var $temp$a = author$project$Database$Skill$DebuffSuccess;
				a = $temp$a;
				continue buffEffect;
			default:
				return A2(
					author$project$Class$ToImage$ImagePath,
					'Effect',
					author$project$Class$Show$nameBuffEffect(a));
		}
	}
};
var author$project$Class$ToImage$debuffEffect = function (a) {
	return A2(
		author$project$Class$ToImage$ImagePath,
		'Effect',
		author$project$Class$Show$nameDebuffEffect(a));
};
var author$project$Database$Skill$BuffDefensive = 1;
var author$project$Database$Skill$BuffOffensive = 0;
var author$project$Database$Skill$BuffSpecialist = 4;
var author$project$Database$Skill$BuffSupport = 2;
var author$project$Database$Skill$BuffUtility = 3;
var author$project$Database$Skill$buffCategory = function (a) {
	switch (a.$) {
		case 0:
			return 0;
		case 1:
			return 0;
		case 2:
			return 3;
		case 3:
			return 0;
		case 4:
			return 1;
		case 5:
			return 0;
		case 6:
			return 3;
		case 7:
			return 3;
		case 8:
			return 1;
		case 9:
			return 1;
		case 10:
			return 2;
		case 11:
			return 1;
		case 12:
			return 1;
		case 14:
			return 2;
		case 13:
			return 1;
		case 15:
			return 2;
		case 16:
			return 0;
		case 17:
			return 1;
		case 18:
			return 3;
		case 19:
			return 3;
		case 20:
			return 1;
		case 21:
			return 3;
		case 22:
			return 3;
		case 23:
			return 0;
		case 24:
			return 2;
		case 25:
			return 2;
		case 26:
			return 3;
		case 27:
			return 2;
		case 28:
			return 3;
		case 29:
			return 4;
		case 30:
			return 2;
		case 31:
			return 2;
		case 32:
			return 2;
		case 33:
			return 3;
		case 34:
			return 0;
		default:
			return 1;
	}
};
var author$project$Site$Base$FilterAction = {$: 7};
var author$project$Site$Base$FilterBonus = {$: 6};
var author$project$Site$Base$FilterBuff = function (a) {
	return {$: 9, a: a};
};
var author$project$Site$Base$FilterDebuff = {$: 8};
var author$project$Site$Filtering$matchFilter = F4(
	function (toImage, _n0, tab, x) {
		var show = _n0.b$;
		var has = _n0.by;
		return {
			aA: A2(
				elm$core$Maybe$map,
				elm$core$Basics$apR(x),
				toImage),
			bF: function (b) {
				return A2(
					elm$core$Basics$composeL,
					elm$core$List$member(x),
					has(b));
			},
			bI: show(x),
			C: tab
		};
	});
var author$project$Site$Filtering$skillFilter = F3(
	function (xs, a, getEffects) {
		var ifMultiple = function (filter) {
			return A3(
				elm$core$Basics$composeL,
				elm$core$List$isEmpty,
				elm$core$List$drop(1),
				A2(
					elm$core$List$filter,
					filter.bF(false),
					xs)) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(filter);
		};
		return A2(
			elm$core$Maybe$andThen,
			ifMultiple,
			function () {
				switch (a.$) {
					case 0:
						var buff = a.c;
						return elm$core$Maybe$Just(
							A4(
								author$project$Site$Filtering$matchFilter,
								elm$core$Maybe$Just(author$project$Class$ToImage$buffEffect),
								author$project$Class$Has$buffEffect(getEffects),
								author$project$Site$Base$FilterBuff(
									author$project$Database$Skill$buffCategory(buff)),
								buff));
					case 1:
						var debuff = a.c;
						return elm$core$Maybe$Just(
							A4(
								author$project$Site$Filtering$matchFilter,
								elm$core$Maybe$Just(author$project$Class$ToImage$debuffEffect),
								author$project$Class$Has$debuffEffect(getEffects),
								author$project$Site$Base$FilterDebuff,
								debuff));
					case 2:
						var action = a.b;
						return elm$core$Maybe$Just(
							A4(
								author$project$Site$Filtering$matchFilter,
								elm$core$Maybe$Nothing,
								author$project$Class$Has$instantEffect(getEffects),
								author$project$Site$Base$FilterAction,
								action));
					case 3:
						var bonus = a.a;
						return elm$core$Maybe$Just(
							A4(
								author$project$Site$Filtering$matchFilter,
								elm$core$Maybe$Nothing,
								author$project$Class$Has$bonusEffect(getEffects),
								author$project$Site$Base$FilterBonus,
								bonus));
					case 4:
						var b = a.b;
						return A3(author$project$Site$Filtering$skillFilter, xs, b, getEffects);
					case 5:
						var b = a.c;
						return A3(author$project$Site$Filtering$skillFilter, xs, b, getEffects);
					case 6:
						var b = a.b;
						return A3(author$project$Site$Filtering$skillFilter, xs, b, getEffects);
					case 7:
						var b = a.b;
						return A3(author$project$Site$Filtering$skillFilter, xs, b, getEffects);
					default:
						var b = a.b;
						return A3(author$project$Site$Filtering$skillFilter, xs, b, getEffects);
				}
			}());
	});
var elm$html$Html$p = _VirtualDom_node('p');
var author$project$Site$Common$effectEl = F3(
	function (xs, getEffects, ef) {
		return A3(
			author$project$StandardLibrary$flip,
			elm$html$Html$p,
			_List_fromArray(
				[
					elm$html$Html$text(
					author$project$Class$Show$skillEffect(ef))
				]),
			function () {
				if (author$project$Database$Skill$demerit(ef)) {
					return _List_fromArray(
						[
							elm$html$Html$Attributes$class('demerit')
						]);
				} else {
					var _n0 = A2(
						elm$core$Maybe$andThen,
						A2(author$project$Site$Filtering$skillFilter, xs, ef),
						getEffects);
					if (_n0.$ === 1) {
						return _List_Nil;
					} else {
						var filter = _n0.a;
						return _List_fromArray(
							[
								elm$html$Html$Attributes$class('link'),
								elm$html$Html$Events$onClick(
								author$project$Site$Algebra$FilterBy(
									_List_fromArray(
										[filter])))
							]);
					}
				}
			}());
	});
var elm$html$Html$h1 = _VirtualDom_node('h1');
var elm$html$Html$h2 = _VirtualDom_node('h2');
var elm$html$Html$h3 = _VirtualDom_node('h3');
var elm$html$Html$h4 = _VirtualDom_node('h4');
var elm$html$Html$h5 = _VirtualDom_node('h5');
var elm$html$Html$h6 = _VirtualDom_node('h6');
var author$project$Site$Common$h_ = function (level) {
	return author$project$Site$Common$text_(
		function () {
			switch (level) {
				case 1:
					return elm$html$Html$h1;
				case 2:
					return elm$html$Html$h2;
				case 3:
					return elm$html$Html$h3;
				case 4:
					return elm$html$Html$h4;
				case 5:
					return elm$html$Html$h5;
				default:
					return elm$html$Html$h6;
			}
		}());
};
var author$project$Site$Common$mode = function (prefs) {
	return A2(author$project$Persist$Preferences$prefer, prefs, 1) ? 'dark' : 'light';
};
var elm$html$Html$col = _VirtualDom_node('col');
var elm$html$Html$colgroup = _VirtualDom_node('colgroup');
var elm$html$Html$table = _VirtualDom_node('table');
var elm$html$Html$tbody = _VirtualDom_node('tbody');
var elm$html$Html$th = _VirtualDom_node('th');
var elm$html$Html$thead = _VirtualDom_node('thead');
var elm$html$Html$tr = _VirtualDom_node('tr');
var author$project$Site$Common$table_ = F2(
	function (headings, tbody) {
		return A2(
			elm$html$Html$table,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					elm$html$Html$colgroup,
					_List_Nil,
					A2(
						elm$core$List$map,
						elm$core$Basics$always(
							A2(elm$html$Html$col, _List_Nil, _List_Nil)),
						headings)),
					A2(
					elm$html$Html$thead,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							elm$html$Html$tr,
							_List_Nil,
							A2(
								elm$core$List$map,
								author$project$Site$Common$text_(elm$html$Html$th),
								headings))
						])),
					A2(elm$html$Html$tbody, _List_Nil, tbody)
				]));
	});
var elm$html$Html$article = _VirtualDom_node('article');
var elm$html$Html$em = _VirtualDom_node('em');
var elm$html$Html$section = _VirtualDom_node('section');
var elm$html$Html$td = _VirtualDom_node('td');
var elm$html$Html$Attributes$id = elm$html$Html$Attributes$stringProperty('id');
var author$project$Site$CraftEssence$Component$popup = F2(
	function (prefs, a) {
		if (a.$ === 1) {
			return A2(
				elm$core$Basics$composeL,
				elm$html$Html$div(
					_List_fromArray(
						[
							elm$html$Html$Attributes$class(
							author$project$Site$Common$mode(prefs))
						])),
				elm$core$Basics$append(
					_List_fromArray(
						[
							A2(
							elm$html$Html$div,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('cover'),
									elm$html$Html$Events$onClick(
									author$project$Site$Algebra$Focus(elm$core$Maybe$Nothing))
								]),
							_List_Nil),
							A2(
							elm$html$Html$article,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('focus')
								]),
							_List_Nil)
						])));
		} else {
			var ce = a.a;
			var showInt = A2(
				elm$core$Basics$composeR,
				elm$core$Basics$toFloat,
				A2(
					elm$core$Basics$composeR,
					author$project$Printing$commas,
					A2(elm$core$Basics$composeR, elm$html$Html$text, elm$core$List$singleton)));
			var bondLink = function (bond) {
				return A3(
					elm$core$Basics$composeL,
					elm$html$Html$Events$onClick,
					author$project$Site$Algebra$Switch,
					A2(
						elm_community$list_extra$List$Extra$find,
						A2(
							elm$core$Basics$composeR,
							function ($) {
								return $.bI;
							},
							elm$core$Basics$eq(bond)),
						author$project$Database$servants));
			};
			var bondMsg = function () {
				var _n4 = ce.bd;
				if (_n4.$ === 1) {
					return _List_Nil;
				} else {
					var bond = _n4.a;
					return _List_fromArray(
						[
							A2(
							elm$html$Html$em,
							_List_Nil,
							_List_fromArray(
								[
									elm$html$Html$text('If equipped by '),
									A2(
									elm$html$Html$a,
									_List_fromArray(
										[
											author$project$Site$Common$href_('CraftEssences'),
											elm$html$Html$Attributes$class('link'),
											bondLink(bond)
										]),
									_List_fromArray(
										[
											elm$html$Html$text(bond)
										])),
									elm$html$Html$text(': ')
								]))
						]);
				}
			}();
			var effectsEl = function (f) {
				return A3(
					elm$core$Basics$composeL,
					A2(
						elm$core$Basics$composeL,
						elm$html$Html$section(_List_Nil),
						elm$core$Basics$append(bondMsg)),
					A2(author$project$StandardLibrary$flip, elm$core$List$map, ce.ao),
					A2(
						elm$core$Basics$composeR,
						author$project$Database$Skill$mapAmount(f),
						A2(
							author$project$Site$Common$effectEl,
							author$project$Database$CraftEssence$craftEssences,
							elm$core$Maybe$Just(
								function ($) {
									return $.ao;
								}))));
			};
			var _n1 = ce.a1;
			var base = _n1.bb;
			var max = _n1.bG;
			var mlbEl = _Utils_eq(base, max) ? _List_Nil : _List_fromArray(
				[
					effectsEl(
					F2(
						function (x, _n3) {
							return author$project$Database$Skill$Flat(x);
						})),
					A2(author$project$Site$Common$h_, 2, 'Max Limit Break')
				]);
			return A2(
				elm$core$Basics$composeL,
				elm$html$Html$div(
					_List_fromArray(
						[
							elm$html$Html$Attributes$class(
							author$project$Site$Common$mode(prefs) + ' fade')
						])),
				elm$core$Basics$append(
					_List_fromArray(
						[
							A2(
							elm$html$Html$div,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('cover'),
									elm$html$Html$Events$onClick(
									author$project$Site$Algebra$Focus(elm$core$Maybe$Nothing))
								]),
							_List_Nil),
							A2(
							elm$html$Html$article,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('focus')
								]),
							_List_fromArray(
								[
									A2(
									elm$html$Html$div,
									_List_Nil,
									_List_fromArray(
										[
											A3(
											author$project$Site$CraftEssence$Component$portrait,
											true,
											prefs,
											_Utils_Tuple2('', ce)),
											A2(
											elm$html$Html$div,
											_List_Nil,
											_Utils_ap(
												_List_fromArray(
													[
														A2(
														author$project$Site$Common$table_,
														_List_fromArray(
															['', 'ATK', 'HP']),
														_List_fromArray(
															[
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(author$project$Site$Common$text_, elm$html$Html$th, 'Base'),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(base.a9)),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(base.bA))
																	])),
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(author$project$Site$Common$text_, elm$html$Html$th, 'Max'),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(max.a9)),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(max.bA))
																	]))
															])),
														author$project$Class$ToImage$image(
														author$project$Class$ToImage$icon(ce.aA)),
														A2(author$project$Site$Common$h_, 2, 'Effects')
													]),
												_Utils_ap(
													mlbEl,
													_List_fromArray(
														[
															effectsEl(
															F2(
																function (_n2, y) {
																	return author$project$Database$Skill$Flat(y);
																}))
														]))))
										]))
								]))
						])));
		}
	});
var author$project$Site$CraftEssence$Sorting$toSort = F2(
	function (a, ce) {
		switch (a) {
			case 1:
				return -ce.aB;
			case 0:
				return ce.aU;
			case 2:
				return ce.a1.bG.a9;
			case 3:
				return ce.a1.bG.bA;
			default:
				return 1 / 0;
		}
	});
var author$project$Printing$places = function (decimals) {
	return cuducos$elm_format_number$FormatNumber$format(
		_Utils_update(
			cuducos$elm_format_number$FormatNumber$Locales$usLocale,
			{an: decimals, b7: ''}));
};
var author$project$Sorting$formatSort = function (a) {
	switch (a) {
		case 2:
			return author$project$Printing$commas;
		case 3:
			return author$project$Printing$commas;
		case 9:
			return author$project$Printing$commas;
		case 10:
			return author$project$Printing$commas;
		case 11:
			return author$project$Printing$commas;
		case 12:
			return author$project$Printing$commas;
		case 5:
			return A2(
				elm$core$Basics$composeR,
				author$project$Printing$places(2),
				A2(author$project$StandardLibrary$flip, elm$core$Basics$append, '%'));
		case 6:
			return A2(
				elm$core$Basics$composeR,
				author$project$Printing$places(2),
				A2(author$project$StandardLibrary$flip, elm$core$Basics$append, '%'));
		case 7:
			return author$project$Printing$places(2);
		case 8:
			return author$project$Printing$places(2);
		default:
			return author$project$Printing$places(0);
	}
};
var author$project$StandardLibrary$on = F4(
	function (op, f, a, b) {
		return A2(
			op,
			f(a),
			f(b));
	});
var elm$core$List$sortWith = _List_sortWith;
var author$project$Site$CraftEssence$Sorting$doSort = function (a) {
	if (!a) {
		var sorter = function (ce) {
			return _Utils_ap(
				elm$core$String$fromInt(5 - ce.aU),
				ce.bI);
		};
		var showSort = function (ce) {
			return _Utils_Tuple2(
				A2(elm$core$Maybe$withDefault, '', ce.bd),
				ce);
		};
		return A2(
			elm$core$Basics$composeR,
			elm$core$List$sortWith(
				A2(author$project$StandardLibrary$on, elm$core$Basics$compare, sorter)),
			elm$core$List$map(showSort));
	} else {
		var sorter = author$project$Site$CraftEssence$Sorting$toSort(a);
		var showSort = function (ce) {
			return _Utils_Tuple2(
				A3(
					elm$core$Basics$composeR,
					sorter,
					A2(
						elm$core$Basics$composeR,
						elm$core$Basics$abs,
						author$project$Sorting$formatSort(a)),
					ce),
				ce);
		};
		return A2(
			elm$core$Basics$composeR,
			elm$core$List$sortWith(
				A2(author$project$StandardLibrary$on, elm$core$Basics$compare, sorter)),
			elm$core$List$map(showSort));
	}
};
var author$project$Site$CraftEssence$Sorting$sorted = A2(
	author$project$StandardLibrary$dict,
	author$project$Sorting$enumSortBy,
	function (sorter) {
		return _Utils_Tuple2(
			author$project$Sorting$ordSortBy(sorter),
			A2(author$project$Site$CraftEssence$Sorting$doSort, sorter, author$project$Database$CraftEssence$craftEssences));
	});
var author$project$Site$CraftEssence$Sorting$getSort = function (sorter) {
	return A2(
		elm$core$Maybe$withDefault,
		_List_Nil,
		A2(
			elm$core$Dict$get,
			author$project$Sorting$ordSortBy(sorter),
			author$project$Site$CraftEssence$Sorting$sorted));
};
var author$project$Site$CraftEssence$Component$reSort = function (st) {
	return _Utils_update(
		st,
		{
			V: author$project$Site$CraftEssence$Sorting$getSort(st.a$)
		});
};
var elm_community$list_extra$List$Extra$uniqueHelp = F4(
	function (f, existing, remaining, accumulator) {
		uniqueHelp:
		while (true) {
			if (!remaining.b) {
				return elm$core$List$reverse(accumulator);
			} else {
				var first = remaining.a;
				var rest = remaining.b;
				var computedFirst = f(first);
				if (A2(elm$core$Set$member, computedFirst, existing)) {
					var $temp$f = f,
						$temp$existing = existing,
						$temp$remaining = rest,
						$temp$accumulator = accumulator;
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				} else {
					var $temp$f = f,
						$temp$existing = A2(elm$core$Set$insert, computedFirst, existing),
						$temp$remaining = rest,
						$temp$accumulator = A2(elm$core$List$cons, first, accumulator);
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				}
			}
		}
	});
var elm_community$list_extra$List$Extra$uniqueBy = F2(
	function (f, list) {
		return A4(elm_community$list_extra$List$Extra$uniqueHelp, f, elm$core$Set$empty, list, _List_Nil);
	});
var author$project$Database$genericGetAll = F2(
	function (xs, _n0) {
		var show = _n0.b$;
		var has = _n0.by;
		return A3(
			elm$core$Basics$composeR,
			elm$core$List$concatMap(
				has(false)),
			A2(
				elm$core$Basics$composeR,
				elm$core$List$sortBy(show),
				elm_community$list_extra$List$Extra$uniqueBy(show)),
			xs);
	});
var author$project$Database$ceGetAll = author$project$Database$genericGetAll(author$project$Database$CraftEssence$craftEssences);
var author$project$Database$Skill$isDamage = function (a) {
	switch (a.$) {
		case 1:
			return true;
		case 5:
			return true;
		case 6:
			return true;
		case 7:
			return true;
		case 8:
			return true;
		case 21:
			return true;
		case 26:
			return true;
		default:
			return false;
	}
};
var author$project$Site$Algebra$Filter = F4(
	function (icon, tab, name, match) {
		return {aA: icon, bF: match, bI: name, C: tab};
	});
var author$project$Site$Base$FilterAvailability = {$: 1};
var author$project$Site$Base$FilterRarity = {$: 17};
var author$project$Site$Base$FilterSource = {$: 11};
var author$project$Site$Filtering$namedBonus = F3(
	function (tab, name, names) {
		return {
			aA: elm$core$Maybe$Nothing,
			bF: elm$core$Basics$always(
				A2(
					elm$core$Basics$composeR,
					function ($) {
						return $.bI;
					},
					A2(author$project$StandardLibrary$flip, elm$core$List$member, names))),
			bI: name,
			C: tab
		};
	});
var elm_community$maybe_extra$Maybe$Extra$isJust = function (m) {
	if (m.$ === 1) {
		return false;
	} else {
		return true;
	}
};
var elm_community$maybe_extra$Maybe$Extra$isNothing = function (m) {
	if (m.$ === 1) {
		return true;
	} else {
		return false;
	}
};
var author$project$Site$CraftEssence$Filters$extraFilters = elm$core$List$concat(
	_List_fromArray(
		[
			_List_fromArray(
			[
				A3(
				author$project$Site$Filtering$namedBonus,
				author$project$Site$Base$FilterAvailability,
				'New',
				_List_fromArray(
					['Wizard & Priest', 'Mata Hari\'s Tavern', 'Hero Elly\'s Adventure', 'Count Romani Archaman\'s Hospitality', 'Dangerous Beast', 'Witch Under the Moonlight'])),
				A4(
				author$project$Site$Algebra$Filter,
				elm$core$Maybe$Nothing,
				author$project$Site$Base$FilterSource,
				'Limited',
				F2(
					function (_n0, ce) {
						return ce.aD && elm_community$maybe_extra$Maybe$Extra$isNothing(ce.bd);
					})),
				A4(
				author$project$Site$Algebra$Filter,
				elm$core$Maybe$Nothing,
				author$project$Site$Base$FilterSource,
				'Non-Limited',
				F2(
					function (_n1, ce) {
						return (!ce.aD) && elm_community$maybe_extra$Maybe$Extra$isNothing(ce.bd);
					})),
				A4(
				author$project$Site$Algebra$Filter,
				elm$core$Maybe$Nothing,
				author$project$Site$Base$FilterSource,
				'Bond',
				F2(
					function (_n2, ce) {
						return elm_community$maybe_extra$Maybe$Extra$isJust(ce.bd);
					}))
			]),
			A3(
			author$project$StandardLibrary$flip,
			elm$core$List$map,
			A2(elm$core$List$range, 1, 5),
			function (rarity) {
				return A4(
					author$project$Site$Algebra$Filter,
					elm$core$Maybe$Nothing,
					author$project$Site$Base$FilterRarity,
					A2(author$project$Printing$stars, false, rarity),
					F2(
						function (_n3, ce) {
							return _Utils_eq(rarity, ce.aU);
						}));
			})
		]));
var author$project$Site$Base$FilterEventBonus = {$: 0};
var author$project$Site$Filtering$ScheduledFilter = F3(
	function (start, end, filter) {
		return {ap: end, au: filter, a0: start};
	});
var author$project$Site$CraftEssence$Filters$scheduledFilters = _List_fromArray(
	[
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+25~100% [Skeleton], [Ghost], & [Lamia] spawn',
			_List_fromArray(
				['Wizard & Priest']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+25~100% [Insect] & [Golem] spawn',
			_List_fromArray(
				['Mata Hari\'s Tavern']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+25~100% [Beast], [Homunculus], & [Knight] spawn',
			_List_fromArray(
				['Hero Elly\'s Adventure']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+1~2 Copper Sack',
			_List_fromArray(
				['Count Romani Archaman\'s Hospitality']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+1~2 Silver Sack',
			_List_fromArray(
				['Witch Under the Moonlight']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+1~2 Gold Sack',
			_List_fromArray(
				['Dangerous Beast']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterAvailability,
			'Rate-Up',
			_List_fromArray(
				['Dangerous Beast', 'Witch Under the Moonlight', 'Count Romani Archaman\'s Hospitality']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 8),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterAvailability,
			'Limited to Event',
			_List_fromArray(
				['Dangerous Beast', 'Witch Under the Moonlight', 'Wizard & Priest', 'Mata Hari\'s Tavern', 'Hero Elly\'s Adventure', 'Count Romani Archaman\'s Hospitality'])))
	]);
var author$project$Date$ordMonth = function (a) {
	switch (a) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		case 6:
			return 6;
		case 7:
			return 7;
		case 8:
			return 8;
		case 9:
			return 9;
		case 10:
			return 10;
		default:
			return 11;
	}
};
var author$project$StandardLibrary$compareThen = F4(
	function (first, next, x, y) {
		var _n0 = A4(author$project$StandardLibrary$on, elm$core$Basics$compare, first, x, y);
		if (_n0 === 1) {
			return A2(next, x, y);
		} else {
			var order = _n0;
			return order;
		}
	});
var author$project$Date$compare = A3(
	elm$core$Basics$composeL,
	A2(
		elm$core$Basics$composeL,
		A2(
			elm$core$Basics$composeL,
			author$project$StandardLibrary$compareThen(
				function ($) {
					return $.a5;
				}),
			author$project$StandardLibrary$compareThen(
				A2(
					elm$core$Basics$composeR,
					function ($) {
						return $.aH;
					},
					author$project$Date$ordMonth))),
		author$project$StandardLibrary$compareThen(
			function ($) {
				return $.am;
			})),
	elm$core$Basics$always,
	elm$core$Basics$always(1));
var author$project$Site$Filtering$getScheduled = F2(
	function (xs, today) {
		var sched = function (x) {
			return (A2(author$project$Date$compare, x.a0, today) !== 2) && (A2(author$project$Date$compare, today, x.ap) !== 2);
		};
		return A2(
			elm$core$List$map,
			function ($) {
				return $.au;
			},
			A2(elm$core$List$filter, sched, xs));
	});
var author$project$Site$CraftEssence$Filters$getExtraFilters = F2(
	function (today, tab) {
		return A2(
			elm$core$List$filter,
			A2(
				elm$core$Basics$composeR,
				function ($) {
					return $.C;
				},
				elm$core$Basics$eq(tab)),
			_Utils_ap(
				A2(author$project$Site$Filtering$getScheduled, author$project$Site$CraftEssence$Filters$scheduledFilters, today),
				author$project$Site$CraftEssence$Filters$extraFilters));
	});
var author$project$Site$CraftEssence$Filters$getFilters = F2(
	function (today, tab) {
		var allEffects = F3(
			function (has, toImage, pred) {
				return A3(
					elm$core$Basics$composeR,
					elm$core$List$filter(pred),
					elm$core$List$map(
						A3(
							author$project$Site$Filtering$matchFilter,
							toImage,
							has(
								function ($) {
									return $.ao;
								}),
							tab)),
					author$project$Database$ceGetAll(
						has(
							function ($) {
								return $.ao;
							})));
			});
		switch (tab.$) {
			case 6:
				return A3(
					allEffects,
					author$project$Class$Has$bonusEffect,
					elm$core$Maybe$Nothing,
					elm$core$Basics$always(true));
			case 8:
				return A3(
					allEffects,
					author$project$Class$Has$debuffEffect,
					elm$core$Maybe$Just(author$project$Class$ToImage$debuffEffect),
					elm$core$Basics$always(true));
			case 9:
				var c = tab.a;
				return A3(
					allEffects,
					author$project$Class$Has$buffEffect,
					elm$core$Maybe$Just(author$project$Class$ToImage$buffEffect),
					A2(
						elm$core$Basics$composeR,
						author$project$Database$Skill$buffCategory,
						elm$core$Basics$eq(c)));
			case 7:
				return A3(
					allEffects,
					author$project$Class$Has$instantEffect,
					elm$core$Maybe$Nothing,
					A2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$Database$Skill$isDamage));
			case 10:
				return A3(allEffects, author$project$Class$Has$instantEffect, elm$core$Maybe$Nothing, author$project$Database$Skill$isDamage);
			default:
				return A2(author$project$Site$CraftEssence$Filters$getExtraFilters, today, tab);
		}
	});
var author$project$Database$Skill$enumBuffCategory = _List_fromArray(
	[0, 1, 2, 3, 4]);
var author$project$Site$Base$FilterAlignment = {$: 2};
var author$project$Site$Base$FilterAttribute = {$: 16};
var author$project$Site$Base$FilterCard = {$: 13};
var author$project$Site$Base$FilterClass = {$: 14};
var author$project$Site$Base$FilterDamage = {$: 10};
var author$project$Site$Base$FilterDeck = {$: 15};
var author$project$Site$Base$FilterMaterial = {$: 5};
var author$project$Site$Base$FilterPassiveSkill = {$: 4};
var author$project$Site$Base$FilterPhantasm = {$: 12};
var author$project$Site$Base$FilterTrait = {$: 3};
var author$project$Site$Base$enumFilterTab = _Utils_ap(
	_List_fromArray(
		[author$project$Site$Base$FilterEventBonus, author$project$Site$Base$FilterAvailability, author$project$Site$Base$FilterAlignment, author$project$Site$Base$FilterTrait, author$project$Site$Base$FilterPassiveSkill, author$project$Site$Base$FilterMaterial, author$project$Site$Base$FilterBonus, author$project$Site$Base$FilterAction, author$project$Site$Base$FilterDebuff]),
	_Utils_ap(
		A2(elm$core$List$map, author$project$Site$Base$FilterBuff, author$project$Database$Skill$enumBuffCategory),
		_List_fromArray(
			[author$project$Site$Base$FilterDamage, author$project$Site$Base$FilterSource, author$project$Site$Base$FilterPhantasm, author$project$Site$Base$FilterCard, author$project$Site$Base$FilterClass, author$project$Site$Base$FilterDeck, author$project$Site$Base$FilterAttribute, author$project$Site$Base$FilterRarity])));
var author$project$Class$Show$buffCategory = function (a) {
	switch (a) {
		case 0:
			return 'Offensive';
		case 1:
			return 'Defensive';
		case 2:
			return 'Support';
		case 3:
			return 'Utility';
		default:
			return 'Specialist';
	}
};
var author$project$Class$Show$filterTab = function (a) {
	switch (a.$) {
		case 7:
			return 'Action';
		case 2:
			return 'Alignment';
		case 16:
			return 'Attribute';
		case 1:
			return 'Availability';
		case 6:
			return 'Bonus';
		case 9:
			var c = a.a;
			return 'Buff (' + (author$project$Class$Show$buffCategory(c) + ')');
		case 13:
			return 'NP Card';
		case 14:
			return 'Class';
		case 10:
			return 'Damage';
		case 8:
			return 'Debuff';
		case 15:
			return 'Deck';
		case 0:
			return 'Event Bonus';
		case 5:
			return 'Material';
		case 4:
			return 'Passive Skill';
		case 12:
			return 'NP Type';
		case 17:
			return 'Rarity';
		case 11:
			return 'Source';
		default:
			return 'Trait';
	}
};
var author$project$Site$Algebra$ordFilter = function (x) {
	return _Utils_ap(
		author$project$Class$Show$filterTab(x.C),
		function () {
			if (_Utils_eq(x.C, author$project$Site$Base$FilterRarity)) {
				return elm$core$String$fromInt(
					10 - elm$core$String$length(x.bI));
			} else {
				if (A2(elm$core$String$startsWith, '+', x.bI)) {
					var _n0 = A2(elm$core$String$split, ' ', x.bI);
					if (!_n0.b) {
						return x.bI;
					} else {
						var w = _n0.a;
						var ws = _n0.b;
						return _Utils_ap(
							A2(elm$core$String$join, ' ', ws),
							w);
					}
				} else {
					return x.bI;
				}
			}
		}());
};
var author$project$Site$Base$ordFilterTab = author$project$StandardLibrary$enumToOrd(author$project$Site$Base$enumFilterTab);
var author$project$Site$Algebra$compareFilter = A3(
	elm$core$Basics$composeL,
	A2(
		elm$core$Basics$composeL,
		author$project$StandardLibrary$compareThen(
			A2(
				elm$core$Basics$composeR,
				function ($) {
					return $.C;
				},
				author$project$Site$Base$ordFilterTab)),
		author$project$StandardLibrary$compareThen(author$project$Site$Algebra$ordFilter)),
	elm$core$Basics$always,
	elm$core$Basics$always(1));
var author$project$Site$Algebra$eqFilter = F2(
	function (x, y) {
		return _Utils_eq(x.C, y.C) && _Utils_eq(x.bI, y.bI);
	});
var elm_community$list_extra$List$Extra$oneGroupWhileHelper = F3(
	function (condition, first, list) {
		if (!list.b) {
			return _Utils_Tuple2(_List_Nil, _List_Nil);
		} else {
			var second = list.a;
			var rest = list.b;
			if (A2(condition, first, second)) {
				var _n1 = A3(elm_community$list_extra$List$Extra$oneGroupWhileHelper, condition, second, rest);
				var thisGroup = _n1.a;
				var ungroupedRest = _n1.b;
				return _Utils_Tuple2(
					A2(elm$core$List$cons, second, thisGroup),
					ungroupedRest);
			} else {
				return _Utils_Tuple2(_List_Nil, list);
			}
		}
	});
var elm_community$list_extra$List$Extra$accumulateGroupWhile = F3(
	function (condition, list, accum) {
		accumulateGroupWhile:
		while (true) {
			if (!list.b) {
				return elm$core$List$reverse(accum);
			} else {
				var first = list.a;
				var rest = list.b;
				var _n1 = A3(elm_community$list_extra$List$Extra$oneGroupWhileHelper, condition, first, rest);
				var thisGroup = _n1.a;
				var ungroupedRest = _n1.b;
				var $temp$condition = condition,
					$temp$list = ungroupedRest,
					$temp$accum = A2(
					elm$core$List$cons,
					_Utils_Tuple2(first, thisGroup),
					accum);
				condition = $temp$condition;
				list = $temp$list;
				accum = $temp$accum;
				continue accumulateGroupWhile;
			}
		}
	});
var elm_community$list_extra$List$Extra$groupWhile = F2(
	function (condition, list) {
		return A3(elm_community$list_extra$List$Extra$accumulateGroupWhile, condition, list, _List_Nil);
	});
var author$project$Site$Filtering$reduceFilters = function () {
	var go = function (_n0) {
		var x = _n0.a;
		var xs = _n0.b;
		return _Utils_update(
			x,
			{
				bF: F2(
					function (a, b) {
						return A2(
							elm$core$List$any,
							function (f) {
								return A2(f.bF, a, b);
							},
							A2(elm$core$List$cons, x, xs));
					})
			});
	};
	return A2(
		elm$core$Basics$composeR,
		elm$core$List$sortWith(author$project$Site$Algebra$compareFilter),
		A2(
			elm$core$Basics$composeR,
			elm_community$list_extra$List$Extra$groupWhile(author$project$Site$Algebra$eqFilter),
			elm$core$List$map(go)));
}();
var author$project$Site$Filtering$collectFilters = F2(
	function (f, today) {
		return A3(
			author$project$StandardLibrary$flip,
			elm$core$List$map,
			author$project$Site$Base$enumFilterTab,
			function (tab) {
				return {
					av: author$project$Site$Filtering$reduceFilters(
						A2(f, today, tab)),
					C: tab
				};
			});
	});
var elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			elm$core$List$any,
			A2(elm$core$Basics$composeL, elm$core$Basics$not, isOkay),
			list);
	});
var author$project$Site$Filtering$updateListing = F2(
	function (f, st) {
		var noSelf = A2(author$project$Persist$Preferences$prefer, st.aP, 4);
		var matches = F2(
			function (x, filter) {
				return A2(filter.bF, noSelf, x);
			});
		var match = function (x) {
			return (elm$core$List$isEmpty(st.as) || A2(
				elm$core$List$all,
				A2(
					elm$core$Basics$composeL,
					elm$core$Basics$not,
					matches(x)),
				st.as)) && (elm$core$List$isEmpty(st.av) || A2(
				st.aF ? elm$core$List$any : elm$core$List$all,
				matches(x),
				st.av));
		};
		return _Utils_update(
			st,
			{
				aE: A2(
					elm$core$List$filter,
					A2(
						elm$core$Basics$composeR,
						elm$core$Tuple$second,
						A2(elm$core$Basics$composeR, f, match)),
					st.V)
			});
	});
var author$project$Class$Show$section = function (a) {
	switch (a) {
		case 0:
			return 'Browse';
		case 1:
			return 'Settings';
		case 2:
			return 'Sort By';
		case 3:
			return 'Include';
		default:
			return 'Filter';
	}
};
var author$project$Site$Algebra$ToSection = function (a) {
	return {$: 0, a: a};
};
var author$project$Site$Base$SectionFilter = 4;
var author$project$Site$Base$SectionInclude = 3;
var author$project$Site$Base$SectionSettings = 1;
var author$project$Site$Base$SectionSortBy = 2;
var author$project$Site$Base$SectionBrowse = 0;
var author$project$Site$Base$enumSection = _List_fromArray(
	[0, 1, 2, 3, 4]);
var elm$html$Html$button = _VirtualDom_node('button');
var elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			elm$json$Json$Encode$bool(bool));
	});
var elm$html$Html$Attributes$disabled = elm$html$Html$Attributes$boolProperty('disabled');
var elm$html$Html$Attributes$type_ = elm$html$Html$Attributes$stringProperty('type');
var author$project$Site$Common$button_ = F3(
	function (label, enable, click) {
		var meta = A2(
			elm$core$List$cons,
			elm$html$Html$Attributes$type_('button'),
			enable ? _List_fromArray(
				[
					elm$html$Html$Events$onClick(click)
				]) : _List_fromArray(
				[
					elm$html$Html$Attributes$disabled(true)
				]));
		return A2(
			elm$html$Html$button,
			meta,
			_List_fromArray(
				[
					elm$html$Html$text(label)
				]));
	});
var author$project$Class$Show$sortBy = function (a) {
	switch (a) {
		case 2:
			return 'ATK';
		case 3:
			return 'HP';
		case 1:
			return 'ID';
		case 5:
			return 'NP Gain per Arts card';
		case 6:
			return 'NP Gain per full deck';
		case 9:
			return 'NP Damage';
		case 10:
			return 'NP Damage + Overcharge';
		case 11:
			return 'NP Special Damage';
		case 12:
			return 'NP Special + Overcharge';
		case 0:
			return 'Rarity';
		case 8:
			return 'Stars per full deck';
		case 7:
			return 'Stars per Quick card';
		default:
			return 'Star Weight';
	}
};
var author$project$Persist$Preferences$unfoldPreferences = function (prefs) {
	return A3(
		author$project$StandardLibrary$flip,
		elm$core$List$map,
		author$project$Persist$Preferences$enumPreference,
		function (pref) {
			return _Utils_Tuple2(
				pref,
				A2(author$project$Persist$Preferences$prefer, prefs, pref));
		});
};
var author$project$Site$Algebra$ClearAll = {$: 2};
var author$project$Site$Algebra$MatchAny = function (a) {
	return {$: 6, a: a};
};
var author$project$Site$Algebra$SetPref = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var author$project$Site$Algebra$SetSort = function (a) {
	return {$: 7, a: a};
};
var author$project$Site$Base$exclusive = A3(author$project$StandardLibrary$on, elm$core$Basics$le, author$project$Site$Base$ordFilterTab, author$project$Site$Base$FilterSource);
var elm$html$Html$input = _VirtualDom_node('input');
var elm$html$Html$label = _VirtualDom_node('label');
var elm$html$Html$Attributes$checked = elm$html$Html$Attributes$boolProperty('checked');
var author$project$Site$Common$checkbox_ = F3(
	function (icon, label, checked) {
		return _List_fromArray(
			[
				A2(
				elm$html$Html$input,
				_List_fromArray(
					[
						elm$html$Html$Attributes$type_('checkbox'),
						elm$html$Html$Attributes$checked(checked)
					]),
				_List_Nil),
				A2(
				elm$html$Html$label,
				_List_Nil,
				function () {
					if (icon.$ === 1) {
						return _List_fromArray(
							[
								elm$html$Html$text(label)
							]);
					} else {
						var ic = icon.a;
						return _List_fromArray(
							[
								ic,
								elm$html$Html$text(label)
							]);
					}
				}())
			]);
	});
var author$project$Site$Common$radio_ = F2(
	function (label, checked) {
		return _List_fromArray(
			[
				A2(
				elm$html$Html$input,
				_List_fromArray(
					[
						elm$html$Html$Attributes$type_('radio'),
						elm$html$Html$Attributes$checked(checked)
					]),
				_List_Nil),
				A2(author$project$Site$Common$text_, elm$html$Html$label, label)
			]);
	});
var author$project$Site$Algebra$Check = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var author$project$Site$Algebra$Toggle = function (a) {
	return {$: 5, a: a};
};
var elm$html$Html$form = _VirtualDom_node('form');
var author$project$Site$Rendering$filterSection = F2(
	function (st, _n0) {
		var tab = _n0.C;
		var filters = _n0.av;
		if (!filters.b) {
			return _List_Nil;
		} else {
			var filterEl = function (filter) {
				return A3(
					elm$core$Basics$composeL,
					elm$html$Html$p(
						_List_fromArray(
							[
								elm$html$Html$Events$onClick(
								author$project$Site$Algebra$Toggle(filter))
							])),
					A2(
						author$project$Site$Common$checkbox_,
						A2(elm$core$Maybe$map, author$project$Class$ToImage$image, filter.aA),
						filter.bI),
					author$project$Site$Base$exclusive(filter.C) ? (!A2(
						elm$core$List$any,
						author$project$Site$Algebra$eqFilter(filter),
						st.as)) : A2(
						elm$core$List$any,
						author$project$Site$Algebra$eqFilter(filter),
						st.av));
			};
			var checked = elm$core$List$length(
				A2(
					elm$core$List$filter,
					A2(
						elm$core$Basics$composeR,
						function ($) {
							return $.C;
						},
						elm$core$Basics$eq(tab)),
					st.as));
			var addAll = A2(
				author$project$StandardLibrary$doIf,
				author$project$Site$Base$exclusive(tab) && (elm$core$List$length(filters) > 3),
				elm$core$Basics$append(
					_List_fromArray(
						[
							A3(
							author$project$Site$Common$button_,
							'All',
							checked,
							A2(author$project$Site$Algebra$Check, tab, true)),
							A3(
							author$project$Site$Common$button_,
							'None',
							!_Utils_eq(
								checked,
								elm$core$List$length(filters)),
							A2(author$project$Site$Algebra$Check, tab, false))
						])));
			return A3(
				elm$core$Basics$composeL,
				A2(
					elm$core$Basics$composeL,
					A2(
						elm$core$Basics$composeL,
						elm$core$List$cons(
							A2(
								author$project$Site$Common$h_,
								3,
								author$project$Class$Show$filterTab(tab))),
						addAll),
					elm$core$List$singleton),
				elm$html$Html$form(_List_Nil),
				A2(elm$core$List$map, filterEl, filters));
		}
	});
var author$project$Site$Rendering$render = F4(
	function (a, st, sorts, nav) {
		switch (a) {
			case 0:
				return A2(
					elm$core$List$cons,
					A2(author$project$Site$Common$h_, 1, 'Browse'),
					_Utils_ap(
						nav,
						_List_fromArray(
							[
								A2(author$project$Site$Common$h_, 1, 'Links'),
								A2(
								elm$html$Html$a,
								_List_fromArray(
									[
										elm$html$Html$Attributes$href('https://www.reddit.com/message/compose/?to=pareidolist')
									]),
								_List_fromArray(
									[
										elm$html$Html$text('Send Feedback/Suggestions')
									])),
								A2(
								elm$html$Html$a,
								_List_fromArray(
									[
										elm$html$Html$Attributes$href('https://github.com/jnbooth/chaldeas')
									]),
								_List_fromArray(
									[
										elm$html$Html$text('GitHub')
									])),
								A2(
								elm$html$Html$a,
								_List_fromArray(
									[
										elm$html$Html$Attributes$href('https://grandorder.wiki')
									]),
								_List_fromArray(
									[
										elm$html$Html$text('GrandOrder Wiki')
									]))
							])));
			case 1:
				return _List_fromArray(
					[
						A2(author$project$Site$Common$h_, 1, 'Settings'),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$form(_List_Nil),
						A2(
							author$project$StandardLibrary$flip,
							elm$core$List$map,
							author$project$Persist$Preferences$unfoldPreferences(st.aP)),
						function (_n1) {
							var k = _n1.a;
							var v = _n1.b;
							return A2(
								elm$html$Html$p,
								_List_fromArray(
									[
										A3(
										elm$core$Basics$composeL,
										elm$html$Html$Events$onClick,
										author$project$Site$Algebra$SetPref(k),
										!v)
									]),
								A3(
									author$project$Site$Common$checkbox_,
									elm$core$Maybe$Nothing,
									author$project$Class$Show$preference(k),
									v));
						})
					]);
			case 2:
				return _List_fromArray(
					[
						A2(author$project$Site$Common$h_, 1, 'Sort by'),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$form(_List_Nil),
						A2(author$project$StandardLibrary$flip, elm$core$List$map, sorts),
						function (sort) {
							return A2(
								elm$html$Html$p,
								_List_fromArray(
									[
										elm$html$Html$Events$onClick(
										author$project$Site$Algebra$SetSort(sort))
									]),
								A2(
									author$project$Site$Common$radio_,
									author$project$Class$Show$sortBy(sort),
									_Utils_eq(st.a$, sort)));
						})
					]);
			case 3:
				return A3(
					elm$core$Basics$composeR,
					elm$core$List$concatMap(
						author$project$Site$Rendering$filterSection(st)),
					elm$core$List$cons(
						A2(author$project$Site$Common$h_, 1, 'Include')),
					A2(
						elm$core$List$filter,
						A2(
							elm$core$Basics$composeR,
							function ($) {
								return $.C;
							},
							author$project$Site$Base$exclusive),
						st.ai));
			default:
				return _List_fromArray(
					[
						A2(author$project$Site$Common$h_, 1, 'Filter'),
						A2(
						elm$html$Html$form,
						_List_Nil,
						_Utils_ap(
							_List_fromArray(
								[
									A2(
									elm$html$Html$table,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											elm$html$Html$tr,
											_List_Nil,
											_List_fromArray(
												[
													A2(author$project$Site$Common$text_, elm$html$Html$th, 'Match'),
													A2(
													elm$html$Html$td,
													_List_fromArray(
														[
															elm$html$Html$Events$onClick(
															author$project$Site$Algebra$MatchAny(false))
														]),
													A2(author$project$Site$Common$radio_, 'All', !st.aF)),
													A2(
													elm$html$Html$td,
													_List_fromArray(
														[
															elm$html$Html$Events$onClick(
															author$project$Site$Algebra$MatchAny(true))
														]),
													A2(author$project$Site$Common$radio_, 'Any', st.aF))
												]))
										])),
									A3(
									author$project$Site$Common$button_,
									'Reset All',
									!(elm$core$List$isEmpty(st.av) && elm$core$List$isEmpty(st.as)),
									author$project$Site$Algebra$ClearAll)
								]),
							A2(
								elm$core$List$concatMap,
								author$project$Site$Rendering$filterSection(st),
								A2(
									elm$core$List$filter,
									A2(
										elm$core$Basics$composeL,
										A2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$Site$Base$exclusive),
										function ($) {
											return $.C;
										}),
									st.ai))))
					]);
		}
	});
var elm$html$Html$aside = _VirtualDom_node('aside');
var author$project$Site$Rendering$siteView = F4(
	function (st, sorts, nav, content) {
		var _n0 = st.aZ;
		if (!_n0.$) {
			var x = _n0.a;
			return _List_fromArray(
				[
					A2(
					elm$html$Html$div,
					_List_fromArray(
						[
							elm$html$Html$Attributes$id('bg')
						]),
					_List_Nil),
					A2(
					elm$html$Html$aside,
					_List_Nil,
					A2(
						elm$core$List$cons,
						A3(
							author$project$Site$Common$button_,
							'X',
							true,
							author$project$Site$Algebra$ToSection(elm$core$Maybe$Nothing)),
						A4(author$project$Site$Rendering$render, x, st, sorts, nav)))
				]);
		} else {
			var showError = function () {
				var _n1 = st.aq;
				if (_n1.$ === 1) {
					return elm$core$Basics$identity;
				} else {
					var err = _n1.a;
					return elm$core$List$cons(
						A2(
							elm$html$Html$div,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('error')
								]),
							_List_fromArray(
								[
									elm$html$Html$text(err)
								])));
				}
			}();
			var renderSection = function (x) {
				return A4(author$project$Site$Rendering$render, x, st, sorts, nav);
			};
			return showError(
				_List_fromArray(
					[
						A2(
						elm$html$Html$div,
						_List_fromArray(
							[
								elm$html$Html$Attributes$id('bg')
							]),
						_List_Nil),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$footer(_List_Nil),
						A2(author$project$StandardLibrary$flip, elm$core$List$map, author$project$Site$Base$enumSection),
						function (section) {
							return A3(
								elm$core$Basics$composeL,
								A2(
									author$project$Site$Common$button_,
									author$project$Class$Show$section(section),
									true),
								author$project$Site$Algebra$ToSection,
								elm$core$Maybe$Just(section));
						}),
						A2(
						elm$html$Html$aside,
						_List_Nil,
						_Utils_ap(
							_List_fromArray(
								[
									A2(author$project$Site$Common$h_, 1, 'Links'),
									A2(
									elm$html$Html$a,
									_List_fromArray(
										[
											elm$html$Html$Attributes$href('https://www.reddit.com/message/compose/?to=pareidolist')
										]),
									_List_fromArray(
										[
											elm$html$Html$text('Send Feedback/Suggestions')
										])),
									A2(
									elm$html$Html$a,
									_List_fromArray(
										[
											elm$html$Html$Attributes$href('https://github.com/jnbooth/chaldeas')
										]),
									_List_fromArray(
										[
											elm$html$Html$text('GitHub')
										])),
									A2(
									elm$html$Html$a,
									_List_fromArray(
										[
											elm$html$Html$Attributes$href('https://grandorder.wiki')
										]),
									_List_fromArray(
										[
											elm$html$Html$text('GrandOrder Wiki')
										]))
								]),
							_Utils_ap(
								renderSection(1),
								_Utils_ap(
									renderSection(2),
									renderSection(3))))),
						content,
						A2(
						elm$html$Html$aside,
						_List_Nil,
						A2(
							elm$core$List$cons,
							A2(author$project$Site$Common$h_, 1, 'Browse'),
							_Utils_ap(
								nav,
								renderSection(4))))
					]));
		}
	});
var author$project$Persist$Flags$encodePreferences = function () {
	var encodePref = function (x) {
		return A2(
			elm_community$list_extra$List$Extra$find,
			A2(
				elm$core$Basics$composeR,
				author$project$Persist$Preferences$ordPreference,
				elm$core$Basics$eq(x)),
			author$project$Persist$Preferences$enumPreference);
	};
	return A2(
		elm$core$Basics$composeR,
		elm$core$Set$toList,
		A2(
			elm$core$Basics$composeR,
			elm$core$List$map(encodePref),
			A2(
				elm$core$Basics$composeR,
				elm_community$maybe_extra$Maybe$Extra$values,
				A2(
					elm$core$Basics$composeR,
					elm$core$List$map(author$project$Class$Show$preference),
					elm$json$Json$Encode$list(elm$json$Json$Encode$string)))));
}();
var author$project$Persist$Flags$storePreferences = function (store) {
	return A2(
		elm$core$Basics$composeR,
		author$project$Persist$Flags$encodePreferences,
		store('preferences'));
};
var elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;
var elm$core$Task$onError = _Scheduler_onError;
var elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return elm$core$Task$command(
			A2(
				elm$core$Task$onError,
				A2(
					elm$core$Basics$composeL,
					A2(elm$core$Basics$composeL, elm$core$Task$succeed, resultToMessage),
					elm$core$Result$Err),
				A2(
					elm$core$Task$andThen,
					A2(
						elm$core$Basics$composeL,
						A2(elm$core$Basics$composeL, elm$core$Task$succeed, resultToMessage),
						elm$core$Result$Ok),
					task)));
	});
var author$project$Site$Common$scrollToTop = function (id) {
	return A2(
		elm$core$Task$attempt,
		elm$core$Basics$always(author$project$Site$Algebra$DoNothing),
		A3(elm$browser$Browser$Dom$setViewportOf, id, 0, 0));
};
var elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);
var author$project$StandardLibrary$pure = function (x) {
	return _Utils_Tuple2(x, elm$core$Platform$Cmd$none);
};
var author$project$StandardLibrary$removeWith = F3(
	function (eq, x, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var y = xs.a;
			var ys = xs.b;
			return A2(eq, x, y) ? ys : A2(
				elm$core$List$cons,
				y,
				A3(author$project$StandardLibrary$removeWith, eq, x, ys));
		}
	});
var author$project$Site$Update$siteUpdate = F6(
	function (store, transform, show, reSort, msg, st) {
		var toggleIn = F2(
			function (x, xs) {
				return A2(
					elm$core$List$any,
					author$project$Site$Algebra$eqFilter(x),
					xs) ? A3(author$project$StandardLibrary$removeWith, author$project$Site$Algebra$eqFilter, x, xs) : A2(elm$core$List$cons, x, xs);
			});
		var relist = author$project$Site$Filtering$updateListing(transform);
		var goUp = function (x) {
			return _Utils_Tuple2(
				x,
				author$project$Site$Common$scrollToTop('content'));
		};
		switch (msg.$) {
			case 0:
				var section = msg.a;
				return author$project$StandardLibrary$pure(
					_Utils_update(
						st,
						{aZ: section}));
			case 2:
				return goUp(
					relist(
						_Utils_update(
							st,
							{as: _List_Nil, av: _List_Nil})));
			case 3:
				if (msg.b) {
					var t = msg.a;
					return goUp(
						_Utils_update(
							st,
							{
								as: A2(
									elm$core$List$filter,
									A2(
										elm$core$Basics$composeR,
										function ($) {
											return $.C;
										},
										elm$core$Basics$neq(t)),
									st.as)
							}));
				} else {
					var t = msg.a;
					var filters = A3(
						elm$core$Basics$composeR,
						elm$core$Maybe$map(
							function ($) {
								return $.av;
							}),
						elm$core$Maybe$withDefault(_List_Nil),
						A2(
							elm_community$list_extra$List$Extra$find,
							A2(
								elm$core$Basics$composeR,
								function ($) {
									return $.C;
								},
								elm$core$Basics$eq(t)),
							st.ai));
					return goUp(
						_Utils_update(
							st,
							{
								as: A2(
									elm_community$list_extra$List$Extra$uniqueBy,
									author$project$Site$Algebra$ordFilter,
									_Utils_ap(filters, st.as))
							}));
				}
			case 7:
				var sortBy = msg.a;
				return A3(
					elm$core$Basics$composeL,
					goUp,
					relist,
					reSort(
						_Utils_update(
							st,
							{a$: sortBy})));
			case 6:
				var matchAny = msg.a;
				return goUp(
					relist(
						_Utils_update(
							st,
							{aF: matchAny})));
			case 1:
				var focus = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						st,
						{aw: focus}),
					A3(
						author$project$Site$Common$setFocus,
						st.aJ,
						st.aX,
						A2(
							elm$core$Maybe$map,
							A2(elm$core$Basics$composeR, transform, show),
							focus)));
			case 4:
				var filters = msg.a;
				var resetPath = function (_n1) {
					var x = _n1.a;
					var y = _n1.b;
					return _Utils_Tuple2(
						x,
						elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									y,
									A2(
									author$project$Site$Common$setPath,
									st.aJ,
									_List_fromArray(
										[st.aX]))
								])));
				};
				return A3(
					elm$core$Basics$composeL,
					A2(elm$core$Basics$composeL, resetPath, goUp),
					relist,
					A2(
						elm$core$List$any,
						A2(
							elm$core$Basics$composeR,
							function ($) {
								return $.C;
							},
							author$project$Site$Base$exclusive),
						filters) ? _Utils_update(
						st,
						{as: filters, av: _List_Nil, aw: elm$core$Maybe$Nothing}) : _Utils_update(
						st,
						{as: _List_Nil, av: filters, aw: elm$core$Maybe$Nothing}));
			case 8:
				var k = msg.a;
				var v = msg.b;
				var prefs = A3(author$project$Persist$Preferences$setPreference, k, v, st.aP);
				return _Utils_Tuple2(
					relist(
						reSort(
							_Utils_update(
								st,
								{aP: prefs}))),
					A2(author$project$Persist$Flags$storePreferences, store, prefs));
			case 5:
				var filter = msg.a;
				return A3(
					elm$core$Basics$composeL,
					goUp,
					relist,
					author$project$Site$Base$exclusive(filter.C) ? _Utils_update(
						st,
						{
							as: A2(toggleIn, filter, st.as)
						}) : _Utils_update(
						st,
						{
							av: A2(toggleIn, filter, st.av)
						}));
			case 9:
				return author$project$StandardLibrary$pure(st);
			case 10:
				return author$project$StandardLibrary$pure(st);
			case 11:
				return author$project$StandardLibrary$pure(st);
			case 12:
				return author$project$StandardLibrary$pure(st);
			default:
				return author$project$StandardLibrary$pure(st);
		}
	});
var elm$html$Html$strong = _VirtualDom_node('strong');
var elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var elm$html$Html$Keyed$node = elm$virtual_dom$VirtualDom$keyedNode;
var author$project$Site$CraftEssence$Component$component = function (store) {
	var update = A4(
		author$project$Site$Update$siteUpdate,
		store,
		elm$core$Basics$identity,
		function ($) {
			return $.bI;
		},
		author$project$Site$CraftEssence$Component$reSort);
	var unlazyView = F3(
		function (prefs, listing, sortBy) {
			return A3(
				elm$core$Basics$composeR,
				A2(author$project$StandardLibrary$doIf, sortBy, elm$core$List$reverse),
				A2(
					elm$html$Html$Keyed$node,
					'section',
					_List_fromArray(
						[
							elm$html$Html$Attributes$id('content')
						])),
				A2(
					elm$core$List$map,
					A2(author$project$Site$CraftEssence$Component$keyedPortrait, false, prefs),
					listing));
		});
	var view = function (st) {
		var nav = _List_fromArray(
			[
				A2(author$project$Site$Common$text_, elm$html$Html$strong, 'Craft Essences'),
				A2(
				author$project$Site$Common$a_,
				'Servants',
				author$project$Site$Algebra$Switch(elm$core$Maybe$Nothing))
			]);
		return A3(
			elm$core$Basics$composeR,
			A3(
				author$project$Site$Rendering$siteView,
				st,
				_List_fromArray(
					[0, 1, 2, 3]),
				nav),
			A2(author$project$Site$CraftEssence$Component$popup, st.aP, st.aw),
			A4(elm$html$Html$Lazy$lazy3, unlazyView, st.aP, st.aE, st.a$));
	};
	var init = F2(
		function (flags, navKey) {
			return A3(
				elm$core$Basics$composeR,
				author$project$Site$CraftEssence$Component$reSort,
				A2(
					elm$core$Basics$composeR,
					author$project$Site$Filtering$updateListing(elm$core$Basics$identity),
					function (st) {
						return _Utils_update(
							st,
							{aX: 'CraftEssences'});
					}),
				A4(
					author$project$Site$Algebra$siteInit,
					author$project$Site$Filtering$collectFilters(author$project$Site$CraftEssence$Filters$getFilters),
					flags,
					navKey,
					0));
		});
	return {bD: init, cb: update, ce: view};
};
var author$project$Database$Servant$getAscensions = function (_n0) {
	var ascendUp = _n0.aj;
	if (ascendUp.$ === 2) {
		var a = ascendUp.a;
		var b = ascendUp.b;
		var c = ascendUp.c;
		var d = ascendUp.d;
		return _List_fromArray(
			[a, b, c, d]);
	} else {
		return _List_Nil;
	}
};
var author$project$Database$Base$CrystallizedLore = {$: 0};
var author$project$Database$Base$QP = {$: 6};
var author$project$Database$Base$enumMaterial = _Utils_ap(
	_List_fromArray(
		[author$project$Database$Base$CrystallizedLore]),
	_Utils_ap(
		A2(elm$core$List$map, author$project$Database$Base$Piece, author$project$Database$Base$enumClass),
		_Utils_ap(
			A2(elm$core$List$map, author$project$Database$Base$Monument, author$project$Database$Base$enumClass),
			_Utils_ap(
				A2(elm$core$List$map, author$project$Database$Base$GemOf, author$project$Database$Base$enumClass),
				_Utils_ap(
					A2(elm$core$List$map, author$project$Database$Base$MagicGemOf, author$project$Database$Base$enumClass),
					_Utils_ap(
						A2(elm$core$List$map, author$project$Database$Base$SecretGemOf, author$project$Database$Base$enumClass),
						_List_fromArray(
							[author$project$Database$Base$QP, author$project$Database$Base$BlackBeastGrease, author$project$Database$Base$ClawOfChaos, author$project$Database$Base$DragonFang, author$project$Database$Base$DragonsReverseScale, author$project$Database$Base$EternalGear, author$project$Database$Base$EvilBone, author$project$Database$Base$FoolsChain, author$project$Database$Base$ForbiddenPage, author$project$Database$Base$GhostLantern, author$project$Database$Base$GreatKnightMedal, author$project$Database$Base$HeartOfTheForeignGod, author$project$Database$Base$HomunculusBaby, author$project$Database$Base$LampOfEvilSealing, author$project$Database$Base$MeteorHorseshoe, author$project$Database$Base$OctupletCrystals, author$project$Database$Base$PhoenixFeather, author$project$Database$Base$ProofOfHero, author$project$Database$Base$ScarabOfWisdom, author$project$Database$Base$SeedOfYggdrasil, author$project$Database$Base$SerpentJewel, author$project$Database$Base$ShellOfReminiscence, author$project$Database$Base$SpiritRoot, author$project$Database$Base$TearstoneOfBlood, author$project$Database$Base$VoidsDust, author$project$Database$Base$WarhorsesYoungHorn])))))));
var author$project$Database$Base$ordMaterial = author$project$StandardLibrary$enumToOrd(author$project$Database$Base$enumMaterial);
var author$project$Database$Servant$reduceMats = function () {
	var reduce = function (_n0) {
		var _n1 = _n0.a;
		var x = _n1.a;
		var y = _n1.b;
		var xs = _n0.b;
		return _Utils_Tuple2(
			x,
			elm$core$List$sum(
				A2(
					elm$core$List$cons,
					y,
					A2(elm$core$List$map, elm$core$Tuple$second, xs))));
	};
	return A2(
		elm$core$Basics$composeR,
		elm$core$List$concat,
		A2(
			elm$core$Basics$composeR,
			elm$core$List$sortBy(
				A2(elm$core$Basics$composeR, elm$core$Tuple$first, author$project$Database$Base$ordMaterial)),
			A2(
				elm$core$Basics$composeR,
				elm_community$list_extra$List$Extra$groupWhile(
					A2(author$project$StandardLibrary$on, elm$core$Basics$eq, elm$core$Tuple$first)),
				elm$core$List$map(reduce))));
}();
var author$project$MyServant$Leveling$atAscension = function (_n0) {
	var level = _n0.H;
	var base = _n0.bb;
	var _n1 = base.aU;
	switch (_n1) {
		case 5:
			return (level <= 50) ? 0 : ((level <= 60) ? 1 : ((level <= 70) ? 2 : ((level <= 80) ? 3 : 4)));
		case 4:
			return (level <= 40) ? 0 : ((level <= 50) ? 1 : ((level <= 60) ? 2 : ((level <= 70) ? 3 : 4)));
		case 3:
			return (level <= 30) ? 0 : ((level <= 40) ? 1 : ((level <= 50) ? 2 : ((level <= 60) ? 3 : 4)));
		case 1:
			return (level <= 20) ? 0 : ((level <= 30) ? 1 : ((level <= 40) ? 2 : ((level <= 50) ? 3 : 4)));
		default:
			return (level <= 25) ? 0 : ((level <= 35) ? 1 : ((level <= 45) ? 2 : ((level <= 55) ? 3 : 4)));
	}
};
var author$project$MyServant$Leveling$ascendWishlist = function (xs) {
	return A3(
		elm$core$Basics$composeL,
		author$project$Database$Servant$reduceMats,
		A2(author$project$StandardLibrary$flip, elm$core$List$concatMap, xs),
		function (ms) {
			return A2(
				elm$core$List$drop,
				author$project$MyServant$Leveling$atAscension(ms),
				author$project$Database$Servant$getAscensions(ms.bb));
		});
};
var author$project$Database$Servant$getReinforcements = function (_n0) {
	var skillUp = _n0.a_;
	var _n1 = skillUp;
	var a = _n1.a;
	var b = _n1.b;
	var c = _n1.c;
	var d = _n1.d;
	var e = _n1.e;
	var f = _n1.f;
	var g = _n1.g;
	var h = _n1.h;
	return _List_fromArray(
		[
			a,
			b,
			c,
			d,
			e,
			f,
			g,
			h,
			_List_fromArray(
			[
				_Utils_Tuple2(author$project$Database$Base$CrystallizedLore, 1)
			])
		]);
};
var author$project$MyServant$Leveling$skillWishlist = function (xs) {
	var bind = author$project$StandardLibrary$flip(elm$core$List$concatMap);
	return A3(
		elm$core$Basics$composeL,
		author$project$Database$Servant$reduceMats,
		bind(xs),
		function (ms) {
			var reinforce = author$project$Database$Servant$getReinforcements(ms.bb);
			return A2(
				bind,
				ms.b0,
				function (skillLvl) {
					return A2(elm$core$List$drop, skillLvl - 1, reinforce);
				});
		});
};
var author$project$Persist$Flags$encodeServant = A2(
	elm$core$Basics$composeR,
	function ($) {
		return $.bI;
	},
	elm$json$Json$Encode$string);
var author$project$Persist$Flags$encodeStat = function (stat) {
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'atk',
				elm$json$Json$Encode$int(stat.a9)),
				_Utils_Tuple2(
				'hp',
				elm$json$Json$Encode$int(stat.bA))
			]));
};
var author$project$Persist$Flags$encodeMyServant = function (ms) {
	return elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'level',
				elm$json$Json$Encode$int(ms.H)),
				_Utils_Tuple2(
				'fou',
				author$project$Persist$Flags$encodeStat(ms.R)),
				_Utils_Tuple2(
				'skills',
				A2(elm$json$Json$Encode$list, elm$json$Json$Encode$int, ms.b0)),
				_Utils_Tuple2(
				'npLvl',
				elm$json$Json$Encode$int(ms.y)),
				_Utils_Tuple2(
				'ascent',
				elm$json$Json$Encode$int(ms.Z)),
				_Utils_Tuple2(
				'servant',
				author$project$Persist$Flags$encodeServant(ms.J))
			]));
};
var author$project$Persist$Flags$encodeTeam = A2(
	elm$core$Basics$composeR,
	elm$core$Dict$toList,
	A2(
		elm$core$Basics$composeR,
		elm$core$List$map(elm$core$Tuple$second),
		elm$json$Json$Encode$list(author$project$Persist$Flags$encodeMyServant)));
var author$project$Persist$Flags$storeTeam = function (store) {
	return A2(
		elm$core$Basics$composeR,
		author$project$Persist$Flags$encodeTeam,
		store('team'));
};
var author$project$Site$Algebra$MineOnly = function (a) {
	return {$: 11, a: a};
};
var author$project$Site$Algebra$OnTeam = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var author$project$Site$Servant$Component$isMine = function (_n0) {
	var ms = _n0.b;
	return ms.H;
};
var author$project$Class$ToImage$class = A2(
	elm$core$Basics$composeL,
	author$project$Class$ToImage$ImagePath('Class'),
	author$project$Class$Show$class);
var author$project$Class$ToImage$servant = A2(
	elm$core$Basics$composeL,
	author$project$Class$ToImage$ImagePath('Servant'),
	function ($) {
		return $.bI;
	});
var author$project$Site$Algebra$Ascend = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var author$project$Site$Servant$Component$portrait = F4(
	function (big, prefs, baseAscension, _n0) {
		var label = _n0.a;
		var ms = _n0.b;
		if ((!big) && A2(author$project$Persist$Preferences$prefer, prefs, 2)) {
			return A2(
				elm$html$Html$div,
				_List_fromArray(
					[
						elm$html$Html$Attributes$class('thumb'),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$Events$onClick,
						author$project$Site$Algebra$Focus,
						elm$core$Maybe$Just(ms))
					]),
				_List_fromArray(
					[
						author$project$Class$ToImage$thumbnail(
						author$project$Class$ToImage$servant(ms.bb))
					]));
		} else {
			var noBreak = A2(
				author$project$Site$Common$noBreakName,
				big,
				A2(author$project$Persist$Preferences$prefer, prefs, 7));
			var meta = A3(
				author$project$StandardLibrary$doIf,
				!big,
				elm$core$List$cons(
					A3(
						elm$core$Basics$composeL,
						elm$html$Html$Events$onClick,
						author$project$Site$Algebra$Focus,
						elm$core$Maybe$Just(ms))),
				_List_fromArray(
					[
						elm$html$Html$Attributes$class(
						'portrait stars' + elm$core$String$fromInt(ms.bb.aU))
					]));
			var ascension = ms.H ? ms.Z : baseAscension;
			var ascent = (ascension <= 1) ? '' : (' ' + elm$core$String$fromInt(ascension));
			var artorify = A2(
				author$project$StandardLibrary$doIf,
				A2(author$project$Persist$Preferences$prefer, prefs, 0),
				A2(elm$core$String$replace, 'Altria', 'Artoria'));
			var addLabel = A2(
				author$project$StandardLibrary$doIf,
				label !== '',
				elm$core$Basics$append(
					_List_fromArray(
						[
							A2(
							author$project$Site$Common$text_,
							elm$html$Html$span,
							noBreak(label)),
							A2(elm$html$Html$br, _List_Nil, _List_Nil)
						])));
			return A2(
				elm$html$Html$div,
				meta,
				_List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Class$ToImage$image,
						author$project$Class$ToImage$ImagePath('Servant'),
						_Utils_ap(ms.bb.bI, ascent)),
						A2(
						elm$html$Html$div,
						_List_Nil,
						_List_fromArray(
							[
								author$project$Class$ToImage$image(
								author$project$Class$ToImage$class(ms.bb.bi))
							])),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$header(_List_Nil),
						addLabel,
						_List_fromArray(
							[
								A3(
								elm$core$Basics$composeL,
								author$project$Site$Common$text_(elm$html$Html$span),
								noBreak,
								artorify(ms.bb.bI))
							])),
						big ? A2(
						elm$html$Html$footer,
						_List_Nil,
						_List_fromArray(
							[
								A3(
								elm$core$Basics$composeL,
								A2(author$project$Site$Common$button_, '<', ascension > 1),
								author$project$Site$Algebra$Ascend(ms),
								ascension - 1),
								A2(
								author$project$Site$Common$text_,
								elm$html$Html$span,
								A2(author$project$Printing$stars, true, ms.bb.aU)),
								A3(
								elm$core$Basics$composeL,
								A2(author$project$Site$Common$button_, '>', ascension < 4),
								author$project$Site$Algebra$Ascend(ms),
								ascension + 1)
							])) : A2(
						elm$html$Html$footer,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								author$project$Site$Common$text_,
								elm$html$Html$span,
								A2(author$project$Printing$stars, true, ms.bb.aU))
							]))
					]));
		}
	});
var elm$virtual_dom$VirtualDom$lazy4 = _VirtualDom_lazy4;
var elm$html$Html$Lazy$lazy4 = elm$virtual_dom$VirtualDom$lazy4;
var author$project$Site$Servant$Component$keyedPortrait = F4(
	function (big, prefs, baseAscension, _n0) {
		var label = _n0.a;
		var ms = _n0.b;
		return _Utils_Tuple2(
			ms.bb.bI,
			A5(
				elm$html$Html$Lazy$lazy4,
				author$project$Site$Servant$Component$portrait,
				big,
				prefs,
				baseAscension,
				_Utils_Tuple2(label, ms)));
	});
var author$project$Class$Show$material = function (a) {
	switch (a.$) {
		case 0:
			return 'Crystallized Lore';
		case 1:
			var c = a.a;
			return author$project$Class$Show$class(c) + ' Piece';
		case 2:
			var c = a.a;
			return author$project$Class$Show$class(c) + ' Monument';
		case 3:
			var c = a.a;
			return 'Gem of ' + author$project$Class$Show$class(c);
		case 4:
			var c = a.a;
			return 'Magic Gem of ' + author$project$Class$Show$class(c);
		case 5:
			var c = a.a;
			return 'Secret Gem of ' + author$project$Class$Show$class(c);
		case 6:
			return 'QP';
		case 7:
			return 'Black Beast Grease';
		case 8:
			return 'Claw of Chaos';
		case 9:
			return 'Dragon Fang';
		case 10:
			return 'Dragon\'s Reverse Scale';
		case 11:
			return 'Eternal Gear';
		case 12:
			return 'Evil Bone';
		case 13:
			return 'Fool\'s Chain';
		case 14:
			return 'Forbidden Page';
		case 15:
			return 'Ghost Lantern';
		case 16:
			return 'Great Knight Medal';
		case 17:
			return 'Heart of the Foreign God';
		case 18:
			return 'Homunculus Baby';
		case 19:
			return 'Lamp of Evil-Sealing';
		case 20:
			return 'Meteor Horseshoe';
		case 21:
			return 'Octuplet Crystals';
		case 22:
			return 'Phoenix Feather';
		case 23:
			return 'Proof of Hero';
		case 24:
			return 'Scarab of Wisdom';
		case 25:
			return 'Seed of Yggdrasil';
		case 26:
			return 'Serpent Jewel';
		case 27:
			return 'Shell of Reminiscence';
		case 28:
			return 'Spirit Root';
		case 29:
			return 'Tearstone of Blood';
		case 30:
			return 'Void\'s Dust';
		default:
			return 'Warhorse\'s Young Horn';
	}
};
var author$project$Database$Base$ignoreMat = function (a) {
	switch (a.$) {
		case 0:
			return true;
		case 1:
			return true;
		case 2:
			return true;
		case 3:
			return true;
		case 4:
			return true;
		case 5:
			return true;
		case 6:
			return true;
		default:
			return false;
	}
};
var author$project$Database$Servant$getMaterials = function (s) {
	return A3(
		elm$core$Basics$composeR,
		elm$core$List$concat,
		A2(
			elm$core$Basics$composeR,
			elm$core$List$map(elm$core$Tuple$first),
			elm_community$list_extra$List$Extra$uniqueBy(author$project$Database$Base$ordMaterial)),
		_Utils_ap(
			author$project$Database$Servant$getAscensions(s),
			author$project$Database$Servant$getReinforcements(s)));
};
var author$project$Class$Has$material = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$material),
	elm$core$Basics$always,
	A2(
		elm$core$Basics$composeR,
		author$project$Database$Servant$getMaterials,
		elm$core$List$filter(
			A2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$Database$Base$ignoreMat))));
var author$project$Class$ToImage$link = F2(
	function (href, _n0) {
		var dir = _n0.P;
		var file = _n0.Q;
		return A2(
			elm$html$Html$img,
			_List_fromArray(
				[
					elm$html$Html$Attributes$src(
					'/chaldeas/img/' + (dir + ('/' + (author$project$Printing$fileName(file) + '.png')))),
					elm$html$Html$Attributes$title(
					author$project$Printing$unCamel(file)),
					elm$html$Html$Attributes$class('link'),
					elm$html$Html$Events$onClick(href)
				]),
			_List_Nil);
	});
var author$project$Class$ToImage$material = A2(
	elm$core$Basics$composeL,
	author$project$Class$ToImage$ImagePath('Material'),
	author$project$Class$Show$material);
var author$project$Database$getAll = author$project$Database$genericGetAll(author$project$Database$servants);
var elm_community$list_extra$List$Extra$remove = F2(
	function (x, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var y = xs.a;
			var ys = xs.b;
			return _Utils_eq(x, y) ? ys : A2(
				elm$core$List$cons,
				y,
				A2(elm_community$list_extra$List$Extra$remove, x, ys));
		}
	});
var author$project$Site$Servant$Filters$singleFilter = F3(
	function (has, tab, x) {
		return author$project$Site$Base$exclusive(tab) ? A3(
			elm$core$Basics$composeR,
			elm_community$list_extra$List$Extra$remove(x),
			elm$core$List$map(
				A3(author$project$Site$Filtering$matchFilter, elm$core$Maybe$Nothing, has, tab)),
			author$project$Database$getAll(has)) : _List_fromArray(
			[
				A4(author$project$Site$Filtering$matchFilter, elm$core$Maybe$Nothing, has, tab, x)
			]);
	});
var author$project$Site$Servant$Component$materialEl = function (_n0) {
	var mat = _n0.a;
	var amt = _n0.b;
	var imageLinkEl = author$project$Database$Base$ignoreMat(mat) ? author$project$Class$ToImage$image : author$project$Class$ToImage$link(
		author$project$Site$Algebra$FilterBy(
			A3(author$project$Site$Servant$Filters$singleFilter, author$project$Class$Has$material, author$project$Site$Base$FilterMaterial, mat)));
	return A2(
		elm$html$Html$div,
		_List_Nil,
		_List_fromArray(
			[
				imageLinkEl(
				author$project$Class$ToImage$material(mat)),
				A2(
				author$project$Site$Common$text_,
				elm$html$Html$span,
				'×' + author$project$Printing$commas(amt))
			]));
};
var author$project$Class$Has$alignment = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$alignment),
	elm$core$Basics$always,
	function ($) {
		return $.a6;
	});
var author$project$Class$Has$attribute = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$attribute),
	elm$core$Basics$always,
	A2(
		elm$core$Basics$composeR,
		function ($) {
			return $.ba;
		},
		elm$core$List$singleton));
var author$project$Class$Has$card = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$card),
	elm$core$Basics$always,
	A2(
		elm$core$Basics$composeR,
		function ($) {
			return $.T;
		},
		A2(
			elm$core$Basics$composeR,
			function ($) {
				return $.bf;
			},
			elm$core$List$singleton)));
var author$project$Class$Has$class = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$class),
	elm$core$Basics$always,
	A2(
		elm$core$Basics$composeR,
		function ($) {
			return $.bi;
		},
		elm$core$List$singleton));
var author$project$Class$Show$deck = function (_n0) {
	var a = _n0.a;
	var b = _n0.b;
	var c = _n0.c;
	var d = _n0.d;
	var e = _n0.e;
	return A3(
		elm$core$Basics$composeR,
		elm$core$List$map(
			A2(
				elm$core$Basics$composeR,
				author$project$Class$Show$card,
				elm$core$String$left(1))),
		elm$core$String$concat,
		_List_fromArray(
			[a, b, c, d, e]));
};
var author$project$Class$Has$deck = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$deck),
	elm$core$Basics$always,
	A2(
		elm$core$Basics$composeR,
		function ($) {
			return $.bo;
		},
		elm$core$List$singleton));
var author$project$Class$Show$phantasmType = function (a) {
	switch (a) {
		case 0:
			return 'Single-Target';
		case 1:
			return 'Multi-Target';
		default:
			return 'Support';
	}
};
var author$project$Database$Servant$MultiTarget = 1;
var author$project$Database$Servant$SingleTarget = 0;
var author$project$Database$Servant$Support = 2;
var author$project$Database$Servant$phantasmType = function (np) {
	var match = F2(
		function (target, a) {
			_n0$3:
			while (true) {
				if (a.$ === 2) {
					switch (a.b.$) {
						case 5:
							var x = a.a;
							var _n1 = a.b;
							return _Utils_eq(x, target);
						case 6:
							var x = a.a;
							var _n2 = a.b;
							return _Utils_eq(x, target);
						case 1:
							var x = a.a;
							var _n3 = a.b;
							return _Utils_eq(x, target);
						default:
							break _n0$3;
					}
				} else {
					break _n0$3;
				}
			}
			return false;
		});
	var effects = _Utils_ap(np.ao, np.bS);
	return A2(
		elm$core$List$any,
		match(author$project$Database$Skill$Enemy),
		effects) ? 0 : (A2(
		elm$core$List$any,
		match(author$project$Database$Skill$Enemies),
		effects) ? 1 : 2);
};
var author$project$Class$Has$phantasmType = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$phantasmType),
	elm$core$Basics$always,
	A2(
		elm$core$Basics$composeR,
		function ($) {
			return $.T;
		},
		A2(elm$core$Basics$composeR, author$project$Database$Servant$phantasmType, elm$core$List$singleton)));
var author$project$Class$Has$servant = function (s) {
	return _Utils_ap(
		s.T.ao,
		_Utils_ap(
			s.T.bS,
			A2(
				elm$core$List$concatMap,
				function ($) {
					return $.ao;
				},
				s.b0)));
};
var author$project$Class$Has$trait = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(author$project$Class$Show$trait),
	elm$core$Basics$always,
	function ($) {
		return $.ca;
	});
var author$project$Database$Skill$RangeInfo = F3(
	function (percent, min, max) {
		return {bG: max, bH: min, bU: percent};
	});
var author$project$Database$ranges = function () {
	var isPercent = A2(
		elm$core$Basics$composeR,
		author$project$Class$Show$skillEffect,
		elm$core$String$contains('%'));
	var info = F2(
		function (isPerc, _n2) {
			var from = _n2._;
			var to = _n2.ag;
			return A3(author$project$Database$Skill$RangeInfo, isPerc, from, to);
		});
	var go = function (a) {
		if (a.$ === 3) {
			var x = a.a;
			var y = a.b;
			return _List_fromArray(
				[
					{_: x, ag: y}
				]);
		} else {
			return _List_Nil;
		}
	};
	var acc = function (a) {
		acc:
		while (true) {
			switch (a.$) {
				case 0:
					var x = a.d;
					return go(x);
				case 1:
					var x = a.d;
					return go(x);
				case 2:
					var x = a.c;
					return go(x);
				case 3:
					var x = a.c;
					return go(x);
				case 4:
					var ef = a.b;
					var $temp$a = ef;
					a = $temp$a;
					continue acc;
				case 5:
					var x = a.a;
					var y = a.b;
					var ef = a.c;
					return A2(
						elm$core$List$cons,
						{_: x, ag: y},
						acc(ef));
				case 6:
					var ef = a.b;
					var $temp$a = ef;
					a = $temp$a;
					continue acc;
				case 7:
					var ef = a.b;
					var $temp$a = ef;
					a = $temp$a;
					continue acc;
				default:
					var ef = a.b;
					var $temp$a = ef;
					a = $temp$a;
					continue acc;
			}
		}
	};
	var toInfo = function (ef) {
		return A2(
			elm$core$List$map,
			info(
				isPercent(ef)),
			acc(ef));
	};
	return elm$core$List$concatMap(toInfo);
}();
var author$project$Database$Skill$ordRangeInfo = function (r) {
	return r.bG;
};
var author$project$MyServant$newServant = function (s) {
	return {
		Z: 1,
		bb: s,
		R: {a9: 0, bA: 0},
		H: 1,
		y: 1,
		J: s,
		b0: _List_fromArray(
			[1, 1, 1]),
		V: elm$core$Dict$empty
	};
};
var author$project$MyServant$Leveling$ascendCost = function (_n0) {
	var name = _n0.bI;
	var rarity = _n0.aU;
	var costs = elm$core$Array$fromList(
		function () {
			switch (rarity) {
				case 1:
					return _List_fromArray(
						[10, 30, 90, 300]);
				case 3:
					return _List_fromArray(
						[30, 100, 300, 900]);
				case 4:
					return _List_fromArray(
						[50, 150, 500, 1500]);
				case 5:
					return _List_fromArray(
						[100, 300, 1000, 3000]);
				default:
					return _List_fromArray(
						[15, 45, 150, 450]);
			}
		}());
	if (name === 'Mash Kyrielight') {
		return elm$core$Basics$always(0);
	} else {
		return A2(
			elm$core$Basics$composeR,
			A2(author$project$StandardLibrary$flip, elm$core$Array$get, costs),
			A2(
				elm$core$Basics$composeR,
				elm$core$Maybe$withDefault(0),
				elm$core$Basics$mul(1000)));
	}
};
var author$project$MyServant$Leveling$skillCost = function (_n0) {
	var rarity = _n0.aU;
	var costs = elm$core$Array$fromList(
		function () {
			switch (rarity) {
				case 1:
					return _List_fromArray(
						[10, 20, 60, 80, 200, 250, 500, 600, 1000]);
				case 3:
					return _List_fromArray(
						[50, 100, 300, 400, 1000, 1250, 2500, 3000, 5000]);
				case 4:
					return _List_fromArray(
						[100, 200, 600, 800, 2000, 2500, 5000, 6000, 10000]);
				case 5:
					return _List_fromArray(
						[200, 400, 1200, 1600, 4000, 5000, 10000, 12000, 20000]);
				default:
					return _List_fromArray(
						[20, 40, 120, 160, 400, 500, 1000, 1200, 2000]);
			}
		}());
	return A2(
		elm$core$Basics$composeR,
		A2(author$project$StandardLibrary$flip, elm$core$Array$get, costs),
		A2(
			elm$core$Basics$composeR,
			elm$core$Maybe$withDefault(0),
			elm$core$Basics$mul(1000)));
};
var elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 1, a: a};
};
var elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			elm$virtual_dom$VirtualDom$on,
			event,
			elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);
	});
var elm$html$Html$Events$targetValue = A2(
	elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	elm$json$Json$Decode$string);
var author$project$Site$Common$onChange = function (tagger) {
	return A3(
		elm$core$Basics$composeL,
		elm$html$Html$Events$stopPropagationOn('change'),
		elm$json$Json$Decode$map(
			function (x) {
				return _Utils_Tuple2(x, true);
			}),
		A2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$targetValue));
};
var elm$html$Html$Attributes$max = elm$html$Html$Attributes$stringProperty('max');
var elm$html$Html$Attributes$min = elm$html$Html$Attributes$stringProperty('min');
var elm$html$Html$Attributes$step = function (n) {
	return A2(elm$html$Html$Attributes$stringProperty, 'step', n);
};
var elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');
var author$project$Site$Common$int_ = F4(
	function (minVal, maxVal, actualVal, changed) {
		return _List_fromArray(
			[
				A2(
				elm$html$Html$input,
				_List_fromArray(
					[
						elm$html$Html$Attributes$type_('number'),
						elm$html$Html$Attributes$value(
						elm$core$String$fromInt(actualVal)),
						elm$html$Html$Attributes$min(
						elm$core$String$fromInt(minVal)),
						elm$html$Html$Attributes$max(
						elm$core$String$fromInt(maxVal)),
						elm$html$Html$Attributes$step(
						elm$core$String$fromInt(1)),
						author$project$Site$Common$onChange(
						function (val) {
							var _n0 = elm$core$String$toInt(val);
							if (_n0.$ === 1) {
								return author$project$Site$Algebra$DoNothing;
							} else {
								var intVal = _n0.a;
								return ((_Utils_cmp(intVal, minVal) > -1) && (_Utils_cmp(intVal, maxVal) < 1)) ? changed(intVal) : author$project$Site$Algebra$DoNothing;
							}
						})
					]),
				_List_Nil)
			]);
	});
var author$project$Site$Common$tr_ = F2(
	function (th, td) {
		return A2(
			elm$html$Html$tr,
			_List_Nil,
			_List_fromArray(
				[
					A2(author$project$Site$Common$text_, elm$html$Html$th, th),
					A2(elm$html$Html$td, _List_Nil, td)
				]));
	});
var author$project$Site$Servant$Component$ascendUpEl = function (x) {
	switch (x.$) {
		case 1:
			var a = x.a;
			var b = x.b;
			var c = x.c;
			var d = x.d;
			return A3(
				author$project$StandardLibrary$flip,
				elm$core$List$map,
				_List_fromArray(
					[a, b, c, d]),
				A2(
					elm$core$Basics$composeR,
					elm$core$Basics$append('Clear'),
					A2(elm$core$Basics$composeR, elm$html$Html$text, elm$core$List$singleton)));
		case 0:
			var a = x.a;
			return A3(
				elm$core$Basics$composeR,
				author$project$Class$ToImage$image,
				A2(
					elm$core$Basics$composeR,
					elm$core$List$singleton,
					elm$core$List$repeat(4)),
				A2(author$project$Class$ToImage$ImagePath, 'Material', a));
		default:
			var a = x.a;
			var b = x.b;
			var c = x.c;
			var d = x.d;
			return A2(
				elm$core$List$map,
				elm$core$List$map(author$project$Site$Servant$Component$materialEl),
				_List_fromArray(
					[a, b, c, d]));
	}
};
var author$project$Site$Servant$Component$bondEl = function (a) {
	if (a.$ === 1) {
		return _List_Nil;
	} else {
		var ce = a.a;
		return _List_fromArray(
			[
				A2(author$project$Site$Common$h_, 2, 'Max-Bond Craft Essence'),
				A2(
				elm$html$Html$section,
				_List_Nil,
				_List_fromArray(
					[
						author$project$Class$ToImage$image(
						author$project$Class$ToImage$icon(ce.aA)),
						A2(
						elm$html$Html$h3,
						_List_fromArray(
							[
								elm$html$Html$Attributes$class('link'),
								elm$html$Html$Events$onClick(
								author$project$Site$Algebra$Switch(a))
							]),
						_List_fromArray(
							[
								elm$html$Html$text(ce.bI)
							])),
						A2(
						elm$html$Html$p,
						_List_Nil,
						_Utils_ap(
							_List_fromArray(
								[
									A2(author$project$Site$Common$text_, elm$html$Html$span, '★★★★ '),
									A2(author$project$Site$Common$text_, elm$html$Html$strong, 'ATK: '),
									A2(author$project$Site$Common$text_, elm$html$Html$span, '100 '),
									A2(author$project$Site$Common$text_, elm$html$Html$strong, 'HP: '),
									A2(author$project$Site$Common$text_, elm$html$Html$span, '100')
								]),
							A2(
								elm$core$List$map,
								A2(author$project$Site$Common$effectEl, author$project$Database$servants, elm$core$Maybe$Nothing),
								ce.ao)))
					]))
			]);
	}
};
var author$project$Site$Servant$Component$link = F3(
	function (has, tab, x) {
		var show = has.b$;
		return A2(
			elm$html$Html$a,
			_List_fromArray(
				[
					author$project$Site$Common$href_('Servants'),
					elm$html$Html$Attributes$class('link'),
					A3(
					elm$core$Basics$composeL,
					elm$html$Html$Events$onClick,
					author$project$Site$Algebra$FilterBy,
					A3(author$project$Site$Servant$Filters$singleFilter, has, tab, x))
				]),
			_List_fromArray(
				[
					elm$html$Html$text(
					show(x))
				]));
	});
var author$project$Site$Common$toCell = function (isPercent) {
	return A2(
		elm$core$Basics$composeR,
		author$project$Printing$places(0),
		A2(
			elm$core$Basics$composeR,
			A2(
				author$project$StandardLibrary$doIf,
				isPercent,
				A2(author$project$StandardLibrary$flip, elm$core$Basics$append, '%')),
			author$project$Site$Common$text_(elm$html$Html$td)));
};
var author$project$Site$Servant$Component$npRow = function (r) {
	var step = r.bG - r.bH;
	var col = A2(
		elm$core$Basics$composeR,
		elm$core$Basics$mul(step),
		A2(
			elm$core$Basics$composeR,
			elm$core$Basics$add(r.bH),
			author$project$Site$Common$toCell(r.bU)));
	return A2(
		elm$html$Html$tr,
		_List_Nil,
		A2(
			elm$core$List$map,
			col,
			_List_fromArray(
				[0, 0.5, 0.75, 0.825, 1.0])));
};
var author$project$Class$Has$passive = A3(
	elm$core$Basics$composeL,
	author$project$Class$Has$Has(
		function ($) {
			return $.bI;
		}),
	elm$core$Basics$always,
	function ($) {
		return $.bT;
	});
var author$project$Site$Servant$Component$passiveEl = function (p) {
	var filter = A4(
		author$project$Site$Filtering$matchFilter,
		elm$core$Maybe$Just(
			A2(
				elm$core$Basics$composeR,
				function ($) {
					return $.aA;
				},
				author$project$Class$ToImage$icon)),
		author$project$Class$Has$passive,
		author$project$Site$Base$FilterPassiveSkill,
		p);
	return A2(
		elm$html$Html$section,
		_List_Nil,
		_Utils_ap(
			_List_fromArray(
				[
					author$project$Class$ToImage$image(
					author$project$Class$ToImage$icon(p.aA)),
					A2(
					elm$html$Html$h3,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							elm$html$Html$span,
							_List_fromArray(
								[
									elm$html$Html$Attributes$class('link'),
									elm$html$Html$Events$onClick(
									author$project$Site$Algebra$FilterBy(
										_List_fromArray(
											[filter])))
								]),
							_List_fromArray(
								[
									elm$html$Html$text(p.bI)
								])),
							elm$html$Html$text(
							' ' + author$project$Class$Show$rank(p.bZ))
						]))
				]),
			A2(
				elm$core$List$map,
				A2(
					elm$core$Basics$composeR,
					author$project$Class$Show$skillEffect,
					author$project$Site$Common$text_(elm$html$Html$p)),
				p.ao)));
};
var author$project$Site$Common$lvlRow = function (r) {
	var step = (r.bG - r.bH) / 10;
	var go = A2(
		elm$core$Basics$composeR,
		elm$core$Basics$toFloat,
		A2(
			elm$core$Basics$composeR,
			elm$core$Basics$mul(step),
			A2(
				elm$core$Basics$composeR,
				elm$core$Basics$add(r.bH),
				author$project$Site$Common$toCell(r.bU))));
	return A3(
		elm$core$Basics$composeR,
		elm$core$List$map(go),
		elm$html$Html$tr(_List_Nil),
		_Utils_ap(
			A2(elm$core$List$range, 0, 8),
			_List_fromArray(
				[10])));
};
var author$project$StandardLibrary$consAfter = A2(
	elm$core$Basics$composeR,
	elm$core$List$singleton,
	author$project$StandardLibrary$flip(elm$core$Basics$append));
var author$project$Site$Servant$Component$skillEl = F3(
	function (showTables, sk, base) {
		var effectTable = A3(
			elm$core$Basics$composeL,
			A2(
				elm$core$Basics$composeL,
				author$project$Site$Common$table_(
					A2(
						elm$core$List$map,
						elm$core$String$fromInt,
						A2(elm$core$List$range, 1, 10))),
				elm$core$List$map(author$project$Site$Common$lvlRow)),
			elm_community$list_extra$List$Extra$uniqueBy(author$project$Database$Skill$ordRangeInfo),
			author$project$Database$ranges(base.ao));
		return A3(
			elm$core$Basics$composeL,
			elm$html$Html$section(_List_Nil),
			A2(
				author$project$StandardLibrary$doIf,
				showTables,
				author$project$StandardLibrary$consAfter(effectTable)),
			_Utils_ap(
				_List_fromArray(
					[
						author$project$Class$ToImage$image(
						author$project$Class$ToImage$icon(sk.aA)),
						A2(
						author$project$Site$Common$h_,
						3,
						_Utils_ap(
							sk.bI,
							author$project$Class$Show$rank(sk.bZ))),
						A2(author$project$Site$Common$text_, elm$html$Html$strong, 'CD: '),
						A3(
						elm$core$Basics$composeL,
						elm$html$Html$text,
						A2(
							author$project$StandardLibrary$doIf,
							_Utils_eq(sk, base),
							A2(
								author$project$StandardLibrary$flip,
								elm$core$Basics$append,
								'~' + elm$core$String$fromInt(sk.bg - 2))),
						elm$core$String$fromInt(sk.bg))
					]),
				A2(
					elm$core$List$map,
					A2(
						author$project$Site$Common$effectEl,
						author$project$Database$servants,
						elm$core$Maybe$Just(author$project$Class$Has$servant)),
					sk.ao)));
	});
var author$project$Site$Servant$Component$skillUpEl = function (_n0) {
	var a = _n0.a;
	var b = _n0.b;
	var c = _n0.c;
	var d = _n0.d;
	var e = _n0.e;
	var f = _n0.f;
	var g = _n0.g;
	var h = _n0.h;
	return A2(
		elm$core$List$map,
		elm$core$List$map(author$project$Site$Servant$Component$materialEl),
		_List_fromArray(
			[
				a,
				b,
				c,
				d,
				e,
				f,
				g,
				h,
				_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$CrystallizedLore, 1)
				])
			]));
};
var author$project$Site$Servant$Component$withCost = function (a) {
	if (!a) {
		return elm$core$Basics$identity;
	} else {
		return elm$core$List$cons(
			author$project$Site$Servant$Component$materialEl(
				_Utils_Tuple2(author$project$Database$Base$QP, a)));
	}
};
var elm_community$list_extra$List$Extra$updateAt = F3(
	function (index, fn, list) {
		if (index < 0) {
			return list;
		} else {
			var tail = A2(elm$core$List$drop, index, list);
			var head = A2(elm$core$List$take, index, list);
			if (tail.b) {
				var x = tail.a;
				var xs = tail.b;
				return _Utils_ap(
					head,
					A2(
						elm$core$List$cons,
						fn(x),
						xs));
			} else {
				return list;
			}
		}
	});
var elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var elm_community$list_extra$List$Extra$zip = elm$core$List$map2(elm$core$Tuple$pair);
var author$project$Site$Servant$Component$popup = F3(
	function (prefs, ascent, a) {
		if (a.$ === 1) {
			return A2(
				elm$core$Basics$composeL,
				elm$html$Html$div(
					_List_fromArray(
						[
							elm$html$Html$Attributes$class(
							author$project$Site$Common$mode(prefs))
						])),
				elm$core$Basics$append(
					_List_fromArray(
						[
							A2(
							elm$html$Html$div,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('cover'),
									elm$html$Html$Events$onClick(
									author$project$Site$Algebra$Focus(elm$core$Maybe$Nothing))
								]),
							_List_Nil),
							A2(
							elm$html$Html$article,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('focus')
								]),
							_List_Nil)
						])));
		} else {
			var ms = a.a;
			var skillBox = F2(
				function (i, _n12) {
					var icon = _n12.a.aA;
					var lvl = _n12.b;
					return _List_fromArray(
						[
							A2(
							elm$html$Html$td,
							_List_Nil,
							_List_fromArray(
								[
									author$project$Class$ToImage$image(
									author$project$Class$ToImage$icon(icon))
								])),
							A3(
							elm$core$Basics$composeL,
							elm$html$Html$td(_List_Nil),
							A3(author$project$Site$Common$int_, 1, 100, lvl),
							function (val) {
								return A2(
									author$project$Site$Algebra$OnTeam,
									true,
									_Utils_update(
										ms,
										{
											b0: A3(
												elm_community$list_extra$List$Extra$updateAt,
												i,
												elm$core$Basics$always(val),
												ms.b0)
										}));
							})
						]);
				});
			var showTables = A2(author$project$Persist$Preferences$prefer, prefs, 3);
			var showTable = F2(
				function (showCol, effects) {
					return A3(
						elm$core$Basics$composeL,
						A2(
							elm$core$Basics$composeL,
							author$project$StandardLibrary$doIf(showTables),
							author$project$StandardLibrary$consAfter),
						author$project$Site$Common$table_(
							A2(
								elm$core$List$map,
								showCol,
								A2(elm$core$List$range, 1, 5))),
						A2(
							elm$core$List$map,
							author$project$Site$Servant$Component$npRow,
							A2(
								elm_community$list_extra$List$Extra$uniqueBy,
								author$project$Database$Skill$ordRangeInfo,
								author$project$Database$ranges(effects))));
				});
			var showPercent = A2(
				elm$core$Basics$composeR,
				elm$core$String$fromFloat,
				A2(
					elm$core$Basics$composeR,
					A2(author$project$StandardLibrary$flip, elm$core$Basics$append, '%'),
					A2(elm$core$Basics$composeR, elm$html$Html$text, elm$core$List$singleton)));
			var showInt = A2(
				elm$core$Basics$composeR,
				elm$core$Basics$toFloat,
				A2(
					elm$core$Basics$composeR,
					author$project$Printing$commas,
					A2(elm$core$Basics$composeR, elm$html$Html$text, elm$core$List$singleton)));
			var s = ms.J;
			var overMeta = s.T.bu ? _List_fromArray(
				[
					elm$html$Html$Attributes$class('activates')
				]) : _List_Nil;
			var npRank = function (rank) {
				if (!rank) {
					return '--';
				} else {
					return author$project$Class$Show$rank(rank);
				}
			};
			var linkAlignment = A2(author$project$Site$Servant$Component$link, author$project$Class$Has$alignment, author$project$Site$Base$FilterAlignment);
			var fou = ms.R;
			var myServantBox = elm$core$List$singleton(
				function () {
					var _n10 = ms.H;
					if (!_n10) {
						return A3(
							elm$core$Basics$composeL,
							A2(author$project$Site$Common$button_, '+Add to My Servants', true),
							author$project$Site$Algebra$OnTeam(true),
							author$project$MyServant$newServant(s));
					} else {
						return A2(
							elm$html$Html$table,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									elm$html$Html$tr,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											elm$html$Html$td,
											_List_Nil,
											_List_fromArray(
												[
													A2(author$project$Site$Common$text_, elm$html$Html$strong, 'Level:')
												])),
											A3(
											elm$core$Basics$composeL,
											elm$html$Html$td(_List_Nil),
											A3(author$project$Site$Common$int_, 1, 100, ms.H),
											function (val) {
												return A2(
													author$project$Site$Algebra$OnTeam,
													true,
													_Utils_update(
														ms,
														{H: val}));
											}),
											A2(
											elm$html$Html$td,
											_List_Nil,
											_List_fromArray(
												[
													A2(author$project$Site$Common$text_, elm$html$Html$strong, 'NP:')
												])),
											A3(
											elm$core$Basics$composeL,
											elm$html$Html$td(_List_Nil),
											A3(author$project$Site$Common$int_, 1, 5, ms.y),
											function (val) {
												return A2(
													author$project$Site$Algebra$OnTeam,
													true,
													_Utils_update(
														ms,
														{y: val}));
											}),
											A2(
											elm$html$Html$td,
											_List_Nil,
											_List_fromArray(
												[
													A2(author$project$Site$Common$text_, elm$html$Html$strong, '+ATK:')
												])),
											A3(
											elm$core$Basics$composeL,
											elm$html$Html$td(_List_Nil),
											A3(author$project$Site$Common$int_, 0, 990, fou.a9),
											function (val) {
												return A2(
													author$project$Site$Algebra$OnTeam,
													true,
													_Utils_update(
														ms,
														{
															R: _Utils_update(
																fou,
																{a9: val})
														}));
											}),
											A2(
											elm$html$Html$td,
											_List_Nil,
											_List_fromArray(
												[
													A2(author$project$Site$Common$text_, elm$html$Html$strong, '+HP:')
												])),
											A3(
											elm$core$Basics$composeL,
											elm$html$Html$td(_List_Nil),
											A3(author$project$Site$Common$int_, 0, 990, fou.bA),
											function (val) {
												return A2(
													author$project$Site$Algebra$OnTeam,
													true,
													_Utils_update(
														ms,
														{
															R: _Utils_update(
																fou,
																{bA: val})
														}));
											})
										])),
									A3(
									elm$core$Basics$composeL,
									A2(
										elm$core$Basics$composeL,
										A2(
											elm$core$Basics$composeL,
											elm$html$Html$tr(_List_Nil),
											elm$core$Basics$append(
												_List_fromArray(
													[
														A2(
														elm$html$Html$td,
														_List_Nil,
														_List_fromArray(
															[
																A3(
																elm$core$Basics$composeL,
																A2(author$project$Site$Common$button_, 'Delete', true),
																author$project$Site$Algebra$OnTeam(false),
																author$project$MyServant$unowned(s))
															])),
														A2(
														elm$html$Html$td,
														_List_Nil,
														_List_fromArray(
															[
																A2(author$project$Site$Common$text_, elm$html$Html$strong, 'Skills:')
															]))
													]))),
										elm$core$List$concat),
									A2(
										elm$core$List$map2,
										skillBox,
										A2(elm$core$List$range, 0, 10)),
									A2(elm_community$list_extra$List$Extra$zip, s.b0, ms.b0))
								]));
					}
				}());
			var calcWith = A2(author$project$Persist$Preferences$prefer, prefs, 6) ? elm$core$Tuple$first : elm$core$Tuple$second;
			var calc = function (sort) {
				return A3(
					elm$core$Basics$composeR,
					elm$core$Maybe$withDefault(
						_Utils_Tuple2(1 / 0, 1 / 0)),
					A2(
						elm$core$Basics$composeR,
						calcWith,
						author$project$Sorting$formatSort(sort)),
					A2(
						elm$core$Dict$get,
						author$project$Sorting$ordSortBy(sort),
						ms.V));
			};
			var b = ms.bb;
			var alignBox = function () {
				var _n3 = s.a6;
				_n3$3:
				while (true) {
					if (!_n3.b) {
						return _List_fromArray(
							[
								elm$html$Html$text('None')
							]);
					} else {
						if (_n3.b.b) {
							if (!_n3.b.b.b) {
								if ((_n3.a === 1) && (_n3.b.a === 1)) {
									var _n4 = _n3.a;
									var _n5 = _n3.b;
									var _n6 = _n5.a;
									return _List_fromArray(
										[
											elm$html$Html$text('True '),
											linkAlignment(1)
										]);
								} else {
									break _n3$3;
								}
							} else {
								if (_n3.b.b.b.b && (!_n3.b.b.b.b.b)) {
									var a1 = _n3.a;
									var _n7 = _n3.b;
									var a2 = _n7.a;
									var _n8 = _n7.b;
									var a3 = _n8.a;
									var _n9 = _n8.b;
									var a4 = _n9.a;
									return _List_fromArray(
										[
											linkAlignment(a1),
											elm$html$Html$text(' '),
											linkAlignment(a2),
											elm$html$Html$text(' / '),
											linkAlignment(a3),
											elm$html$Html$text(' '),
											linkAlignment(a4)
										]);
								} else {
									break _n3$3;
								}
							}
						} else {
							break _n3$3;
						}
					}
				}
				return A2(
					elm$core$List$concatMap,
					function (x) {
						return _List_fromArray(
							[
								linkAlignment(x),
								elm$html$Html$text(' ')
							]);
					},
					s.a6);
			}();
			var _n1 = b.a1;
			var max = _n1.bG;
			var grail = _n1.bx;
			var _n2 = s.a1;
			var base = _n2.bb;
			return A2(
				elm$core$Basics$composeL,
				elm$html$Html$div(
					_List_fromArray(
						[
							elm$html$Html$Attributes$class(
							author$project$Site$Common$mode(prefs) + ' fade')
						])),
				elm$core$Basics$append(
					_List_fromArray(
						[
							A2(
							elm$html$Html$div,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('cover'),
									elm$html$Html$Events$onClick(
									author$project$Site$Algebra$Focus(elm$core$Maybe$Nothing))
								]),
							_List_Nil),
							A2(
							elm$html$Html$article,
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('focus')
								]),
							_Utils_ap(
								_List_fromArray(
									[
										A2(
										elm$html$Html$div,
										_List_Nil,
										_List_fromArray(
											[
												A4(
												author$project$Site$Servant$Component$portrait,
												true,
												prefs,
												ascent,
												_Utils_Tuple2('', ms)),
												A2(
												elm$html$Html$div,
												_List_Nil,
												_List_fromArray(
													[
														A2(
														author$project$Site$Common$table_,
														_List_fromArray(
															['', 'ATK', 'HP']),
														_List_fromArray(
															[
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(author$project$Site$Common$text_, elm$html$Html$th, 'Base'),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(base.a9)),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(base.bA))
																	])),
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(author$project$Site$Common$text_, elm$html$Html$th, 'Max'),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(max.a9)),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(max.bA))
																	])),
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(author$project$Site$Common$text_, elm$html$Html$th, 'Grail'),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(grail.a9)),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		showInt(grail.bA))
																	]))
															])),
														A2(
														author$project$Site$Common$table_,
														_List_fromArray(
															['', 'Q', 'A', 'B', 'EX', 'NP']),
														_List_fromArray(
															[
																A3(
																elm$core$Basics$composeL,
																elm$html$Html$tr(_List_Nil),
																elm$core$List$cons(
																	A2(author$project$Site$Common$text_, elm$html$Html$th, 'Hits')),
																A2(
																	elm$core$List$map,
																	A2(
																		elm$core$Basics$composeR,
																		elm$core$String$fromInt,
																		author$project$Site$Common$text_(elm$html$Html$td)),
																	_List_fromArray(
																		[s.ay.bY, s.ay.a8, s.ay.be, s.ay.bs, s.T.ay])))
															])),
														A2(
														elm$html$Html$table,
														_List_Nil,
														_List_fromArray(
															[
																A2(
																author$project$Site$Common$tr_,
																'Class',
																_List_fromArray(
																	[
																		A3(author$project$Site$Servant$Component$link, author$project$Class$Has$class, author$project$Site$Base$FilterClass, s.bi)
																	])),
																A2(
																author$project$Site$Common$tr_,
																'Deck',
																_List_fromArray(
																	[
																		A3(author$project$Site$Servant$Component$link, author$project$Class$Has$deck, author$project$Site$Base$FilterDeck, s.bo)
																	])),
																A2(
																author$project$Site$Common$tr_,
																'NP Type',
																_List_fromArray(
																	[
																		A3(
																		author$project$Site$Servant$Component$link,
																		author$project$Class$Has$phantasmType,
																		author$project$Site$Base$FilterPhantasm,
																		author$project$Database$Servant$phantasmType(s.T))
																	])),
																A2(
																author$project$Site$Common$tr_,
																'Attribute',
																_List_fromArray(
																	[
																		A3(author$project$Site$Servant$Component$link, author$project$Class$Has$attribute, author$project$Site$Base$FilterAttribute, s.ba)
																	])),
																A2(author$project$Site$Common$tr_, 'Alignment', alignBox),
																A2(
																author$project$Site$Common$tr_,
																'ID',
																_List_fromArray(
																	[
																		elm$html$Html$text(
																		'#' + elm$core$String$fromInt(s.aB))
																	])),
																A2(
																author$project$Site$Common$tr_,
																'Star Weight',
																_List_fromArray(
																	[
																		elm$html$Html$text(
																		elm$core$String$fromInt(s.S.b2))
																	])),
																A2(
																author$project$Site$Common$tr_,
																'Star Rate',
																showPercent(s.S.b1)),
																A2(
																author$project$Site$Common$tr_,
																'NP/Hit',
																showPercent(s.S.bM)),
																A2(
																author$project$Site$Common$tr_,
																'NP/Defend',
																_List_fromArray(
																	[
																		elm$html$Html$text(
																		elm$core$String$fromInt(s.S.bN) + '%')
																	])),
																A2(
																author$project$Site$Common$tr_,
																'Death Rate',
																showPercent(s.bm))
															]))
													]))
											])),
										A2(
										elm$html$Html$form,
										_List_fromArray(
											[
												elm$html$Html$Attributes$id('myservant')
											]),
										myServantBox),
										A2(author$project$Site$Common$h_, 2, 'Noble Phantasm'),
										A2(
										elm$html$Html$table,
										_List_fromArray(
											[
												elm$html$Html$Attributes$id('phantasm')
											]),
										_List_fromArray(
											[
												A2(
												author$project$Site$Common$tr_,
												'Name',
												_List_fromArray(
													[
														elm$html$Html$text(s.T.bI)
													])),
												A2(
												author$project$Site$Common$tr_,
												'Rank',
												_List_fromArray(
													[
														elm$html$Html$text(
														npRank(s.T.bZ))
													])),
												A2(
												author$project$Site$Common$tr_,
												'Card',
												_List_fromArray(
													[
														A3(author$project$Site$Servant$Component$link, author$project$Class$Has$card, author$project$Site$Base$FilterCard, s.T.bf)
													])),
												A2(
												author$project$Site$Common$tr_,
												'Class',
												_List_fromArray(
													[
														elm$html$Html$text(s.T.bE)
													])),
												A3(
												elm$core$Basics$composeL,
												author$project$Site$Common$tr_('Effects'),
												A2(
													showTable,
													A2(
														elm$core$Basics$composeR,
														elm$core$String$fromInt,
														elm$core$Basics$append('NP')),
													b.T.ao),
												A2(
													elm$core$List$map,
													A2(
														author$project$Site$Common$effectEl,
														author$project$Database$servants,
														elm$core$Maybe$Just(author$project$Class$Has$servant)),
													s.T.ao)),
												A3(
												elm$core$Basics$composeL,
												author$project$Site$Common$tr_('Overcharge'),
												A2(
													showTable,
													A2(
														elm$core$Basics$composeR,
														elm$core$Basics$mul(100),
														A2(
															elm$core$Basics$composeR,
															elm$core$String$fromInt,
															A2(author$project$StandardLibrary$flip, elm$core$Basics$append, '%'))),
													b.T.bS),
												A2(
													elm$core$List$map,
													A2(
														author$project$Site$Common$effectEl,
														author$project$Database$servants,
														elm$core$Maybe$Just(author$project$Class$Has$servant)),
													s.T.bS))
											])),
										A2(author$project$Site$Common$h_, 2, 'Active Skills')
									]),
								_Utils_ap(
									A3(
										elm$core$List$map2,
										author$project$Site$Servant$Component$skillEl(showTables),
										s.b0,
										b.b0),
									_Utils_ap(
										_List_fromArray(
											[
												A2(author$project$Site$Common$h_, 2, 'Passive Skills')
											]),
										_Utils_ap(
											A2(elm$core$List$map, author$project$Site$Servant$Component$passiveEl, s.bT),
											_Utils_ap(
												author$project$Site$Servant$Component$bondEl(
													author$project$Database$CraftEssence$getBond(s)),
												_List_fromArray(
													[
														A2(author$project$Site$Common$h_, 2, 'Traits'),
														A3(
														elm$core$Basics$composeL,
														elm$html$Html$section(_List_Nil),
														elm$core$List$intersperse(
															elm$html$Html$text(', ')),
														A2(
															elm$core$List$map,
															A2(author$project$Site$Servant$Component$link, author$project$Class$Has$trait, author$project$Site$Base$FilterTrait),
															s.ca)),
														A2(author$project$Site$Common$h_, 2, 'Ascension'),
														A3(
														elm$core$Basics$composeL,
														elm$html$Html$table(
															_List_fromArray(
																[
																	elm$html$Html$Attributes$class('materials')
																])),
														A2(
															author$project$StandardLibrary$flip,
															elm$core$List$indexedMap,
															author$project$Site$Servant$Component$ascendUpEl(s.aj)),
														F2(
															function (i, el) {
																return A2(
																	elm$html$Html$tr,
																	_List_Nil,
																	_List_fromArray(
																		[
																			A3(
																			elm$core$Basics$composeL,
																			author$project$Site$Common$text_(elm$html$Html$th),
																			elm$core$String$fromInt,
																			i + 1),
																			A2(
																			elm$html$Html$td,
																			_List_Nil,
																			A2(
																				author$project$Site$Servant$Component$withCost,
																				A2(author$project$MyServant$Leveling$ascendCost, s, i),
																				el))
																		]));
															})),
														A2(author$project$Site$Common$h_, 2, 'Skill Reinforcement'),
														A3(
														elm$core$Basics$composeL,
														elm$html$Html$table(
															_List_fromArray(
																[
																	elm$html$Html$Attributes$class('materials')
																])),
														A2(
															author$project$StandardLibrary$flip,
															elm$core$List$indexedMap,
															author$project$Site$Servant$Component$skillUpEl(s.a_)),
														F2(
															function (i, el) {
																return A2(
																	elm$html$Html$tr,
																	_List_Nil,
																	_List_fromArray(
																		[
																			A3(
																			elm$core$Basics$composeL,
																			author$project$Site$Common$text_(elm$html$Html$th),
																			elm$core$String$fromInt,
																			i + 2),
																			A2(
																			elm$html$Html$td,
																			_List_Nil,
																			A2(
																				author$project$Site$Servant$Component$withCost,
																				A2(author$project$MyServant$Leveling$skillCost, s, i),
																				el))
																		]));
															})),
														A2(author$project$Site$Common$h_, 2, 'Calculator'),
														A2(
														elm$html$Html$table,
														_List_fromArray(
															[
																elm$html$Html$Attributes$id('calc')
															]),
														_List_fromArray(
															[
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		_List_fromArray(
																			[
																				A2(author$project$Site$Common$h_, 3, 'NP Generation'),
																				A2(
																				elm$html$Html$table,
																				_List_Nil,
																				_List_fromArray(
																					[
																						A2(
																						author$project$Site$Common$tr_,
																						'Per Arts card',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(5))
																							])),
																						A2(
																						author$project$Site$Common$tr_,
																						'Per full deck',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(6))
																							]))
																					]))
																			])),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		_List_fromArray(
																			[
																				A2(author$project$Site$Common$h_, 3, 'NP Damage'),
																				A2(
																				elm$html$Html$table,
																				_List_Nil,
																				_List_fromArray(
																					[
																						A2(
																						author$project$Site$Common$tr_,
																						'100% Overcharge',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(9))
																							])),
																						A2(
																						author$project$Site$Common$tr_,
																						'500% Overcharge',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(10))
																							]))
																					]))
																			]))
																	])),
																A2(
																elm$html$Html$tr,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		_List_fromArray(
																			[
																				A2(author$project$Site$Common$h_, 3, 'Star Generation'),
																				A2(
																				elm$html$Html$table,
																				_List_Nil,
																				_List_fromArray(
																					[
																						A2(
																						author$project$Site$Common$tr_,
																						'Per Quick card',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(7))
																							])),
																						A2(
																						author$project$Site$Common$tr_,
																						'Per full deck',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(8))
																							]))
																					]))
																			])),
																		A2(
																		elm$html$Html$td,
																		_List_Nil,
																		_List_fromArray(
																			[
																				A2(author$project$Site$Common$h_, 3, 'NP Special Damage'),
																				A2(
																				elm$html$Html$table,
																				_List_Nil,
																				_List_fromArray(
																					[
																						A2(
																						author$project$Site$Common$tr_,
																						'100% Overcharge',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(11))
																							])),
																						A2(
																						author$project$Site$Common$tr_,
																						'500% Overcharge',
																						_List_fromArray(
																							[
																								elm$html$Html$text(
																								calc(12))
																							]))
																					]))
																			]))
																	]))
															]))
													])))))))
						])));
		}
	});
var author$project$Site$Servant$Sorting$getSort = F2(
	function (addSkills, a) {
		if (!a) {
			var sorter = function (_n1) {
				var base = _n1.bb;
				return _Utils_ap(
					elm$core$String$fromInt(5 - base.aU),
					base.bI);
			};
			return A2(
				elm$core$Basics$composeR,
				elm$core$List$sortWith(
					A2(author$project$StandardLibrary$on, elm$core$Basics$compare, sorter)),
				elm$core$List$map(
					function (x) {
						return _Utils_Tuple2('', x);
					}));
		} else {
			var sorter = function (ms) {
				return A3(
					elm$core$Basics$composeR,
					elm$core$Maybe$withDefault(
						_Utils_Tuple2(1 / 0, 1 / 0)),
					addSkills ? elm$core$Tuple$first : elm$core$Tuple$second,
					A2(
						elm$core$Dict$get,
						author$project$Sorting$ordSortBy(a),
						ms.V));
			};
			var showSort = function (ms) {
				return _Utils_Tuple2(
					A3(
						elm$core$Basics$composeR,
						sorter,
						A2(
							elm$core$Basics$composeR,
							elm$core$Basics$abs,
							A2(
								elm$core$Basics$composeR,
								author$project$Sorting$formatSort(a),
								A2(
									author$project$StandardLibrary$doIf,
									A2(
										elm$core$List$member,
										a,
										_List_fromArray(
											[9, 10, 11, 12])),
									elm$core$Basics$append(
										'NP' + (elm$core$String$fromInt(ms.y) + ': '))))),
						ms),
					ms);
			};
			return A2(
				elm$core$Basics$composeR,
				elm$core$List$sortWith(
					A2(author$project$StandardLibrary$on, elm$core$Basics$compare, sorter)),
				elm$core$List$map(showSort));
		}
	});
var author$project$Site$Servant$Component$reSort = function (st) {
	return _Utils_update(
		st,
		{
			V: A3(
				author$project$Site$Servant$Sorting$getSort,
				A2(author$project$Persist$Preferences$prefer, st.aP, 6),
				st.a$,
				st.at.ac)
		});
};
var author$project$Site$Servant$Component$reTeam = function (st) {
	var extra = st.at;
	return _Utils_update(
		st,
		{
			at: _Utils_update(
				extra,
				{
					ac: A2(
						elm$core$List$map,
						author$project$MyServant$owned(st.b6),
						author$project$Database$servants)
				})
		});
};
var author$project$Site$Servant$Component$setRoot = function (st) {
	return _Utils_update(
		st,
		{
			aX: st.at.aG ? 'MyServants' : 'Servants'
		});
};
var author$project$MyServant$Leveling$maxLevel = function (_n0) {
	var rarity = _n0.aU;
	switch (rarity) {
		case 1:
			return 60;
		case 3:
			return 70;
		case 4:
			return 80;
		case 5:
			return 90;
		default:
			return 65;
	}
};
var author$project$Site$Servant$Component$showStats = function (ms) {
	return elm$core$String$fromInt(ms.H) + ('/' + (elm$core$String$fromInt(
		author$project$MyServant$Leveling$maxLevel(ms.J)) + (' ' + A2(
		elm$core$String$join,
		'·',
		A2(elm$core$List$map, elm$core$String$fromInt, ms.b0)))));
};
var author$project$Class$ToImage$card = A2(
	elm$core$Basics$composeL,
	author$project$Class$ToImage$ImagePath('Card'),
	author$project$Class$Show$card);
var author$project$Site$Servant$Filters$extraFilters = elm$core$List$concat(
	_List_fromArray(
		[
			_List_fromArray(
			[
				A3(
				author$project$Site$Filtering$namedBonus,
				author$project$Site$Base$FilterAvailability,
				'New',
				_List_fromArray(
					['Elisabeth Bathory (Brave)', 'Cleopatra', 'Vlad III (EXTRA)'])),
				A4(
				author$project$Site$Algebra$Filter,
				elm$core$Maybe$Nothing,
				author$project$Site$Base$FilterAvailability,
				'Free',
				F2(
					function (_n0, s) {
						return s.bw;
					})),
				A4(
				author$project$Site$Algebra$Filter,
				elm$core$Maybe$Nothing,
				author$project$Site$Base$FilterSource,
				'Limited',
				F2(
					function (_n1, s) {
						return s.aD;
					})),
				A4(
				author$project$Site$Algebra$Filter,
				elm$core$Maybe$Nothing,
				author$project$Site$Base$FilterSource,
				'Non-Limited',
				F2(
					function (_n2, s) {
						return !s.aD;
					}))
			]),
			A3(
			author$project$StandardLibrary$flip,
			elm$core$List$map,
			A2(elm$core$List$range, 1, 5),
			function (rarity) {
				return A4(
					author$project$Site$Algebra$Filter,
					elm$core$Maybe$Nothing,
					author$project$Site$Base$FilterRarity,
					A2(author$project$Printing$stars, false, rarity),
					F2(
						function (_n3, s) {
							return _Utils_eq(rarity, s.aU);
						}));
			})
		]));
var author$project$Site$Servant$Filters$scheduledFilters = _List_fromArray(
	[
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 17),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+100 ATK',
			_List_fromArray(
				['Elisabeth Bathory (Brave)']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 17),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterEventBonus,
			'+50 ATK',
			_List_fromArray(
				['Cleopatra', 'Vlad III (EXTRA)', 'Nitocris', 'Ibaraki-Douji', 'Robin Hood']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 17),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterAvailability,
			'Limited to Event',
			_List_fromArray(
				['Elisabeth Bathory (Brave)', 'Cleopatra', 'Vlad III (EXTRA)']))),
		A3(
		author$project$Site$Filtering$ScheduledFilter,
		A3(author$project$Date$Date, 2018, 9, 25),
		A3(author$project$Date$Date, 2018, 10, 17),
		A3(
			author$project$Site$Filtering$namedBonus,
			author$project$Site$Base$FilterAvailability,
			'Rate-Up',
			_List_fromArray(
				['Cleopatra', 'Vlad III (EXTRA)'])))
	]);
var author$project$Site$Servant$Filters$getExtraFilters = F2(
	function (today, tab) {
		return A2(
			elm$core$List$filter,
			A2(
				elm$core$Basics$composeR,
				function ($) {
					return $.C;
				},
				elm$core$Basics$eq(tab)),
			_Utils_ap(
				A2(author$project$Site$Filtering$getScheduled, author$project$Site$Servant$Filters$scheduledFilters, today),
				author$project$Site$Servant$Filters$extraFilters));
	});
var author$project$Site$Servant$Filters$getFilters = F2(
	function (today, tab) {
		var allEffects = F3(
			function (has, toImage, pred) {
				return A3(
					elm$core$Basics$composeR,
					elm$core$List$filter(pred),
					elm$core$List$map(
						A3(
							author$project$Site$Filtering$matchFilter,
							toImage,
							has(author$project$Class$Has$servant),
							tab)),
					author$project$Database$getAll(
						has(author$project$Class$Has$servant)));
			});
		var all = F2(
			function (has, toImage) {
				return A2(
					elm$core$List$map,
					A3(author$project$Site$Filtering$matchFilter, toImage, has, tab),
					author$project$Database$getAll(has));
			});
		switch (tab.$) {
			case 2:
				return A2(all, author$project$Class$Has$alignment, elm$core$Maybe$Nothing);
			case 16:
				return A2(all, author$project$Class$Has$attribute, elm$core$Maybe$Nothing);
			case 13:
				return A2(
					all,
					author$project$Class$Has$card,
					elm$core$Maybe$Just(author$project$Class$ToImage$card));
			case 14:
				return A2(
					all,
					author$project$Class$Has$class,
					elm$core$Maybe$Just(author$project$Class$ToImage$class));
			case 15:
				return A2(all, author$project$Class$Has$deck, elm$core$Maybe$Nothing);
			case 12:
				return A2(all, author$project$Class$Has$phantasmType, elm$core$Maybe$Nothing);
			case 3:
				return A2(all, author$project$Class$Has$trait, elm$core$Maybe$Nothing);
			case 4:
				return A3(
					elm$core$Basics$composeL,
					all(author$project$Class$Has$passive),
					elm$core$Maybe$Just,
					A2(
						elm$core$Basics$composeL,
						author$project$Class$ToImage$icon,
						function ($) {
							return $.aA;
						}));
			case 5:
				return A2(
					all,
					author$project$Class$Has$material,
					elm$core$Maybe$Just(author$project$Class$ToImage$material));
			case 8:
				return A3(
					allEffects,
					author$project$Class$Has$debuffEffect,
					elm$core$Maybe$Just(author$project$Class$ToImage$debuffEffect),
					elm$core$Basics$always(true));
			case 9:
				var c = tab.a;
				return A3(
					allEffects,
					author$project$Class$Has$buffEffect,
					elm$core$Maybe$Just(author$project$Class$ToImage$buffEffect),
					A2(
						elm$core$Basics$composeR,
						author$project$Database$Skill$buffCategory,
						elm$core$Basics$eq(c)));
			case 7:
				return A3(
					allEffects,
					author$project$Class$Has$instantEffect,
					elm$core$Maybe$Nothing,
					A2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$Database$Skill$isDamage));
			case 10:
				return A3(allEffects, author$project$Class$Has$instantEffect, elm$core$Maybe$Nothing, author$project$Database$Skill$isDamage);
			default:
				return A2(author$project$Site$Servant$Filters$getExtraFilters, today, tab);
		}
	});
var elm$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		if (ma.$ === 1) {
			return elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 1) {
				return elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				return elm$core$Maybe$Just(
					A2(func, a, b));
			}
		}
	});
var elm_community$maybe_extra$Maybe$Extra$next = elm$core$Maybe$map2(
	F2(
		function (b, a) {
			return A2(elm$core$Basics$always, a, b);
		}));
var author$project$Site$Servant$Component$component = function (store) {
	var update = F2(
		function (a, st) {
			update:
			while (true) {
				var relist = author$project$Site$Filtering$updateListing(
					function ($) {
						return $.bb;
					});
				var _n0 = st;
				var extra = _n0.at;
				switch (a.$) {
					case 9:
						var ms = a.a;
						var ascent = a.b;
						var _n2 = ms.H;
						if (!_n2) {
							return author$project$StandardLibrary$pure(
								_Utils_update(
									st,
									{
										at: _Utils_update(
											extra,
											{Z: ascent})
									}));
						} else {
							var $temp$a = A2(
								author$project$Site$Algebra$OnTeam,
								true,
								_Utils_update(
									ms,
									{Z: ascent})),
								$temp$st = st;
							a = $temp$a;
							st = $temp$st;
							continue update;
						}
					case 11:
						var mineOnly = a.a;
						var newSt = author$project$Site$Servant$Component$setRoot(
							relist(
								_Utils_update(
									st,
									{
										at: _Utils_update(
											extra,
											{aG: mineOnly})
									})));
						return _Utils_Tuple2(
							newSt,
							elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										A2(
										author$project$Site$Common$setPath,
										newSt.aJ,
										_List_fromArray(
											[newSt.aX])),
										author$project$Site$Common$scrollToTop('content')
									])));
					case 1:
						var focus = a.a;
						return _Utils_Tuple2(
							_Utils_update(
								st,
								{
									at: _Utils_update(
										extra,
										{Z: 1}),
									aw: focus
								}),
							A3(
								author$project$Site$Common$setFocus,
								st.aJ,
								st.aX,
								A2(
									elm$core$Maybe$map,
									A2(
										elm$core$Basics$composeR,
										function ($) {
											return $.bb;
										},
										function ($) {
											return $.bI;
										}),
									focus)));
					case 10:
						var keep = a.a;
						var msPreCalc = a.b;
						var ms = A3(author$project$StandardLibrary$doIf, keep, author$project$MyServant$recalc, msPreCalc);
						var team = keep ? A3(
							elm$core$Dict$insert,
							author$project$Database$Servant$ordServant(ms.bb),
							ms,
							st.b6) : A2(
							elm$core$Dict$remove,
							author$project$Database$Servant$ordServant(ms.bb),
							st.b6);
						return _Utils_Tuple2(
							A3(
								elm$core$Basics$composeL,
								relist,
								author$project$Site$Servant$Component$reSort,
								author$project$Site$Servant$Component$reTeam(
									_Utils_update(
										st,
										{
											aw: A2(
												elm_community$maybe_extra$Maybe$Extra$next,
												st.aw,
												elm$core$Maybe$Just(ms)),
											b6: team
										}))),
							A2(author$project$Persist$Flags$storeTeam, store, team));
					default:
						return A6(
							author$project$Site$Update$siteUpdate,
							store,
							function ($) {
								return $.bb;
							},
							function ($) {
								return $.bI;
							},
							author$project$Site$Servant$Component$reSort,
							a,
							st);
				}
			}
		});
	var unlazyView = F4(
		function (prefs, mineOnly, listing, sortBy) {
			var withStats = function (_n5) {
				var ms = _n5.b;
				return _Utils_Tuple2(
					author$project$Site$Servant$Component$showStats(ms),
					ms);
			};
			var listed = mineOnly ? A3(
				elm$core$Basics$composeR,
				elm$core$List$filter(author$project$Site$Servant$Component$isMine),
				A2(
					author$project$StandardLibrary$doIf,
					!sortBy,
					elm$core$List$map(withStats)),
				listing) : listing;
			var getMats = F2(
				function (label, f) {
					var _n4 = f(
						A2(elm$core$List$map, elm$core$Tuple$second, listed));
					if (!_n4.b) {
						return _List_Nil;
					} else {
						var mats = _n4;
						return _List_fromArray(
							[
								_Utils_Tuple2(
								label + 'H',
								A2(author$project$Site$Common$h_, 2, 'Total ' + (label + ' Materials Needed'))),
								_Utils_Tuple2(
								label,
								A2(
									elm$html$Html$footer,
									_List_fromArray(
										[
											elm$html$Html$Attributes$class('materials')
										]),
									A2(elm$core$List$map, author$project$Site$Servant$Component$materialEl, mats)))
							]);
					}
				});
			var baseAscend = A2(author$project$Persist$Preferences$prefer, prefs, 5) ? 4 : 1;
			var doPortrait = function (_n3) {
				var label = _n3.a;
				var ms = _n3.b;
				return A4(
					author$project$Site$Servant$Component$portrait,
					false,
					prefs,
					baseAscend,
					_Utils_Tuple2(
						((label === '') && mineOnly) ? author$project$Site$Servant$Component$showStats(ms) : label,
						ms));
			};
			return A3(
				elm$core$Basics$composeR,
				elm$core$List$map(
					A3(author$project$Site$Servant$Component$keyedPortrait, false, prefs, baseAscend)),
				A2(
					elm$core$Basics$composeR,
					A2(author$project$StandardLibrary$doIf, sortBy, elm$core$List$reverse),
					A2(
						elm$core$Basics$composeR,
						A2(
							author$project$StandardLibrary$doIf,
							mineOnly,
							A2(
								author$project$StandardLibrary$flip,
								elm$core$Basics$append,
								_Utils_ap(
									A2(getMats, 'Ascension', author$project$MyServant$Leveling$ascendWishlist),
									A2(getMats, 'Skill', author$project$MyServant$Leveling$skillWishlist)))),
						A2(
							elm$html$Html$Keyed$node,
							'section',
							_List_fromArray(
								[
									elm$html$Html$Attributes$id('content')
								])))),
				listed);
		});
	var view = function (st) {
		var nav = _List_fromArray(
			[
				A2(
				author$project$Site$Common$a_,
				'Craft Essences',
				author$project$Site$Algebra$Switch(elm$core$Maybe$Nothing)),
				st.at.aG ? A2(
				author$project$Site$Common$a_,
				'Servants',
				author$project$Site$Algebra$MineOnly(false)) : A2(author$project$Site$Common$text_, elm$html$Html$strong, 'Servants'),
				st.at.aG ? A2(author$project$Site$Common$text_, elm$html$Html$strong, 'My Servants') : A2(
				author$project$Site$Common$a_,
				'My Servants',
				author$project$Site$Algebra$MineOnly(true))
			]);
		return A3(
			elm$core$Basics$composeR,
			A3(author$project$Site$Rendering$siteView, st, author$project$Sorting$enumSortBy, nav),
			A3(author$project$Site$Servant$Component$popup, st.aP, st.at.Z, st.aw),
			A5(elm$html$Html$Lazy$lazy4, unlazyView, st.aP, st.at.aG, st.aE, st.a$));
	};
	var init = F2(
		function (flags, navKey) {
			return A3(
				elm$core$Basics$composeR,
				author$project$Site$Servant$Component$reTeam,
				A2(
					elm$core$Basics$composeR,
					author$project$Site$Servant$Component$reSort,
					A2(
						elm$core$Basics$composeR,
						author$project$Site$Filtering$updateListing(
							function ($) {
								return $.bb;
							}),
						author$project$Site$Servant$Component$setRoot)),
				A4(
					author$project$Site$Algebra$siteInit,
					author$project$Site$Filtering$collectFilters(author$project$Site$Servant$Filters$getFilters),
					flags,
					navKey,
					{Z: 1, aG: false, ac: _List_Nil}));
		});
	return {bD: init, cb: update, ce: view};
};
var elm$browser$Browser$Document = F2(
	function (title, body) {
		return {bc: body, b8: title};
	});
var elm$browser$Browser$Navigation$load = _Browser_load;
var elm$core$Platform$Cmd$map = _Platform_map;
var elm$core$Platform$Sub$batch = _Platform_batch;
var elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);
var elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var elm$html$Html$map = elm$virtual_dom$VirtualDom$map;
var author$project$Site$Application$app = F4(
	function (onInit, analytics, title, store) {
		var child = F2(
			function (constr, unMsg) {
				return constr(
					A2(
						elm$core$Basics$composeL,
						elm$core$Basics$composeL(
							elm$core$Platform$Cmd$map(unMsg)),
						store));
			});
		var sChild = A2(
			child,
			author$project$Site$Servant$Component$component,
			function (a) {
				if (a.$ === 3) {
					var x = a.a;
					return x;
				} else {
					return author$project$Site$Algebra$DoNothing;
				}
			});
		var ceChild = A2(
			child,
			author$project$Site$CraftEssence$Component$component,
			function (a) {
				if (a.$ === 2) {
					var x = a.a;
					return x;
				} else {
					return author$project$Site$Algebra$DoNothing;
				}
			});
		var init = F3(
			function (flags, url, key) {
				var _n11 = A2(
					author$project$Site$Application$stateFromPath,
					url.aM,
					{
						j: A2(ceChild.bD, flags, key),
						l: A2(sChild.bD, flags, key),
						u: 1
					});
				var st = _n11.a;
				var newTitle = _n11.b;
				return _Utils_Tuple2(
					st,
					elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								onInit,
								title(newTitle)
							])));
			});
		var update = F2(
			function (parentMsg, st) {
				switch (parentMsg.$) {
					case 0:
						var urlRequest = parentMsg.a;
						if (!urlRequest.$) {
							var url = urlRequest.a;
							return author$project$StandardLibrary$pure(st);
						} else {
							var href = urlRequest.a;
							return _Utils_Tuple2(
								st,
								elm$browser$Browser$Navigation$load(href));
						}
					case 1:
						var path = parentMsg.a.aM;
						var _n3 = A2(author$project$Site$Application$stateFromPath, path, st);
						var newSt = _n3.a;
						var newTitle = _n3.b;
						return _Utils_Tuple2(
							newSt,
							elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										analytics(path),
										title(newTitle)
									])));
					case 2:
						var msg = parentMsg.a;
						if (msg.$ === 12) {
							var toServant = msg.a;
							var _n5 = st;
							var sModel = _n5.l;
							var focus = A2(
								elm$core$Maybe$map,
								author$project$MyServant$owned(sModel.b6),
								toServant);
							var _n6 = sModel;
							var extra = _n6.at;
							return _Utils_Tuple2(
								_Utils_update(
									st,
									{
										l: _Utils_update(
											sModel,
											{
												at: _Utils_update(
													extra,
													{aG: false}),
												aw: focus
											}),
										u: 1
									}),
								A3(
									elm$core$Basics$composeL,
									elm$core$Platform$Cmd$map(author$project$Site$Application$ServantsMsg),
									A2(author$project$Site$Common$setFocus, sModel.aJ, 'Servants'),
									A2(
										elm$core$Maybe$map,
										A2(
											elm$core$Basics$composeR,
											function ($) {
												return $.bb;
											},
											function ($) {
												return $.bI;
											}),
										focus)));
						} else {
							var _n7 = A2(ceChild.cb, msg, st.j);
							var model = _n7.a;
							var cmd = _n7.b;
							return _Utils_Tuple2(
								_Utils_update(
									st,
									{j: model}),
								A2(elm$core$Platform$Cmd$map, author$project$Site$Application$CraftEssencesMsg, cmd));
						}
					default:
						var msg = parentMsg.a;
						if (msg.$ === 12) {
							var toCraftEssence = msg.a;
							var _n9 = st;
							var ceModel = _n9.j;
							return _Utils_Tuple2(
								_Utils_update(
									st,
									{
										j: _Utils_update(
											ceModel,
											{aw: toCraftEssence}),
										u: 0
									}),
								A3(
									elm$core$Basics$composeL,
									elm$core$Platform$Cmd$map(author$project$Site$Application$CraftEssencesMsg),
									A2(author$project$Site$Common$setFocus, ceModel.aJ, 'CraftEssences'),
									A2(
										elm$core$Maybe$map,
										function ($) {
											return $.bI;
										},
										toCraftEssence)));
						} else {
							var _n10 = A2(sChild.cb, msg, st.l);
							var model = _n10.a;
							var cmd = _n10.b;
							return _Utils_Tuple2(
								_Utils_update(
									st,
									{l: model}),
								A2(elm$core$Platform$Cmd$map, author$project$Site$Application$ServantsMsg, cmd));
						}
				}
			});
		var view = function (st) {
			return A2(
				elm$browser$Browser$Document,
				'CHALDEAS',
				function () {
					var _n0 = st.u;
					if (!_n0) {
						return _List_fromArray(
							[
								A2(
								elm$html$Html$map,
								author$project$Site$Application$CraftEssencesMsg,
								ceChild.ce(st.j))
							]);
					} else {
						return _List_fromArray(
							[
								A2(
								elm$html$Html$map,
								author$project$Site$Application$ServantsMsg,
								sChild.ce(st.l))
							]);
					}
				}());
		};
		return {
			bD: init,
			bP: author$project$Site$Application$ChangeUrl,
			bQ: author$project$Site$Application$RequestUrl,
			b4: elm$core$Basics$always(elm$core$Platform$Sub$none),
			cb: update,
			ce: view
		};
	});
var author$project$StandardLibrary$curry = F3(
	function (f, x, y) {
		return f(
			_Utils_Tuple2(x, y));
	});
var elm$browser$Browser$application = _Browser_application;
var elm$json$Json$Decode$value = _Json_decodeValue;
var author$project$Main$main = elm$browser$Browser$application(
	A4(
		author$project$Site$Application$app,
		author$project$Main$runExports,
		author$project$Main$analytics,
		author$project$Main$title,
		author$project$StandardLibrary$curry(author$project$Main$store)));
_Platform_export({'Main':{'init':author$project$Main$main(elm$json$Json$Decode$value)(0)}});}(this));