(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.0/optimize for better performance and smaller assets.');


var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;
	}));
});



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = elm$core$Set$toList(x);
		y = elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = elm$core$Dict$toList(x);
		y = elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = elm$core$Dict$toList(x);
		y = elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (!x.$)
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[94m' + string + '\x1b[0m' : string;
}



// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800)
			+
			String.fromCharCode(code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return word
		? elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? elm$core$Maybe$Nothing
		: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




/**/
function _Json_errorToString(error)
{
	return elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

var _Json_decodeInt = { $: 2 };
var _Json_decodeBool = { $: 3 };
var _Json_decodeFloat = { $: 4 };
var _Json_decodeValue = { $: 5 };
var _Json_decodeString = { $: 6 };

function _Json_decodeList(decoder) { return { $: 7, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 8, b: decoder }; }

function _Json_decodeNull(value) { return { $: 9, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 10,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 11,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 12,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 13,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 14,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 15,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 3:
			return (typeof value === 'boolean')
				? elm$core$Result$Ok(value)
				: _Json_expecting('a BOOL', value);

		case 2:
			if (typeof value !== 'number') {
				return _Json_expecting('an INT', value);
			}

			if (-2147483647 < value && value < 2147483647 && (value | 0) === value) {
				return elm$core$Result$Ok(value);
			}

			if (isFinite(value) && !(value % 1)) {
				return elm$core$Result$Ok(value);
			}

			return _Json_expecting('an INT', value);

		case 4:
			return (typeof value === 'number')
				? elm$core$Result$Ok(value)
				: _Json_expecting('a FLOAT', value);

		case 6:
			return (typeof value === 'string')
				? elm$core$Result$Ok(value)
				: (value instanceof String)
					? elm$core$Result$Ok(value + '')
					: _Json_expecting('a STRING', value);

		case 9:
			return (value === null)
				? elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 5:
			return elm$core$Result$Ok(_Json_wrap(value));

		case 7:
			if (!Array.isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 8:
			if (!Array.isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 10:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));

		case 11:
			var index = decoder.e;
			if (!Array.isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));

		case 12:
			if (typeof value !== 'object' || value === null || Array.isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!elm$core$Result$isOk(result))
					{
						return elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));

		case 13:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return elm$core$Result$Ok(answer);

		case 14:
			var result = _Json_runHelp(decoder.b, value);
			return (!elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 15:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if (elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));

		case 1:
			return elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!elm$core$Result$isOk(result))
		{
			return elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return elm$core$Result$Ok(toElmValue(array));
}

function _Json_toElmArray(array)
{
	return A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 3:
		case 2:
		case 4:
		case 6:
		case 5:
			return true;

		case 9:
			return x.c === y.c;

		case 7:
		case 8:
		case 12:
			return _Json_equality(x.b, y.b);

		case 10:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 11:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 13:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 14:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 15:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);
	var managers = {};
	result = init(result.a);
	var model = result.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		result = A2(update, msg, model);
		stepper(model = result.a, viewMetadata);
		_Platform_dispatchEffects(managers, result.b, subscriptions(model));
	}

	_Platform_dispatchEffects(managers, result.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				p: bag.n,
				q: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.q)
		{
			x = temp.p(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		r: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		r: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**_UNUSED/
	var node = args['node'];
	//*/
	/**/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2(elm$json$Json$Decode$map, func, handler.a)
				:
			A3(elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		message: func(record.message),
		stopPropagation: record.stopPropagation,
		preventDefault: record.preventDefault
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		(key !== 'value' || key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		value
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		value
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.message;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			var oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			var newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}



// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var view = impl.view;
			/**_UNUSED/
			var domNode = args['node'];
			//*/
			/**/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.setup && impl.setup(sendToApp)
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);
			});
		}
	);
});



// ANIMATION


var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.onUrlChange;
	var onUrlRequest = impl.onUrlRequest;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		setup: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.download)
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.protocol === next.protocol
							&& curr.host === next.host
							&& curr.port_.a === next.port_.a
						)
							? elm$browser$Browser$Internal(next)
							: elm$browser$Browser$External(href)
					));
				}
			});
		},
		init: function(flags)
		{
			return A3(impl.init, flags, _Browser_getUrl(), key);
		},
		view: impl.view,
		update: impl.update,
		subscriptions: impl.subscriptions
	});
}

function _Browser_getUrl()
{
	return elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hidden: 'hidden', change: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hidden: 'mozHidden', change: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hidden: 'msHidden', change: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }
		: { hidden: 'hidden', change: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		scene: _Browser_getScene(),
		viewport: {
			x: _Browser_window.pageXOffset,
			y: _Browser_window.pageYOffset,
			width: _Browser_doc.documentElement.clientWidth,
			height: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			scene: {
				width: node.scrollWidth,
				height: node.scrollHeight
			},
			viewport: {
				x: node.scrollLeft,
				y: node.scrollTop,
				width: node.clientWidth,
				height: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			scene: _Browser_getScene(),
			viewport: {
				x: x,
				y: y,
				width: _Browser_doc.documentElement.clientWidth,
				height: _Browser_doc.documentElement.clientHeight
			},
			element: {
				x: x + rect.left,
				y: y + rect.top,
				width: rect.width,
				height: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}
var elm$core$Basics$False = {$: 'False'};
var elm$core$Basics$True = {$: 'True'};
var elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var elm$core$Basics$EQ = {$: 'EQ'};
var elm$core$Basics$GT = {$: 'GT'};
var elm$core$Basics$LT = {$: 'LT'};
var elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3(elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var elm$core$List$cons = _List_cons;
var elm$core$Dict$toList = function (dict) {
	return A3(
		elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var elm$core$Dict$keys = function (dict) {
	return A3(
		elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2(elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var elm$core$Set$toList = function (_n0) {
	var dict = _n0.a;
	return elm$core$Dict$keys(dict);
};
var elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var elm$core$Array$foldr = F3(
	function (func, baseCase, _n0) {
		var tree = _n0.c;
		var tail = _n0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3(elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			elm$core$Elm$JsArray$foldr,
			helper,
			A3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var elm$core$Array$toList = function (array) {
	return A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);
};
var elm$core$Array$branchFactor = 32;
var elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var elm$core$Basics$ceiling = _Basics_ceiling;
var elm$core$Basics$fdiv = _Basics_fdiv;
var elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var elm$core$Basics$toFloat = _Basics_toFloat;
var elm$core$Array$shiftStep = elm$core$Basics$ceiling(
	A2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));
var elm$core$Elm$JsArray$empty = _JsArray_empty;
var elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);
var elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var elm$core$List$reverse = function (list) {
	return A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);
};
var elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);
			var node = _n0.a;
			var remainingNodes = _n0.b;
			var newAcc = A2(
				elm$core$List$cons,
				elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var elm$core$Basics$eq = _Utils_equal;
var elm$core$Tuple$first = function (_n0) {
	var x = _n0.a;
	return x;
};
var elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var elm$core$Basics$add = _Basics_add;
var elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var elm$core$Basics$floor = _Basics_floor;
var elm$core$Basics$gt = _Utils_gt;
var elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var elm$core$Basics$mul = _Basics_mul;
var elm$core$Basics$sub = _Basics_sub;
var elm$core$Elm$JsArray$length = _JsArray_length;
var elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				elm$core$Array$Array_elm_builtin,
				elm$core$Elm$JsArray$length(builder.tail),
				elm$core$Array$shiftStep,
				elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * elm$core$Array$branchFactor;
			var depth = elm$core$Basics$floor(
				A2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				elm$core$Array$Array_elm_builtin,
				elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var elm$core$Basics$idiv = _Basics_idiv;
var elm$core$Basics$lt = _Utils_lt;
var elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = elm$core$Array$Leaf(
					A3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var elm$core$Basics$le = _Utils_le;
var elm$core$Basics$remainderBy = _Basics_remainderBy;
var elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return elm$core$Array$empty;
		} else {
			var tailLen = len % elm$core$Array$branchFactor;
			var tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;
			return A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var elm$core$Maybe$Nothing = {$: 'Nothing'};
var elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var elm$core$Basics$and = _Basics_and;
var elm$core$Basics$append = _Utils_append;
var elm$core$Basics$or = _Basics_or;
var elm$core$Char$toCode = _Char_toCode;
var elm$core$Char$isLower = function (_char) {
	var code = elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var elm$core$Char$isUpper = function (_char) {
	var code = elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var elm$core$Char$isAlpha = function (_char) {
	return elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);
};
var elm$core$Char$isDigit = function (_char) {
	var code = elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var elm$core$Char$isAlphaNum = function (_char) {
	return elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));
};
var elm$core$List$length = function (xs) {
	return A3(
		elm$core$List$foldl,
		F2(
			function (_n0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var elm$core$List$map2 = _List_map2;
var elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2(elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var elm$core$List$range = F2(
	function (lo, hi) {
		return A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			elm$core$List$map2,
			f,
			A2(
				elm$core$List$range,
				0,
				elm$core$List$length(xs) - 1),
			xs);
	});
var elm$core$String$all = _String_all;
var elm$core$String$fromInt = _String_fromNumber;
var elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var elm$core$String$uncons = _String_uncons;
var elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var elm$json$Json$Decode$indent = function (str) {
	return A2(
		elm$core$String$join,
		'\n    ',
		A2(elm$core$String$split, '\n', str));
};
var elm$json$Json$Encode$encode = _Json_encode;
var elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(
			elm$json$Json$Decode$errorToString(error))));
	});
var elm$json$Json$Decode$errorToString = function (error) {
	return A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _n1 = elm$core$String$uncons(f);
						if (_n1.$ === 'Nothing') {
							return false;
						} else {
							var _n2 = _n1.a;
							var _char = _n2.a;
							var rest = _n2.b;
							return elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2(elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + (elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2(elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									elm$core$String$join,
									'',
									elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										elm$core$String$join,
										'',
										elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(
								elm$core$List$length(errors)) + ' ways:'));
							return A2(
								elm$core$String$join,
								'\n\n',
								A2(
									elm$core$List$cons,
									introduction,
									A2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								elm$core$String$join,
								'',
								elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + (elm$json$Json$Decode$indent(
						A2(elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var elm$core$Platform$Cmd$batch = _Platform_batch;
var elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);
var author$project$StandardLibrary$pure = function (x) {
	return _Utils_Tuple2(x, elm$core$Platform$Cmd$none);
};
var author$project$Main$init = function (_n0) {
	return author$project$StandardLibrary$pure(_Utils_Tuple0);
};
var author$project$Main$update = F2(
	function (_n0, st) {
		return author$project$StandardLibrary$pure(st);
	});
var author$project$Class$Show$trait = function (a) {
	switch (a.$) {
		case 'Arthur':
			return 'Arthur';
		case 'Beast':
			return 'Beast';
		case 'Brynhild':
			return 'Brynhild\'s Beloved';
		case 'DemiServant':
			return 'Demi-servant';
		case 'Demon':
			return 'Demon';
		case 'Demonic':
			return 'Demonic';
		case 'Divine':
			return 'Divine';
		case 'Dragon':
			return 'Dragon';
		case 'HeavenOrEarth':
			return 'Heaven or Earth';
		case 'Female':
			return 'Female';
		case 'GreekMythMale':
			return 'Greek Mythology Male';
		case 'Humanoid':
			return 'Humanoid';
		case 'Human':
			return 'Human';
		case 'King':
			return 'King';
		case 'Male':
			return 'Male';
		case 'Nonbinary':
			return 'Nonbinary';
		case 'PseudoServant':
			return 'Pseudo-Servant';
		case 'Riding':
			return 'Riding';
		case 'Roman':
			return 'Roman';
		case 'Saberface':
			return 'Saberface';
		case 'Undead':
			return 'Undead';
		default:
			return 'Weak to Enuma Elish';
	}
};
var author$project$Database$Base$HeavenOrEarth = {$: 'HeavenOrEarth'};
var author$project$Database$Base$Humanoid = {$: 'Humanoid'};
var author$project$Database$Base$Archer = {$: 'Archer'};
var author$project$Database$Base$Arthur = {$: 'Arthur'};
var author$project$Database$Base$Arts = {$: 'Arts'};
var author$project$Database$Base$Balanced = {$: 'Balanced'};
var author$project$Database$Base$BlackBeastGrease = {$: 'BlackBeastGrease'};
var author$project$Database$Base$Brynhild = {$: 'Brynhild'};
var author$project$Database$Base$Buster = {$: 'Buster'};
var author$project$Database$Base$Chaotic = {$: 'Chaotic'};
var author$project$Database$Base$ClawOfChaos = {$: 'ClawOfChaos'};
var author$project$Database$Base$Demonic = {$: 'Demonic'};
var author$project$Database$Base$Divine = {$: 'Divine'};
var author$project$Database$Base$Dragon = {$: 'Dragon'};
var author$project$Database$Base$DragonFang = {$: 'DragonFang'};
var author$project$Database$Base$DragonsReverseScale = {$: 'DragonsReverseScale'};
var author$project$Database$Base$Earth = {$: 'Earth'};
var author$project$Database$Base$EnumaElish = {$: 'EnumaElish'};
var author$project$Database$Base$EternalGear = {$: 'EternalGear'};
var author$project$Database$Base$Evil = {$: 'Evil'};
var author$project$Database$Base$EvilBone = {$: 'EvilBone'};
var author$project$Database$Base$Female = {$: 'Female'};
var author$project$Database$Base$FoolsChain = {$: 'FoolsChain'};
var author$project$Database$Base$ForbiddenPage = {$: 'ForbiddenPage'};
var author$project$Database$Base$GemOf = function (a) {
	return {$: 'GemOf', a: a};
};
var author$project$Database$Base$GhostLantern = {$: 'GhostLantern'};
var author$project$Database$Base$Good = {$: 'Good'};
var author$project$Database$Base$GreatKnightMedal = {$: 'GreatKnightMedal'};
var author$project$Database$Base$GreekMythMale = {$: 'GreekMythMale'};
var author$project$Database$Base$HeartOfTheForeignGod = {$: 'HeartOfTheForeignGod'};
var author$project$Database$Base$Heaven = {$: 'Heaven'};
var author$project$Database$Base$HomunculusBaby = {$: 'HomunculusBaby'};
var author$project$Database$Base$Human = {$: 'Human'};
var author$project$Database$Base$IconAllUp = {$: 'IconAllUp'};
var author$project$Database$Base$IconArtsUp = {$: 'IconArtsUp'};
var author$project$Database$Base$IconBubbles = {$: 'IconBubbles'};
var author$project$Database$Base$IconBusterUp = {$: 'IconBusterUp'};
var author$project$Database$Base$IconCircuits = {$: 'IconCircuits'};
var author$project$Database$Base$IconDamageUp = {$: 'IconDamageUp'};
var author$project$Database$Base$IconDarkMagic = {$: 'IconDarkMagic'};
var author$project$Database$Base$IconDodge = {$: 'IconDodge'};
var author$project$Database$Base$IconExclamationUp = {$: 'IconExclamationUp'};
var author$project$Database$Base$IconHPUp = {$: 'IconHPUp'};
var author$project$Database$Base$IconHeal = {$: 'IconHeal'};
var author$project$Database$Base$IconHeart = {$: 'IconHeart'};
var author$project$Database$Base$IconKneel = {$: 'IconKneel'};
var author$project$Database$Base$IconNoble = {$: 'IconNoble'};
var author$project$Database$Base$IconNobleUp = {$: 'IconNobleUp'};
var author$project$Database$Base$IconQuickUp = {$: 'IconQuickUp'};
var author$project$Database$Base$IconShieldUp = {$: 'IconShieldUp'};
var author$project$Database$Base$IconStarHaloUp = {$: 'IconStarHaloUp'};
var author$project$Database$Base$IconStarUp = {$: 'IconStarUp'};
var author$project$Database$Base$IconSwordDown = {$: 'IconSwordDown'};
var author$project$Database$Base$IconSwordUp = {$: 'IconSwordUp'};
var author$project$Database$Base$King = {$: 'King'};
var author$project$Database$Base$Lawful = {$: 'Lawful'};
var author$project$Database$Base$MagicGemOf = function (a) {
	return {$: 'MagicGemOf', a: a};
};
var author$project$Database$Base$Male = {$: 'Male'};
var author$project$Database$Base$Mankind = {$: 'Mankind'};
var author$project$Database$Base$MeteorHorseshoe = {$: 'MeteorHorseshoe'};
var author$project$Database$Base$Monument = function (a) {
	return {$: 'Monument', a: a};
};
var author$project$Database$Base$Neutral = {$: 'Neutral'};
var author$project$Database$Base$OctupletCrystals = {$: 'OctupletCrystals'};
var author$project$Database$Base$PhoenixFeather = {$: 'PhoenixFeather'};
var author$project$Database$Base$Piece = function (a) {
	return {$: 'Piece', a: a};
};
var author$project$Database$Base$ProofOfHero = {$: 'ProofOfHero'};
var author$project$Database$Base$PseudoServant = {$: 'PseudoServant'};
var author$project$Database$Base$Quick = {$: 'Quick'};
var author$project$Database$Base$Riding = {$: 'Riding'};
var author$project$Database$Base$Saberface = {$: 'Saberface'};
var author$project$Database$Base$ScarabOfWisdom = {$: 'ScarabOfWisdom'};
var author$project$Database$Base$SecretGemOf = function (a) {
	return {$: 'SecretGemOf', a: a};
};
var author$project$Database$Base$SeedOfYggdrasil = {$: 'SeedOfYggdrasil'};
var author$project$Database$Base$SerpentJewel = {$: 'SerpentJewel'};
var author$project$Database$Base$ShellOfReminiscence = {$: 'ShellOfReminiscence'};
var author$project$Database$Base$SpiritRoot = {$: 'SpiritRoot'};
var author$project$Database$Base$Star = {$: 'Star'};
var author$project$Database$Base$TearstoneOfBlood = {$: 'TearstoneOfBlood'};
var author$project$Database$Base$VoidsDust = {$: 'VoidsDust'};
var author$project$Database$Base$WarhorsesYoungHorn = {$: 'WarhorsesYoungHorn'};
var author$project$Database$Base$IconGoddess = {$: 'IconGoddess'};
var author$project$Database$Passive$Give = F3(
	function (a, b, c) {
		return {$: 'Give', a: a, b: b, c: c};
	});
var elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return elm$core$Maybe$Just(
				f(value));
		} else {
			return elm$core$Maybe$Nothing;
		}
	});
var elm$core$Tuple$second = function (_n0) {
	var y = _n0.b;
	return y;
};
var elm_community$list_extra$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var author$project$Database$Passive$lookup = function (a) {
	return A2(
		elm$core$Basics$composeR,
		elm_community$list_extra$List$Extra$find(
			A2(
				elm$core$Basics$composeR,
				elm$core$Tuple$first,
				elm$core$Basics$eq(a))),
		elm$core$Maybe$map(elm$core$Tuple$second));
};
var author$project$Database$Skill$Flat = function (a) {
	return {$: 'Flat', a: a};
};
var author$project$Database$Skill$Grant = F4(
	function (a, b, c, d) {
		return {$: 'Grant', a: a, b: b, c: c, d: d};
	});
var author$project$Database$Skill$Placeholder = {$: 'Placeholder'};
var elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							elm$core$List$foldl,
							fn,
							acc,
							elm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4(elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var author$project$Database$Passive$passive = F4(
	function (name, icon, effects, rank) {
		var skill = function (_n0) {
			var targ = _n0.a;
			var buff = _n0.b;
			var ranks = _n0.c;
			return A3(
				elm$core$Basics$composeR,
				elm$core$Maybe$map(author$project$Database$Skill$Flat),
				A2(
					elm$core$Basics$composeR,
					elm$core$Maybe$withDefault(author$project$Database$Skill$Placeholder),
					A3(author$project$Database$Skill$Grant, targ, 0, buff)),
				A2(author$project$Database$Passive$lookup, rank, ranks));
		};
		return {
			cd: 0,
			effect: A2(elm$core$List$map, skill, effects),
			icon: icon,
			name: name,
			rank: rank
		};
	});
var author$project$Database$Skill$A = {$: 'A'};
var author$project$Database$Skill$B = {$: 'B'};
var author$project$Database$Skill$C = {$: 'C'};
var author$project$Database$Skill$DamageUp = {$: 'DamageUp'};
var author$project$Database$Skill$DebuffResist = {$: 'DebuffResist'};
var author$project$Database$Skill$EX = {$: 'EX'};
var author$project$Database$Skill$Self = {$: 'Self'};
var author$project$Database$Passive$coreOfGoddess = A3(
	author$project$Database$Passive$passive,
	'Core of the Goddess',
	author$project$Database$Base$IconGoddess,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DamageUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 300),
					_Utils_Tuple2(author$project$Database$Skill$A, 250),
					_Utils_Tuple2(author$project$Database$Skill$B, 225),
					_Utils_Tuple2(author$project$Database$Skill$C, 200)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffResist,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 30),
					_Utils_Tuple2(author$project$Database$Skill$A, 25),
					_Utils_Tuple2(author$project$Database$Skill$B, 22.5),
					_Utils_Tuple2(author$project$Database$Skill$C, 20)
				]))
		]));
var author$project$Database$Base$IconSun = {$: 'IconSun'};
var author$project$Database$Skill$APlusPlus = {$: 'APlusPlus'};
var author$project$Database$Skill$BMinus = {$: 'BMinus'};
var author$project$Database$Skill$BPlus = {$: 'BPlus'};
var author$project$Database$Skill$D = {$: 'D'};
var author$project$Database$Skill$E = {$: 'E'};
var author$project$Database$Skill$EMinus = {$: 'EMinus'};
var author$project$Database$Passive$divinity = A3(
	author$project$Database$Passive$passive,
	'Divine',
	author$project$Database$Base$IconSun,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DamageUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$APlusPlus, 230),
					_Utils_Tuple2(author$project$Database$Skill$A, 200),
					_Utils_Tuple2(author$project$Database$Skill$BPlus, 185),
					_Utils_Tuple2(author$project$Database$Skill$B, 175),
					_Utils_Tuple2(author$project$Database$Skill$BMinus, 170),
					_Utils_Tuple2(author$project$Database$Skill$C, 150),
					_Utils_Tuple2(author$project$Database$Skill$D, 125),
					_Utils_Tuple2(author$project$Database$Skill$E, 100),
					_Utils_Tuple2(author$project$Database$Skill$EMinus, 95)
				]))
		]));
var author$project$Database$Base$IconDash = {$: 'IconDash'};
var author$project$Database$Skill$APlus = {$: 'APlus'};
var author$project$Database$Skill$CritUp = {$: 'CritUp'};
var author$project$Database$Passive$independentAction = A3(
	author$project$Database$Passive$passive,
	'Independent Action',
	author$project$Database$Base$IconDash,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$CritUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 12),
					_Utils_Tuple2(author$project$Database$Skill$APlus, 11),
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$C, 6)
				]))
		]));
var author$project$Database$Base$IconDiamonds = {$: 'IconDiamonds'};
var author$project$Database$Skill$CPlus = {$: 'CPlus'};
var author$project$Database$Skill$DPlus = {$: 'DPlus'};
var author$project$Database$Passive$magicResistance = A3(
	author$project$Database$Passive$passive,
	'Magic Resistance',
	author$project$Database$Base$IconDiamonds,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffResist,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 25),
					_Utils_Tuple2(author$project$Database$Skill$APlus, 21),
					_Utils_Tuple2(author$project$Database$Skill$A, 20),
					_Utils_Tuple2(author$project$Database$Skill$BPlus, 18),
					_Utils_Tuple2(author$project$Database$Skill$BPlus, 18),
					_Utils_Tuple2(author$project$Database$Skill$B, 17.5),
					_Utils_Tuple2(author$project$Database$Skill$CPlus, 15.5),
					_Utils_Tuple2(author$project$Database$Skill$C, 15),
					_Utils_Tuple2(author$project$Database$Skill$DPlus, 13),
					_Utils_Tuple2(author$project$Database$Skill$D, 12.5),
					_Utils_Tuple2(author$project$Database$Skill$E, 10)
				]))
		]));
var author$project$Database$Base$IconHorse = {$: 'IconHorse'};
var author$project$Database$Skill$Performance = function (a) {
	return {$: 'Performance', a: a};
};
var author$project$Database$Passive$riding = A3(
	author$project$Database$Passive$passive,
	'Riding',
	author$project$Database$Base$IconHorse,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 12),
					_Utils_Tuple2(author$project$Database$Skill$APlusPlus, 11.5),
					_Utils_Tuple2(author$project$Database$Skill$APlus, 11),
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$CPlus, 7),
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$E, 2)
				]))
		]));
var author$project$Database$Base$IconMagicCircle = {$: 'IconMagicCircle'};
var author$project$Database$Passive$territoryCreation = A3(
	author$project$Database$Passive$passive,
	'Territory Creation',
	author$project$Database$Base$IconMagicCircle,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 12),
					_Utils_Tuple2(author$project$Database$Skill$APlusPlus, 11.5),
					_Utils_Tuple2(author$project$Database$Skill$APlus, 11),
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$CPlus, 7),
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$D, 4)
				]))
		]));
var author$project$Database$Servant$Ascension = F4(
	function (a, b, c, d) {
		return {$: 'Ascension', a: a, b: b, c: c, d: d};
	});
var author$project$Database$Servant$Deck = F5(
	function (a, b, c, d, e) {
		return {$: 'Deck', a: a, b: b, c: c, d: d, e: e};
	});
var author$project$Database$Servant$Reinforcement = F8(
	function (a, b, c, d, e, f, g, h) {
		return {$: 'Reinforcement', a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h};
	});
var author$project$Database$Servant$Welfare = function (a) {
	return {$: 'Welfare', a: a};
};
var author$project$Database$Skill$AlliesType = function (a) {
	return {$: 'AlliesType', a: a};
};
var author$project$Database$Skill$AttackDown = {$: 'AttackDown'};
var author$project$Database$Skill$AttackUp = {$: 'AttackUp'};
var author$project$Database$Skill$AttackVs = function (a) {
	return {$: 'AttackVs', a: a};
};
var author$project$Database$Skill$CMinus = {$: 'CMinus'};
var author$project$Database$Skill$CPlusPlus = {$: 'CPlusPlus'};
var author$project$Database$Skill$Chance = F2(
	function (a, b) {
		return {$: 'Chance', a: a, b: b};
	});
var author$project$Database$Skill$Chances = F3(
	function (a, b, c) {
		return {$: 'Chances', a: a, b: b, c: c};
	});
var author$project$Database$Skill$Charm = {$: 'Charm'};
var author$project$Database$Skill$CritChance = {$: 'CritChance'};
var author$project$Database$Skill$CritDown = {$: 'CritDown'};
var author$project$Database$Skill$Damage = {$: 'Damage'};
var author$project$Database$Skill$DamagePoison = {$: 'DamagePoison'};
var author$project$Database$Skill$DamageThruDef = {$: 'DamageThruDef'};
var author$project$Database$Skill$DamageVs = function (a) {
	return {$: 'DamageVs', a: a};
};
var author$project$Database$Skill$Debuff = F4(
	function (a, b, c, d) {
		return {$: 'Debuff', a: a, b: b, c: c, d: d};
	});
var author$project$Database$Skill$DebuffVuln = {$: 'DebuffVuln'};
var author$project$Database$Skill$DefenseDown = {$: 'DefenseDown'};
var author$project$Database$Skill$DefenseUp = {$: 'DefenseUp'};
var author$project$Database$Skill$DemeritDamage = {$: 'DemeritDamage'};
var author$project$Database$Skill$DemeritGauge = {$: 'DemeritGauge'};
var author$project$Database$Skill$DemeritKill = {$: 'DemeritKill'};
var author$project$Database$Skill$Enemies = {$: 'Enemies'};
var author$project$Database$Skill$EnemiesType = function (a) {
	return {$: 'EnemiesType', a: a};
};
var author$project$Database$Skill$Enemy = {$: 'Enemy'};
var author$project$Database$Skill$EnemyType = function (a) {
	return {$: 'EnemyType', a: a};
};
var author$project$Database$Skill$Evasion = {$: 'Evasion'};
var author$project$Database$Skill$Full = {$: 'Full'};
var author$project$Database$Skill$GainStars = {$: 'GainStars'};
var author$project$Database$Skill$GaugeDown = {$: 'GaugeDown'};
var author$project$Database$Skill$GaugeUp = {$: 'GaugeUp'};
var author$project$Database$Skill$Guts = {$: 'Guts'};
var author$project$Database$Skill$Heal = {$: 'Heal'};
var author$project$Database$Skill$HealPerTurn = {$: 'HealPerTurn'};
var author$project$Database$Skill$IgnoreInvinc = {$: 'IgnoreInvinc'};
var author$project$Database$Skill$Kill = {$: 'Kill'};
var author$project$Database$Skill$LastStand = {$: 'LastStand'};
var author$project$Database$Skill$MaxHP = {$: 'MaxHP'};
var author$project$Database$Skill$NPDown = {$: 'NPDown'};
var author$project$Database$Skill$NPGen = {$: 'NPGen'};
var author$project$Database$Skill$NPUp = {$: 'NPUp'};
var author$project$Database$Skill$Party = {$: 'Party'};
var author$project$Database$Skill$Poison = {$: 'Poison'};
var author$project$Database$Skill$Range = F2(
	function (a, b) {
		return {$: 'Range', a: a, b: b};
	});
var author$project$Database$Skill$RemoveBuffs = {$: 'RemoveBuffs'};
var author$project$Database$Skill$RemoveMental = {$: 'RemoveMental'};
var author$project$Database$Skill$Resist = function (a) {
	return {$: 'Resist', a: a};
};
var author$project$Database$Skill$SealNP = {$: 'SealNP'};
var author$project$Database$Skill$SealSkills = {$: 'SealSkills'};
var author$project$Database$Skill$StarAbsorb = {$: 'StarAbsorb'};
var author$project$Database$Skill$StarUp = {$: 'StarUp'};
var author$project$Database$Skill$StarsPerTurn = {$: 'StarsPerTurn'};
var author$project$Database$Skill$Stun = {$: 'Stun'};
var author$project$Database$Skill$SureHit = {$: 'SureHit'};
var author$project$Database$Skill$Times = F2(
	function (a, b) {
		return {$: 'Times', a: a, b: b};
	});
var author$project$Database$Skill$To = F3(
	function (a, b, c) {
		return {$: 'To', a: a, b: b, c: c};
	});
var author$project$Database$Skill$Unknown = {$: 'Unknown'};
var elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var author$project$Database$Servant$Archer$archers = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 10,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.34, npDef: 3, starRate: 7.9, starWeight: 153},
		hits: {arts: 5, buster: 5, ex: 8, quick: 5},
		id: 12,
		limited: true,
		name: 'Gilgamesh',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$E),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$APlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Star of Creation that Divided Heaven and Earth',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$NPUp,
					author$project$Database$Skill$Flat(30)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-World',
			name: 'Enuma Elish',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$EnumaElish),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10.5, 21))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Collector',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1897, hp: 1920},
			grail: {atk: 13442, hp: 14348},
			max: {atk: 12280, hp: 13097}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 20)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Archer,
		curve: 5,
		death: 25.8,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.59, npDef: 3, starRate: 8, starWeight: 153},
		hits: {arts: 3, buster: 3, ex: 5, quick: 4},
		id: 129,
		limited: true,
		name: 'Altria Pendragon (Archer)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A),
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Shining Sunlight—Sword of Promised Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(70),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Unit',
			name: 'Excalibur Viviane',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 10),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 11),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Summer Splash!',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 5000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritGauge,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Beach House Protection',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 18)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Male),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 18, 38))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Beach Flower',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1742, hp: 2134},
			grail: {atk: 12343, hp: 15943},
			max: {atk: 11276, hp: 14553}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$Arthur, author$project$Database$Base$Dragon, author$project$Database$Base$King, author$project$Database$Base$Saberface])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Archer,
		curve: 10,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.87, npDef: 3, starRate: 7.9, starWeight: 147},
		hits: {arts: 2, buster: 1, ex: 3, quick: 3},
		id: 77,
		limited: false,
		name: 'Nikola Tesla',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Legend of Mankind: Advent of Lightning',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A2(
					author$project$Database$Skill$Chance,
					40,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(500))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Fortress',
			name: 'System Keraunos',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$HeavenOrEarth),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 15),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Galvanism',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$NPUp),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Inherent Wisdom',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Pioneer of the Stars',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1820, hp: 2027},
			grail: {atk: 12896, hp: 15146},
			max: {atk: 11781, hp: 13825}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 25,
		death: 27,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1, npDef: 3, starRate: 8, starWeight: 153},
		hits: {arts: 1, buster: 1, ex: 4, quick: 3},
		id: 60,
		limited: false,
		name: 'Orion',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Moon Goddess\'s Arrows of Love and Romance',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 1800)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$GaugeDown,
					author$project$Database$Skill$Flat(1))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Personnel',
			name: 'Tri-Star Amore Mio',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Grace of the Goddess',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Male),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Punish the Unfaithful',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 17, 34))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$BMinus
			}
			]),
		stats: {
			base: {atk: 1716, hp: 2134},
			grail: {atk: 12158, hp: 15943},
			max: {atk: 11107, hp: 14553}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$GreekMythMale, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 25,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.51, npDef: 3, starRate: 8, starWeight: 154},
		hits: {arts: 3, buster: 3, ex: 5, quick: 2},
		id: 84,
		limited: false,
		name: 'Arjuna',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Raised Hand of the Destruction God',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					author$project$Database$Skill$Flat(50)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$EnemiesType(author$project$Database$Base$Divine),
					author$project$Database$Skill$Kill,
					author$project$Database$Skill$Flat(80))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Pashupata',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 22),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Clairvoyance',
				rank: author$project$Database$Skill$CPlus
			},
				{
				cd: 12,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						5,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 4, 8))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Hero of the Endowed',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst (Flame)',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1907, hp: 1940},
			grail: {atk: 13510, hp: 14494},
			max: {atk: 12342, hp: 13230}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: author$project$Database$Servant$Welfare('Heart Bracelet'),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 9,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.38, npDef: 3, starRate: 8, starWeight: 148},
		hits: {arts: 6, buster: 2, ex: 4, quick: 3},
		id: 137,
		limited: true,
		name: 'Chloe von Einzbern',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Kakuyoku San-Ren',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 6,
			kind: 'Anti-Unit',
			name: 'Triple Crane Wings',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 9),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 20, 35)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 20, 35)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 35))
					]),
				icon: author$project$Database$Base$IconAllUp,
				name: 'Projection',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Kissing Freak',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1640, hp: 1746},
			grail: {atk: 11920, hp: 13239},
			max: {atk: 9845, hp: 10914}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$PseudoServant, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: author$project$Database$Servant$Welfare('Golden Skull'),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Archer,
		curve: 14,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.43, npDef: 3, starRate: 7.9, starWeight: 150},
		hits: {arts: 4, buster: 4, ex: 5, quick: 2},
		id: 69,
		limited: true,
		name: 'Oda Nobunaga',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Three Thousand Worlds',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Army',
			name: 'Three Line Formation',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Riding),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Strategy',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Divine),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Unifying the Nation by Force',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'The Demonic King',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1862, hp: 1582},
			grail: {atk: 11495, hp: 14110},
			max: {atk: 9494, hp: 11637}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Archer,
		curve: 14,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.58, npDef: 3, starRate: 8.1, starWeight: 145},
		hits: {arts: 3, buster: 5, ex: 6, quick: 4},
		id: 122,
		limited: false,
		name: 'Tristan',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Fantasia of Lamentation',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: false,
			hits: 7,
			kind: 'Anti-Army',
			name: 'Failnaught',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 15),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 60)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveMental, author$project$Database$Skill$Full),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 200, 600))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Harp of Healing',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Grace of the Unexpected Birth',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconCircuits,
				name: 'Admonishment of the King of Knights',
				rank: author$project$Database$Skill$Unknown
			}
			]),
		stats: {
			base: {atk: 1622, hp: 1862},
			grail: {atk: 11787, hp: 14110},
			max: {atk: 9735, hp: 11637}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Archer,
		curve: 14,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.51, npDef: 3, starRate: 7.9, starWeight: 145},
		hits: {arts: 3, buster: 1, ex: 5, quick: 2},
		id: 11,
		limited: false,
		name: 'EMIYA',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Infinite Creation of Swords',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 10,
			kind: 'Unknown',
			name: 'Unlimited Blade Works',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 40)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (True)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 16, 32))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Clairvoyance',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 25, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 25, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 25, 40))
					]),
				icon: author$project$Database$Base$IconAllUp,
				name: 'Projection',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1566, hp: 1843},
			grail: {atk: 11379, hp: 13969},
			max: {atk: 9398, hp: 11521}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Archer,
		curve: 9,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.5, npDef: 3, starRate: 8, starWeight: 148},
		hits: {arts: 2, buster: 1, ex: 3, quick: 3},
		id: 14,
		limited: false,
		name: 'Atalante',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Complaint Message on the Arrow',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 800, 1200))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Army',
			name: 'Phoebus Catastrophe',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Beyond Arcadia',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Hunter\'s Aesthetic',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Calydonian Hunt',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1438, hp: 1996},
			grail: {atk: 10453, hp: 15127},
			max: {atk: 8633, hp: 12476}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Archer,
		curve: 29,
		death: 40.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.85, npDef: 3, starRate: 8.1, starWeight: 153},
		hits: {arts: 2, buster: 1, ex: 5, quick: 3},
		id: 131,
		limited: true,
		name: 'Anne Bonny & Mary Read (Archer)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Bond of Lovebirds',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$LastStand,
					author$project$Database$Skill$Flat(600))
				]),
			first: false,
			hits: 9,
			kind: 'Anti-Unit',
			name: 'Caribbean Free Bird Act 2',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$CPlusPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 45),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9.5, 19.5)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Male),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 21, 41))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Beach Flower',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Treasure Hunt (Sea)',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8.5, 25.5)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffVuln,
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Pirate\'s Glory',
				rank: author$project$Database$Skill$CPlus
			}
			]),
		stats: {
			base: {atk: 1574, hp: 1843},
			grail: {atk: 11437, hp: 13969},
			max: {atk: 9446, hp: 11521}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 16),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Archer,
		curve: 3,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.87, npDef: 3, starRate: 8, starWeight: 150},
		hits: {arts: 2, buster: 1, ex: 3, quick: 3},
		id: 13,
		limited: false,
		name: 'Robin Hood',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Bow of Prayer',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Yew Bow',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamagePoison,
					A2(author$project$Database$Skill$Range, 200, 250))
				]),
			rank: author$project$Database$Skill$D
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						5,
						author$project$Database$Skill$Poison,
						author$project$Database$Skill$Flat(500))
					]),
				icon: author$project$Database$Base$IconSwordDown,
				name: 'Sabotage',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 12, 30))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$E
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'May King',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1247, hp: 1833},
			grail: {atk: 9088, hp: 13812},
			max: {atk: 6715, hp: 10187}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 3,
		death: 22.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.9, npDef: 3, starRate: 7.9, starWeight: 156},
		hits: {arts: 2, buster: 1, ex: 3, quick: 3},
		id: 15,
		limited: false,
		name: 'Euryale',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$APlus),
				author$project$Database$Passive$coreOfGoddess(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Gaze of the Goddess',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					author$project$Database$Skill$Flat(1200)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Male),
					A2(author$project$Database$Skill$Range, 150, 250)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 3, author$project$Database$Skill$AttackDown),
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Eye of the Euryale',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					200,
					A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
						1,
						author$project$Database$Skill$Charm,
						author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Vampirism',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						70,
						100,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Siren Song',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Whim of the Goddess',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1306, hp: 1711},
			grail: {atk: 9517, hp: 12889},
			max: {atk: 7032, hp: 9506}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Archer,
		curve: 1,
		death: 45,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 8, starWeight: 147},
		hits: {arts: 2, buster: 1, ex: 3, quick: 3},
		id: 16,
		limited: false,
		name: 'Arash',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Streaking Meteor',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 800, 1200)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$DemeritKill, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Stella',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 0, 800))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 1,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Resist(author$project$Database$Skill$Poison),
						A2(author$project$Database$Skill$Range, 80, 160))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Toughness',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Clairvoyance',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Arrow Construction',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1057, hp: 1424},
			grail: {atk: 9037, hp: 10979},
			max: {atk: 5816, hp: 7122}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 23,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.76, npDef: 3, starRate: 8, starWeight: 153},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 63,
		limited: false,
		name: 'David',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Five Stones',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Hamesh Avanim',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					200,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$CMinus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Divine Protection',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveMental, author$project$Database$Skill$Full),
						A2(
						author$project$Database$Skill$Times,
						1,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 300, 800))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Harp of Healing',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1436, hp: 1555},
			grail: {atk: 10470, hp: 11719},
			max: {atk: 7736, hp: 8643}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Archer,
		curve: 8,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.62, npDef: 3, starRate: 7.9, starWeight: 153},
		hits: {arts: 3, buster: 3, ex: 3, quick: 3},
		id: 95,
		limited: false,
		name: 'Gilgamesh (Child)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$E),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'King\'s Treasury',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Unit',
			name: 'Gate of Babylon',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$NPDown,
					A2(author$project$Database$Skill$Range, 50, 90)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$CritDown,
					A2(author$project$Database$Skill$Range, 50, 90)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10.5, 21))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						45,
						75,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Human),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Fair Youth',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1429, hp: 1571},
			grail: {atk: 10415, hp: 11838},
			max: {atk: 7696, hp: 8731}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Archer,
		curve: 3,
		death: 45,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.56, npDef: 3, starRate: 8, starWeight: 150},
		hits: {arts: 3, buster: 4, ex: 4, quick: 2},
		id: 105,
		limited: false,
		name: 'Billy the Kid',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$CPlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Discordant Thunderclap',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Unit',
			name: 'Thunderer',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$CPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 60, 120))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Marksmanship',
				rank: author$project$Database$Skill$APlusPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Quick Draw',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 16, 32))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1279, hp: 1711},
			grail: {atk: 9325, hp: 12889},
			max: {atk: 6890, hp: 9506}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Archer),
					10),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Archer,
		curve: 28,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.57, npDef: 3, starRate: 7.8, starWeight: 150},
		hits: {arts: 3, buster: 1, ex: 5, quick: 2},
		id: 125,
		limited: false,
		name: 'Tawara Touta',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'O Great Bodhisattva of Arms, I beseech thy blessing upon this arrow!',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: true,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Hachiman Prayer',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Demonic),
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Archer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Archer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 12),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Protection of the Dragon King',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						2,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 7, 14))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Protection from Arrows',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$MaxHP,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconHPUp,
				name: 'Inexhaustible Straw Bag',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1306, hp: 1764},
			grail: {atk: 9517, hp: 13287},
			max: {atk: 7032, hp: 9800}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	}
	]);
var author$project$Database$Base$Assassin = {$: 'Assassin'};
var author$project$Database$Base$IconBullseye = {$: 'IconBullseye'};
var author$project$Database$Base$IconCrosshairUp = {$: 'IconCrosshairUp'};
var author$project$Database$Base$IconExclamationDown = {$: 'IconExclamationDown'};
var author$project$Database$Base$IconHoodDown = {$: 'IconHoodDown'};
var author$project$Database$Base$IconMystic = {$: 'IconMystic'};
var author$project$Database$Base$IconReaperUp = {$: 'IconReaperUp'};
var author$project$Database$Base$IconShieldBreak = {$: 'IconShieldBreak'};
var author$project$Database$Base$IconShieldDown = {$: 'IconShieldDown'};
var author$project$Database$Base$IconStaffUp = {$: 'IconStaffUp'};
var author$project$Database$Base$IconStar = {$: 'IconStar'};
var author$project$Database$Base$IconStarTurn = {$: 'IconStarTurn'};
var author$project$Database$Base$IconStun = {$: 'IconStun'};
var author$project$Database$Base$IconYinYang = {$: 'IconYinYang'};
var author$project$Database$Base$LampOfEvilSealing = {$: 'LampOfEvilSealing'};
var author$project$Database$Base$Saber = {$: 'Saber'};
var author$project$Database$Passive$cosmoReactor = A3(
	author$project$Database$Passive$passive,
	'Cosmo Reactor',
	author$project$Database$Base$IconStarHaloUp,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$StarUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8)
				]))
		]));
var author$project$Database$Base$IconTeeth = {$: 'IconTeeth'};
var author$project$Database$Skill$EPlus = {$: 'EPlus'};
var author$project$Database$Passive$madness = A3(
	author$project$Database$Passive$passive,
	'Madness Enhancement',
	author$project$Database$Base$IconTeeth,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 12),
					_Utils_Tuple2(author$project$Database$Skill$APlus, 11),
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$DPlus, 5),
					_Utils_Tuple2(author$project$Database$Skill$D, 4),
					_Utils_Tuple2(author$project$Database$Skill$EPlus, 3),
					_Utils_Tuple2(author$project$Database$Skill$E, 2),
					_Utils_Tuple2(author$project$Database$Skill$EMinus, 1)
				]))
		]));
var author$project$Database$Base$IconMask = {$: 'IconMask'};
var author$project$Database$Passive$presenceConcealment = A3(
	author$project$Database$Passive$passive,
	'Presence Concealment',
	author$project$Database$Base$IconMask,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$StarUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$APlus, 10.5),
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$CPlus, 6.5),
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$CMinus, 5.5),
					_Utils_Tuple2(author$project$Database$Skill$D, 4),
					_Utils_Tuple2(author$project$Database$Skill$E, 2)
				]))
		]));
var author$project$Database$Skill$AlignAffinity = function (a) {
	return {$: 'AlignAffinity', a: a};
};
var author$project$Database$Skill$Ally = {$: 'Ally'};
var author$project$Database$Skill$BecomeHyde = {$: 'BecomeHyde'};
var author$project$Database$Skill$ClassAffinity = function (a) {
	return {$: 'ClassAffinity', a: a};
};
var author$project$Database$Skill$Confusion = {$: 'Confusion'};
var author$project$Database$Skill$DamageDown = {$: 'DamageDown'};
var author$project$Database$Skill$DeathDown = {$: 'DeathDown'};
var author$project$Database$Skill$DebuffSuccess = {$: 'DebuffSuccess'};
var author$project$Database$Skill$DemeritBuffs = {$: 'DemeritBuffs'};
var author$project$Database$Skill$KillUp = {$: 'KillUp'};
var author$project$Database$Skill$MentalResist = {$: 'MentalResist'};
var author$project$Database$Skill$MentalSuccess = {$: 'MentalSuccess'};
var author$project$Database$Skill$Others = {$: 'Others'};
var author$project$Database$Skill$RemoveDebuffs = {$: 'RemoveDebuffs'};
var author$project$Database$Skill$StarAffinity = function (a) {
	return {$: 'StarAffinity', a: a};
};
var author$project$Database$Skill$StunBomb = {$: 'StunBomb'};
var author$project$Database$Skill$Success = function (a) {
	return {$: 'Success', a: a};
};
var author$project$Database$Skill$Taunt = {$: 'Taunt'};
var author$project$Database$Skill$When = F2(
	function (a, b) {
		return {$: 'When', a: a, b: b};
	});
var author$project$Database$Servant$Assassin$assassins = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Assassin,
		curve: 25,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 4, starRate: 25.5, starWeight: 97},
		hits: {arts: 2, buster: 2, ex: 4, quick: 5},
		id: 75,
		limited: false,
		name: 'Jack the Ripper',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Holy Mother of Dismemberment',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 1400, 2200))
				]),
			first: true,
			hits: 4,
			kind: 'Anti-Personnel',
			name: 'Maria the Ripper',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Female),
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			rank: author$project$Database$Skill$DPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Murder on a Misty Night',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconCircuits,
				name: 'Information Erasure',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 2500))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Surgery',
				rank: author$project$Database$Skill$E
			}
			]),
		stats: {
			base: {atk: 1786, hp: 1862},
			grail: {atk: 12651, hp: 13909},
			max: {atk: 11557, hp: 12696}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Assassin,
		curve: 25,
		death: 31.6,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.55, npDef: 4, starRate: 25, starWeight: 98},
		hits: {arts: 3, buster: 1, ex: 6, quick: 4},
		id: 112,
		limited: true,
		name: 'Shuten-Douji',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DebuffVuln,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$NPDown,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Multicolored Poison—Shinpen Kidoku',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Poison,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Chance,
						60,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Intoxicating Aroma of Fruits',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Demonic Nature of Oni',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1200, 2700))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$APlus
			}
			]),
		stats: {
			base: {atk: 1853, hp: 1881},
			grail: {atk: 13128, hp: 14050},
			max: {atk: 11993, hp: 12825}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Demonic, author$project$Database$Base$EnumaElish, author$project$Database$Base$Divine, author$project$Database$Base$Dragon])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Assassin,
		curve: 5,
		death: 38.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.81, npDef: 4, starRate: 25.6, starWeight: 98},
		hits: {arts: 2, buster: 1, ex: 4, quick: 4},
		id: 86,
		limited: true,
		name: 'Mysterious Heroine X',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$riding(author$project$Database$Skill$EX),
				author$project$Database$Passive$cosmoReactor(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Sword of Unnamed Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			first: false,
			hits: 12,
			kind: 'Anti-Unit',
			name: 'Secret Calibur',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Saberface),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						80,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$StunBomb, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Fire Support',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$CPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$ClassAffinity(author$project$Database$Base$Saber),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAffinity(author$project$Database$Base$Saber),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Galactic Meteor Sword',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1817, hp: 1862},
			grail: {atk: 12874, hp: 13909},
			max: {atk: 11761, hp: 12696}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$Arthur, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: author$project$Database$Servant$Welfare('Sharp Knife'),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 4,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.8, npDef: 4, starRate: 25.6, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 5, quick: 4},
		id: 92,
		limited: true,
		name: 'Ryougi Shiki (Assassin)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$C),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Yuishiki・Chokushi no Magan',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: true,
			hits: 3,
			kind: 'Anti-Unit',
			name: 'Vijñāpti-mātratā—Mystic Eyes of Death Perception',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 100, 140))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 15),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$DeathDown,
						A2(author$project$Database$Skill$Range, 80, 100))
					]),
				icon: author$project$Database$Base$IconMystic,
				name: 'Mystic Eyes of Death Perception',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritDamage,
						author$project$Database$Skill$Flat(1000))
					]),
				icon: author$project$Database$Base$IconYinYang,
				name: 'Yin-Yang',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1477, hp: 1768},
			grail: {atk: 10736, hp: 13404},
			max: {atk: 8867, hp: 11055}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$PseudoServant])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Assassin,
		curve: 14,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 2.15, npDef: 4, starRate: 25.2, starWeight: 98},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 46,
		limited: false,
		name: 'Carmilla',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Phantasmal Iron Maiden',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					author$project$Database$Skill$Flat(2000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Phantom Maiden',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Female),
					A2(author$project$Database$Skill$Range, 120, 170))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 45),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Vampirism',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconShieldDown,
				name: 'Torture Technique',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 10))
					]),
				icon: author$project$Database$Base$IconExclamationDown,
				name: 'Bath of Fresh Blood',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1568, hp: 1675},
			grail: {atk: 11391, hp: 12698},
			max: {atk: 9408, hp: 10473}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 24,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.46, npDef: 4, starRate: 25.6, starWeight: 97},
		hits: {arts: 2, buster: 6, ex: 8, quick: 4},
		id: 109,
		limited: false,
		name: 'Emiya (Assassin)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$APlus),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Gather Ye Rosebuds While Ye May',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$GaugeDown,
					author$project$Database$Skill$Flat(1))
				]),
			first: false,
			hits: 15,
			kind: 'Anti-Unit',
			name: 'Chronos Rose',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 24, 40))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Magecraft',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Others,
						3,
						author$project$Database$Skill$DebuffVuln,
						author$project$Database$Skill$Flat(20))
					]),
				icon: author$project$Database$Base$IconShieldBreak,
				name: 'Affection of the Holy Grail',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Scapegoat',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1493, hp: 1786},
			grail: {atk: 10846, hp: 13541},
			max: {atk: 8958, hp: 11168}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: author$project$Database$Servant$Welfare('Bell-Ringing Branch'),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Assassin,
		curve: 4,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.71, npDef: 4, starRate: 25.6, starWeight: 98},
		hits: {arts: 3, buster: 3, ex: 5, quick: 3},
		id: 133,
		limited: true,
		name: 'Scathach (Assassin)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$E)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Soaring Spear of Kicked Piercing Death',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Gáe Bolg Alternative',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 6),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						100,
						300,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Beach Crisis',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$DamageDown,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Primordial Rune (Sea)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconShieldBreak,
				name: 'Midsummer Mistake',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1851, hp: 1786},
			grail: {atk: 10956, hp: 13541},
			max: {atk: 9049, hp: 11168}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$King, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Assassin,
		curve: 4,
		death: 27.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 2.26, npDef: 4, starRate: 25, starWeight: 104},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 41,
		limited: false,
		name: 'Stheno',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$APlus),
				author$project$Database$Passive$coreOfGoddess(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Goddess\' Smile',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 100, 150)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 3, author$project$Database$Skill$DefenseDown),
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Personnel',
			name: 'Smile of the Stheno',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					200,
					A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
						1,
						author$project$Database$Skill$Charm,
						author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Vampirism',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						70,
						100,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Siren Song',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Divine),
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Whim of the Goddess',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1497, hp: 1843},
			grail: {atk: 10879, hp: 13965},
			max: {atk: 8985, hp: 11518}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 8,
		death: 38.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.54, npDef: 4, starRate: 25.6, starWeight: 100},
		hits: {arts: 4, buster: 1, ex: 4, quick: 4},
		id: 117,
		limited: false,
		name: 'Fuuma \"Evil-wind\" Kotarou',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Fumetsu no Konton Ryodan',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Immortal Chaos Brigade',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Confusion,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$AttackDown,
						author$project$Database$Skill$Flat(10)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconSwordDown,
				name: 'Sabotage',
				rank: author$project$Database$Skill$BPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Ninjutsu',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						1,
						author$project$Database$Skill$DebuffVuln,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconHoodDown,
				name: 'Suspicious Shadow',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1316, hp: 1592},
			grail: {atk: 9597, hp: 11991},
			max: {atk: 7091, hp: 8844}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 2),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 6,
		death: 55,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.05, npDef: 4, starRate: 25.3, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 39,
		limited: false,
		name: 'Sasaki Kojirou',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Hiken—Tsubame Gaeshi',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Personnel',
			name: 'Swallow Reversal',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			rank: author$project$Database$Skill$Unknown
		},
		rarity: 1,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					2),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveMental, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Vitrify',
				rank: author$project$Database$Skill$BPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconBullseye,
				name: 'Knowledge of the Sowa',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1042, hp: 1244},
			grail: {atk: 8912, hp: 9588},
			max: {atk: 5735, hp: 6220}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					3),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 2,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 4, starRate: 25.2, starWeight: 97},
		hits: {arts: 2, buster: 1, ex: 3, quick: 3},
		id: 40,
		limited: false,
		name: 'Hassan of the Cursed Arm',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Delusional Heartbeat',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Zabaniya',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 80, 120))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					3),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 9),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 3, 12))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Throw (Dagger)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Self-Modification',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Protection Against the Wind',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1114, hp: 1429},
			grail: {atk: 9100, hp: 10960},
			max: {atk: 6280, hp: 7594}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good, author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Assassin,
		curve: 23,
		death: 55,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 1.05, npDef: 4, starRate: 25.6, starWeight: 99},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 81,
		limited: false,
		name: 'Henry Jekyll & Hyde',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$A),
				author$project$Database$Passive$madness(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Secret Game of Sin',
			effect: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$BecomeHyde, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$MaxHP,
					A2(author$project$Database$Skill$Range, 3000, 6000)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$Heal, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Personnel',
			name: 'Dangerous Game',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 40, 80))
				]),
			rank: author$project$Database$Skill$CPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('transformed into Hyde'),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 25, 35))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Monstrous Strength',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							0,
							author$project$Database$Skill$Success(author$project$Database$Skill$Stun)),
						A2(author$project$Database$Skill$Range, 5, 15)),
						A3(
						elm$core$Basics$composeL,
						A2(
							elm$core$Basics$composeL,
							author$project$Database$Skill$When('transformed into Hyde'),
							author$project$Database$Skill$Times(1)),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							0,
							author$project$Database$Skill$Success(author$project$Database$Skill$Stun)),
						A2(author$project$Database$Skill$Range, 85, 135)),
						A2(
						author$project$Database$Skill$Chance,
						10,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Panicky Voice',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('transformed into Hyde'),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
						A2(author$project$Database$Skill$Range, 25, 35))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Self-Modification',
				rank: author$project$Database$Skill$D
			}
			]),
		stats: {
			base: {atk: 1173, hp: 1741},
			grail: {atk: 8553, hp: 13118},
			max: {atk: 6320, hp: 9675}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 8,
		death: 55,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.05, npDef: 4, starRate: 25.2, starWeight: 98},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 42,
		limited: false,
		name: 'Jing Ke',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(1000))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'All I Do Is Kill',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						author$project$Database$Skill$Flat(200)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Restrain',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Planning',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Insolent',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1338, hp: 1492},
			grail: {atk: 9754, hp: 11244},
			max: {atk: 7207, hp: 8293}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					3),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 1),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 12,
		death: 49.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.06, npDef: 4, starRate: 24.8, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 43,
		limited: false,
		name: 'Charles-Henri Sanson',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Death is Hope For Tomorrow',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'La Mort Espoir',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 30, 80)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 9),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AlignAffinity(author$project$Database$Base$Evil),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Executioner',
				rank: author$project$Database$Skill$APlusPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Ally, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Medicine',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Human),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Human Study',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 968, hp: 1568},
			grail: {atk: 7906, hp: 11991},
			max: {atk: 5456, hp: 8309}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 28,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.48, npDef: 4, starRate: 25.5, starWeight: 97},
		hits: {arts: 3, buster: 1, ex: 6, quick: 3},
		id: 110,
		limited: false,
		name: 'Hassan of the Hundred Personas',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Delusional Illusion',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 13,
			kind: 'Anti-Unit',
			name: 'Zabaniya',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Librarian of Knowledge',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(author$project$Database$Base$Buster)),
						author$project$Database$Skill$Flat(30)),
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(author$project$Database$Base$Quick)),
						author$project$Database$Skill$Flat(30)),
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(author$project$Database$Base$Arts)),
						author$project$Database$Skill$Flat(30)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconAllUp,
				name: 'Wide Specialization',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 4000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$DemeritBuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Battle Retreat',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1241, hp: 1675},
			grail: {atk: 9049, hp: 12623},
			max: {atk: 6686, hp: 9310}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 20),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 4),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 23,
		death: 44,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.53, npDef: 4, starRate: 25.6, starWeight: 102},
		hits: {arts: 3, buster: 4, ex: 5, quick: 3},
		id: 124,
		limited: false,
		name: 'Hassan of the Serenity',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$APlus),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Delusional Poison Body',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Poison,
					author$project$Database$Skill$Flat(1000)),
					A2(
					author$project$Database$Skill$Chance,
					40,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full)),
					A2(
					author$project$Database$Skill$Chance,
					40,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Unit',
			name: 'Zabaniya',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 60, 100))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1))
					]),
				icon: author$project$Database$Base$IconExclamationDown,
				name: 'Morph (Infiltration)',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 2, 12))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Throw (Dagger)',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$KillUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffSuccess,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconReaperUp,
				name: 'Dance of Silence',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1232, hp: 1675},
			grail: {atk: 8981, hp: 12623},
			max: {atk: 6636, hp: 9310}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Assassin,
		curve: 2,
		death: 49.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.71, npDef: 4, starRate: 25.2, starWeight: 98},
		hits: {arts: 3, buster: 2, ex: 3, quick: 2},
		id: 44,
		limited: false,
		name: 'Phantom of the Opera',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$presenceConcealment(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Love Song Resounding through Hell',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 900))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Christine Christine',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					6,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(14))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Innocent Monster',
				rank: author$project$Database$Skill$D
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						90,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Female),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Siren Song',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalSuccess,
						A2(author$project$Database$Skill$Range, 5, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconStaffUp,
				name: 'Mental Corruption',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1003, hp: 1580},
			grail: {atk: 8193, hp: 12112},
			max: {atk: 5654, hp: 8393}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Assassin,
		curve: 6,
		death: 55,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 2.1, npDef: 4, starRate: 24.6, starWeight: 98},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 45,
		limited: false,
		name: 'Mata Hari',
		passives: _List_Nil,
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'The Woman with Sunny Eyes',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					40,
					60,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Mata Hari',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 1,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Assassin),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Assassin),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 2),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Espionage',
				rank: author$project$Database$Skill$APlusPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						30,
						60,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemiesType(author$project$Database$Base$Male),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Pheromone',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconCircuits,
				name: 'Double-cross',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 977, hp: 1313},
			grail: {atk: 8355, hp: 10120},
			max: {atk: 5377, hp: 6565}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	}
	]);
var author$project$Database$Base$Beast = {$: 'Beast'};
var author$project$Database$Base$Berserker = {$: 'Berserker'};
var author$project$Database$Base$IconBeamUp = {$: 'IconBeamUp'};
var author$project$Database$Base$IconHealTurn = {$: 'IconHealTurn'};
var author$project$Database$Base$IconHoodUp = {$: 'IconHoodUp'};
var author$project$Database$Base$Mad = {$: 'Mad'};
var author$project$Database$Base$Roman = {$: 'Roman'};
var author$project$Database$Skill$BPlusPlus = {$: 'BPlusPlus'};
var author$project$Database$Skill$BuffFail = {$: 'BuffFail'};
var author$project$Database$Skill$Burn = {$: 'Burn'};
var author$project$Database$Skill$DefenseVs = function (a) {
	return {$: 'DefenseVs', a: a};
};
var author$project$Database$Skill$DemeritHealth = {$: 'DemeritHealth'};
var author$project$Database$Skill$OffensiveResist = {$: 'OffensiveResist'};
var author$project$Database$Servant$Berserker$berserkers = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 10,
		death: 52,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.69, npDef: 5, starRate: 5.1, starWeight: 9},
		hits: {arts: 3, buster: 3, ex: 5, quick: 4},
		id: 98,
		limited: false,
		name: 'Cu Chulainn (Alter)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Beast of Crunching Deathtusk',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: true,
			hits: 12,
			kind: 'Anti-Personnel',
			name: 'Curruid Coinchenn',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 30, 70)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 15),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 48)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconExclamationDown,
				name: 'Madness of the Spirits',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						2,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 7, 14))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Protection from Arrows',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1979, hp: 1790},
			grail: {atk: 14017, hp: 13377},
			max: {atk: 12805, hp: 12210}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Berserker,
		curve: 30,
		death: 39,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.46, npDef: 5, starRate: 4.9, starWeight: 9},
		hits: {arts: 4, buster: 1, ex: 5, quick: 3},
		id: 114,
		limited: true,
		name: 'Minamoto-no-Raikou',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$madness(author$project$Database$Skill$EX),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Inescapable Net of Heaven',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: true,
			hits: 7,
			kind: 'Anti-Army',
			name: 'Vengeful Lightning of the Ox-King',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 100, 300))
				]),
			rank: author$project$Database$Skill$BPlusPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 18),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Eternal Arms Mastery',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst (Lightning)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Demonic),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$HeavenOrEarth),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Mystic Slayer',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1786, hp: 1980},
			grail: {atk: 12650, hp: 14790},
			max: {atk: 11556, hp: 13500}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 9,
		death: 52,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.03, npDef: 5, starRate: 5, starWeight: 9},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 51,
		limited: true,
		name: 'Sakata Kintoki',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$E),
				author$project$Database$Passive$divinity(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Golden Impact',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Golden Spark',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					100,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$CMinus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 36),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Monstrous Strength',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Animal Communication',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 60, 120)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Natural Body',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1964, hp: 1782},
			grail: {atk: 13915, hp: 13311},
			max: {atk: 12712, hp: 12150}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 15,
		death: 45.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.5, npDef: 5, starRate: 4.9, starWeight: 9},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 52,
		limited: false,
		name: 'Vlad III',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Bloody Monster King',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Personnel',
			name: 'Kazikli Bey',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$CPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 48),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 54)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 80, 100),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Vampirism',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 16, 24))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1777, hp: 2019},
			grail: {atk: 12587, hp: 15086},
			max: {atk: 11499, hp: 13770}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 30,
		death: 56.8,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.77, npDef: 5, starRate: 5, starWeight: 10},
		hits: {arts: 2, buster: 1, ex: 5, quick: 6},
		id: 97,
		limited: false,
		name: 'Florence Nightingale',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'I Will Abstain From All Poisons and Evils',
			effect: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 3000, 5000))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Nightingale Pledge',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$NPDown,
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 11),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 4000))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Nurse of Steel',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Humanoid),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseVs(author$project$Database$Base$Humanoid),
						A2(author$project$Database$Skill$Range, 15, 25))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Understanding of the Human Body',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Angel\'s Cry',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1573, hp: 2232},
			grail: {atk: 11148, hp: 16675},
			max: {atk: 10184, hp: 15221}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Mad]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Berserker,
		curve: 9,
		death: 39,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 5, starRate: 5, starWeight: 10},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 47,
		limited: false,
		name: 'Heracles',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$B),
				author$project$Database$Passive$divinity(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Shooting Hundred Heads',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 15,
			kind: 'Unknown',
			name: 'Nine Lives',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 45),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10.5, 31)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 21, 42))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Valor',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1775, hp: 1652},
			grail: {atk: 12901, hp: 12521},
			max: {atk: 10655, hp: 10327}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish, author$project$Database$Base$GreekMythMale])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 24,
		death: 58.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.83, npDef: 5, starRate: 4.9, starWeight: 10},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 82,
		limited: false,
		name: 'Frankenstein',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Lightning Tree of Crucifixion',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1300)),
					A2(
					author$project$Database$Skill$Chance,
					500,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 2, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Blasted Tree',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 25, 45))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Galvanism',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Chance,
						60,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Wail of the Living Dead',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$Burn,
						author$project$Database$Skill$Flat(300))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Overload',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1573, hp: 1710},
			grail: {atk: 11431, hp: 12958},
			max: {atk: 9441, hp: 10687}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 29,
		death: 52,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.03, npDef: 5, starRate: 4.9, starWeight: 10},
		hits: {arts: 2, buster: 1, ex: 5, quick: 4},
		id: 116,
		limited: false,
		name: 'Ibaraki-Douji',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Rashoumon Dai Engi',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Great Grudge of Rashomon',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Demonic Nature of Oni',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Disengage',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1606, hp: 1752},
			grail: {atk: 11667, hp: 13282},
			max: {atk: 9636, hp: 10954}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Demonic, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Mad]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 14,
		death: 52,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.5, npDef: 5, starRate: 5, starWeight: 10},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 48,
		limited: false,
		name: 'Lancelot',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$E),
				author$project$Database$Passive$madness(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'A Knight Does Not Die with Empty Hands',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: true,
			hits: 10,
			kind: 'Anti-Personnel',
			name: 'Knight of Owner',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 15),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 48)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Eternal Arms Mastery',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Protection of the Spirits',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Mana Reversal',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1746, hp: 1652},
			grail: {atk: 12685, hp: 12521},
			max: {atk: 10477, hp: 10327}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 30)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 4,
		death: 58.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.68, npDef: 5, starRate: 4.9, starWeight: 10},
		hits: {arts: 3, buster: 1, ex: 4, quick: 3},
		id: 89,
		limited: false,
		name: 'Beowulf',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$EMinus)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Conflict Wellspring',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 700, 1100))
				]),
			first: false,
			hits: 12,
			kind: 'Anti-Personnel',
			name: 'Grendel Buster',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 18),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 48)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Berserk',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 4, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1707, hp: 1652},
			grail: {atk: 12407, hp: 12521},
			max: {atk: 10247, hp: 10327}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 9,
		death: 39,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.71, npDef: 5, starRate: 5, starWeight: 10},
		hits: {arts: 3, buster: 2, ex: 3, quick: 2},
		id: 58,
		limited: false,
		name: 'Tamamo Cat',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Opulence of Sun and Shine and Catnap',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Chance,
					500,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 2, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Personnel',
			name: 'Napping in the Dazzling Sunshine and Feasting',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 2000, 6000))
				]),
			rank: author$project$Database$Skill$D
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						2,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Monstrous Strength',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 40, 60),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Curse',
				rank: author$project$Database$Skill$E
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 18, 27))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1504, hp: 1833},
			grail: {atk: 10929, hp: 13893},
			max: {atk: 9026, hp: 11458}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Beast, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 8,
		death: 50.3,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.04, npDef: 5, starRate: 5, starWeight: 9},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 49,
		limited: false,
		name: 'Lu Bu Fengxian',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Five Weapons of the War God',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel/Anti-Army/Anti-Fortress',
			name: 'God Force',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					30,
					70,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 27)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Valor',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$BuffFail,
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Defiant',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						author$project$Database$Skill$Flat(3000)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Others,
						1,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(20))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Chaotic Villain',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1507, hp: 1494},
			grail: {atk: 10988, hp: 11256},
			max: {atk: 8119, hp: 8302}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 6,
		death: 65,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.01, npDef: 5, starRate: 4.9, starWeight: 9},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 50,
		limited: false,
		name: 'Spartacus',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Howl of the Wounded Beast',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Crying Warmonger',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 3000, 7000))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 1,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				icon: author$project$Database$Base$IconHealTurn,
				name: 'Honor of Suffering',
				rank: author$project$Database$Skill$BPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Unyielding Will',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Triumphant Return of the Sword',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 922, hp: 1544},
			grail: {atk: 7883, hp: 11904},
			max: {atk: 5073, hp: 7722}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Roman, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3),
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5),
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 1,
		death: 58.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.68, npDef: 5, starRate: 4.9, starWeight: 9},
		hits: {arts: 3, buster: 1, ex: 3, quick: 2},
		id: 53,
		limited: false,
		name: 'Asterios',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Eternally Unchanging Labyrinth',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					6,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 20)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(40))
				]),
			first: false,
			hits: 0,
			kind: 'Maze',
			name: 'Chaos Labyrinth',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					6,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 1,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					2),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Monstrous Strength',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Natural Demon',
				rank: author$project$Database$Skill$APlusPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Labrys of the Abyss',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1097, hp: 1320},
			grail: {atk: 9381, hp: 10181},
			max: {atk: 6037, hp: 6604}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$GreekMythMale])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 16)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Berserker,
		curve: 3,
		death: 65,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 2.03, npDef: 5, starRate: 4.9, starWeight: 9},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 56,
		limited: false,
		name: 'Kiyohime',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Tenshin Kasyou Zanmai Achieving Acala\'s Samadhi',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Personnel',
			name: 'Transforming, Flame-Emitting Meditation',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					80,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					10,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 900))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 16, 24))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						4,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 12, 24)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20))
					]),
				icon: author$project$Database$Base$IconShieldDown,
				name: 'Stalking',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Flame-Coloured Kiss',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1233, hp: 1649},
			grail: {atk: 8992, hp: 12428},
			max: {atk: 6644, hp: 9166}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Dragon, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 2),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 2,
		death: 58.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.02, npDef: 5, starRate: 4.9, starWeight: 9},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 57,
		limited: false,
		name: 'Eric Bloodaxe',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Bloody Coronation',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$DemeritDamage,
					author$project$Database$Skill$Flat(1000))
				]),
			first: true,
			hits: 5,
			kind: 'Anti-Personnel',
			name: 'Bloodbath Crown',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					3),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						2,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						2,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconSwordDown,
				name: 'Supporting Curse',
				rank: author$project$Database$Skill$CPlus
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 4, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MaxHP,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Half-Dead Bloodaxe',
				rank: author$project$Database$Skill$APlus
			}
			]),
		stats: {
			base: {atk: 1116, hp: 1447},
			grail: {atk: 9115, hp: 11095},
			max: {atk: 6290, hp: 7688}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 3,
		death: 65,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.67, npDef: 5, starRate: 5, starWeight: 9},
		hits: {arts: 3, buster: 1, ex: 3, quick: 2},
		id: 55,
		limited: false,
		name: 'Darius III',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Immortal Cavalry of Ten Thousand Rank',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Army',
			name: 'Athanaton Ten Thousand',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Disengage',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1412, hp: 1577},
			grail: {atk: 10297, hp: 11881},
			max: {atk: 7608, hp: 8763}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					3),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Berserker,
		curve: 12,
		death: 56.8,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.68, npDef: 5, starRate: 5, starWeight: 9},
		hits: {arts: 3, buster: 1, ex: 3, quick: 2},
		id: 54,
		limited: false,
		name: 'Caligula',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Devour my Heart, Moonlight',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					100,
					150,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Flucticulus Diana',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					70,
					90,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Berserker),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Berserker),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 9),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Sadistic Streak',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Imperial Privilege',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 5,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritHealth,
						author$project$Database$Skill$Flat(500))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Glory of Past Days',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1374, hp: 1211},
			grail: {atk: 9899, hp: 10540},
			max: {atk: 6831, hp: 7303}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Roman, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	}
	]);
var author$project$Database$Base$Caster = {$: 'Caster'};
var author$project$Database$Base$IconBeamDown = {$: 'IconBeamDown'};
var author$project$Database$Base$IconHealUp = {$: 'IconHealUp'};
var author$project$Database$Base$IconHoodX = {$: 'IconHoodX'};
var author$project$Database$Base$IconShield = {$: 'IconShield'};
var author$project$Database$Base$IconSunUp = {$: 'IconSunUp'};
var author$project$Database$Base$IconPotion = {$: 'IconPotion'};
var author$project$Database$Passive$itemConstruction = A3(
	author$project$Database$Passive$passive,
	'Item Construction',
	author$project$Database$Base$IconPotion,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffSuccess,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$EX, 12),
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$BPlus, 9),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$D, 4)
				]))
		]));
var author$project$Database$Passive$itemConstructionFalse = A3(
	author$project$Database$Passive$passive,
	'Item Construction (False)',
	author$project$Database$Base$IconPotion,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$DebuffSuccess,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 10)
				]))
		]));
var author$project$Database$Base$IconNobleTurn = {$: 'IconNobleTurn'};
var author$project$Database$Skill$GaugePerTurn = {$: 'GaugePerTurn'};
var author$project$Database$Passive$unlimitedManaSupply = A3(
	author$project$Database$Passive$passive,
	'Unlimited Mana Supply',
	author$project$Database$Base$IconNobleTurn,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$GaugePerTurn,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$C, 3)
				]))
		]));
var author$project$Database$Skill$BuffBlock = {$: 'BuffBlock'};
var author$project$Database$Skill$Cooldowns = {$: 'Cooldowns'};
var author$project$Database$Skill$Cure = {$: 'Cure'};
var author$project$Database$Skill$Curse = {$: 'Curse'};
var author$project$Database$Skill$Fear = {$: 'Fear'};
var author$project$Database$Skill$HealUp = {$: 'HealUp'};
var author$project$Database$Skill$HealingReceived = {$: 'HealingReceived'};
var author$project$Database$Skill$Invincibility = {$: 'Invincibility'};
var author$project$Database$Skill$OverChance = {$: 'OverChance'};
var author$project$Database$Skill$Overcharge = {$: 'Overcharge'};
var author$project$Database$Servant$Caster$casters = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 15,
		death: 34.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.64, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 37,
		limited: false,
		name: 'Zhuge Liang (Lord El-Melloi II)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$B),
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Stone Sentinel Maze',
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$DefenseDown),
					A2(author$project$Database$Skill$Range, 10, 30)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(150),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$Curse),
					author$project$Database$Skill$Flat(500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$GaugeDown,
					author$project$Database$Skill$Flat(1))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Unreturning Formation',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					80,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$CMinus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(30))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Discerning Eye',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DamageDown,
						A2(author$project$Database$Skill$Range, 200, 500)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Tactician\'s Advice',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DamageUp,
						A2(author$project$Database$Skill$Range, 200, 500)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Tactician\'s Command',
				rank: author$project$Database$Skill$APlus
			}
			]),
		stats: {
			base: {atk: 1637, hp: 2091},
			grail: {atk: 11601, hp: 15621},
			max: {atk: 10598, hp: 14259}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild, author$project$Database$Base$PseudoServant])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 12)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Caster,
		curve: 5,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.32, npDef: 3, starRate: 11, starWeight: 49},
		hits: {arts: 5, buster: 1, ex: 4, quick: 3},
		id: 62,
		limited: false,
		name: 'Tamamo-no-Mae',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'on the Weight Stone under the Sunlit Watery Heavens',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Cooldowns,
					author$project$Database$Skill$Flat(1)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 2000, 3000))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Eightfold Blessings of Amaterasu',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 25, 50))
				]),
			rank: author$project$Database$Skill$D
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 22),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 80, 100),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Curse',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Fox\'s Wedding',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1629, hp: 2091},
			grail: {atk: 11544, hp: 15621},
			max: {atk: 10546, hp: 14259}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 9)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 15,
		death: 34.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.82, npDef: 3, starRate: 11, starWeight: 52},
		hits: {arts: 2, buster: 1, ex: 6, quick: 3},
		id: 113,
		limited: false,
		name: 'Xuanzang Sanzang',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$APlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Wu Xing Shan: Shijia Rulai Zhang',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 12,
			kind: 'Anti-Army',
			name: 'Five Elements Mountain Buddha Palm',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					1,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 80, 120))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 18),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 50, 80)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Rapid Sutra Chanting',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DamageDown,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Captivating Rosy Cheeks',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 1, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Sanzang\'s Teachings',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1801, hp: 1901},
			grail: {atk: 12761, hp: 14204},
			max: {atk: 11658, hp: 12965}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 4),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 5)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Caster,
		curve: 30,
		death: 34.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.54, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 3, buster: 1, ex: 4, quick: 4},
		id: 127,
		limited: true,
		name: 'Leonardo da Vinci',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Omnipotent Man',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(10))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Unit/Anti-Army',
			name: 'Uomo Universale',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 18),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(85),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(85),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$NPUp),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Inherent Wisdom',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 2, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$GaugePerTurn,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconHealTurn,
				name: 'Golden Rule (Body)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Pioneer of the Stars',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1637, hp: 2091},
			grail: {atk: 11601, hp: 15621},
			max: {atk: 10598, hp: 14259}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 9)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 10,
		death: 42,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.32, npDef: 3, starRate: 10.7, starWeight: 51},
		hits: {arts: 5, buster: 1, ex: 5, quick: 3},
		id: 136,
		limited: true,
		name: 'Illyasviel von Einzbern',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$unlimitedManaSupply(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Multiple Ensemble Saturated Bombardment',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				]),
			first: true,
			hits: 4,
			kind: 'Anti-Unit',
			name: 'Quintett Feuer',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 20, 80))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 18),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Cheerful-Type Mystic Code',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 28))
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Child of Nature',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A2(
						author$project$Database$Skill$Chance,
						70,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)),
						A3(
						elm$core$Basics$composeL,
						A2(
							elm$core$Basics$composeL,
							author$project$Database$Skill$Chance(70),
							author$project$Database$Skill$Times(1)),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Suspicious Medicine',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1677, hp: 2027},
			grail: {atk: 11885, hp: 15146},
			max: {atk: 10857, hp: 13825}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$PseudoServant, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Caster,
		curve: 9,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.4, npDef: 3, starRate: 10.7, starWeight: 51},
		hits: {arts: 4, buster: 3, ex: 5, quick: 4},
		id: 67,
		limited: false,
		name: 'Medea (Lily)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'All Flaws Must Be Repaired',
			effect: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 4000, 6000))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Magic',
			name: 'Pain Breaker',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 40, 120))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 80, 150))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Rapid Words of Divine',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$Cure, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 3000))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Poison Resistance',
				rank: author$project$Database$Skill$APlusPlus
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$HealingReceived,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Ephemeral Love',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1294, hp: 2091},
			grail: {atk: 9403, hp: 15847},
			max: {atk: 7766, hp: 13070}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: author$project$Database$Servant$Welfare('Twinkle Candy'),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 4,
		death: 42,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 1.6, npDef: 3, starRate: 10.8, starWeight: 49},
		hits: {arts: 1, buster: 1, ex: 4, quick: 2},
		id: 61,
		limited: true,
		name: 'Elisabeth Bathory (Halloween)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'First Class Demon Daughter of Fresh Blood',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Báthory Halloween Erzsébet',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$EMinus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 6, 12)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Innocent Monster',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 25, 45)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						10,
						author$project$Database$Skill$Burn,
						author$project$Database$Skill$Flat(300))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst (Pumpkin)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(8))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Performance Continuation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1436, hp: 1824},
			grail: {atk: 10432, hp: 13827},
			max: {atk: 8616, hp: 11404}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Dragon, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_Nil,
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 4,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.54, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 3, buster: 1, ex: 3, quick: 3},
		id: 74,
		limited: false,
		name: 'Nursery Rhyme',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'A Story For Somebody\'s Sake',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 900)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Personnel',
			name: 'Nursery Rhyme',
			over: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(author$project$Database$Skill$Chances, 60, 100),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Self-Modification',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Meanwhile',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1438, hp: 1901},
			grail: {atk: 10448, hp: 14407},
			max: {atk: 8629, hp: 11882}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 4,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.45, npDef: 3, starRate: 10.7, starWeight: 51},
		hits: {arts: 3, buster: 1, ex: 3, quick: 6},
		id: 100,
		limited: false,
		name: 'Helena Blavatsky',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Venusian God, Heavenly Lord of the Flame',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Sanat Kumara',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 50)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 9),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Mana Tuning',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						5,
						author$project$Database$Skill$StarsPerTurn,
						author$project$Database$Skill$Flat(5)),
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$NPUp),
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Mahatma',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 15, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 15, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 15, 20))
					]),
				icon: author$project$Database$Base$IconAllUp,
				name: 'Search for the Unknown',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1438, hp: 1901},
			grail: {atk: 10448, hp: 14407},
			max: {atk: 8629, hp: 11882}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 24),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 4),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 6)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Caster,
		curve: 9,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.54, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 3, buster: 3, ex: 5, quick: 4},
		id: 120,
		limited: false,
		name: 'Nitocris',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$BPlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Nether Mirror\'s Precious Bible',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750))
				]),
			first: true,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Anpu Neb Ta Djeser',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 60)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$KillUp,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconReaperUp,
				name: 'Egyptian Magecraft',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 60, 120))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Rapid Words of Divine',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Affection of the Sky God',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1510, hp: 1806},
			grail: {atk: 10970, hp: 13686},
			max: {atk: 9060, hp: 11288}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$King, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: author$project$Database$Servant$Welfare('Crystal Ball'),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Caster,
		curve: 24,
		death: 34.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.42, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 3, buster: 3, ex: 4, quick: 3},
		id: 111,
		limited: true,
		name: 'Irisviel (Dress of Heaven)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B),
				author$project$Database$Passive$coreOfGoddess(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Sing, O White Grail',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 2000, 3000))
				]),
			first: false,
			hits: 0,
			kind: 'Magecraft',
			name: 'Song of Grail',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$Guts,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 12),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$HealUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconHealUp,
				name: 'Sacrificial Resolve',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Child of Nature',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 3000))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Magical Healing',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1372, hp: 1996},
			grail: {atk: 9973, hp: 15127},
			max: {atk: 8237, hp: 12476}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 9,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.32, npDef: 3, starRate: 10.9, starWeight: 50},
		hits: {arts: 5, buster: 1, ex: 4, quick: 3},
		id: 130,
		limited: true,
		name: 'Marie Antoinette (Caster)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'The Lovable Brilliance, to Eternity',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Army/Anti-Populace',
			name: 'Crystal Dress',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9.5, 19.5)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Male),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 21, 41))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Beach Flower',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 10)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Sparkling Sunflower',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Beautiful Princess (Sea)',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1510, hp: 1824},
			grail: {atk: 10970, hp: 13827},
			max: {atk: 9060, hp: 11404}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 24,
		death: 60,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.51, npDef: 3, starRate: 10.6, starWeight: 51},
		hits: {arts: 3, buster: 3, ex: 5, quick: 3},
		id: 103,
		limited: false,
		name: 'Thomas Edison',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$D),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Ｗ・Ｆ・Ｄ',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Populace',
			name: 'World Faith Domination',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 16, 24))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Morph',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 12,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						5,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 10)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$GaugePerTurn,
						A2(author$project$Database$Skill$Range, 5, 10))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Mass Production',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$Overcharge,
						author$project$Database$Skill$Flat(2)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconSunUp,
				name: 'Concept Improvement',
				rank: author$project$Database$Skill$APlus
			}
			]),
		stats: {
			base: {atk: 1325, hp: 1901},
			grail: {atk: 9628, hp: 14407},
			max: {atk: 7952, hp: 11882}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					3),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 12,
		death: 30,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.66, npDef: 3, starRate: 10.8, starWeight: 48},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 33,
		limited: false,
		name: 'Hans Christian Andersen',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$D),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'A Story Just For You',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$OverChance,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Personnel',
			name: 'Märchen Meines Lebens',
			over: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$AttackUp),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$DefenseUp),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$StarUp),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			rank: author$project$Database$Skill$CPlus
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					3),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 18),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 10, 40))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Human Observation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 50, 75))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Rapid Casting',
				rank: author$project$Database$Skill$E
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(14))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Innocent Monster',
				rank: author$project$Database$Skill$D
			}
			]),
		stats: {
			base: {atk: 1021, hp: 1597},
			grail: {atk: 8344, hp: 12244},
			max: {atk: 5758, hp: 8484}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Caster,
		curve: 13,
		death: 34.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.64, npDef: 3, starRate: 10.9, starWeight: 50},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 31,
		limited: false,
		name: 'Medea',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'All Spells Must Be Broken',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 900)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Thaumaturgy',
			name: 'Rule Breaker',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 100))
				]),
			rank: author$project$Database$Skill$CPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 16)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 80, 150))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Rapid Words of Divine',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 2500))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Argon Coin',
				rank: author$project$Database$Skill$Unknown
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Ally, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Circe\'s Teaching',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1377, hp: 1555},
			grail: {atk: 10039, hp: 11719},
			max: {atk: 7418, hp: 8643}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					3),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 12,
		death: 45,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.59, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 34,
		limited: false,
		name: 'William Shakespeare',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'When the Curtain Rises, the Applause Shall Be As Ten Thousand Thunders!',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Personnel',
			name: 'First Folio',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$Stun,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					3),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 6),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 18),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Enchant',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Self-Preservation',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'King\'s Men',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1028, hp: 1520},
			grail: {atk: 8402, hp: 11661},
			max: {atk: 5798, hp: 8080}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Caster,
		curve: 1,
		death: 40.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.6, npDef: 3, starRate: 11, starWeight: 49},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 36,
		limited: false,
		name: 'Wolfgang Amadeus Mozart',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Funeral Music for the Death God',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$OverChance,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Requiem for Death',
			over: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$AttackDown),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(0),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 3, author$project$Database$Skill$DefenseDown),
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 1,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					2),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 22, 44))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Protection of Muse (Fake)',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconBeamDown,
				name: 'Aesthetic Appreciation',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Eine kleine Nachtmusik',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 944, hp: 1425},
			grail: {atk: 8072, hp: 10990},
			max: {atk: 5195, hp: 7129}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 13,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.91, npDef: 3, starRate: 10.8, starWeight: 48},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 80,
		limited: false,
		name: 'Charles Babbage',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$itemConstructionFalse(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Glorious World of Fiery Desolation',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Army',
			name: 'Dimension of Steam',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Concentration',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Mechanized Armor',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$Burn,
						author$project$Database$Skill$Flat(300))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Overload',
				rank: author$project$Database$Skill$D
			}
			]),
		stats: {
			base: {atk: 1113, hp: 1959},
			grail: {atk: 8115, hp: 14761},
			max: {atk: 5996, hp: 10887}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Caster,
		curve: 8,
		death: 42,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 1.6, npDef: 3, starRate: 10.9, starWeight: 49},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 38,
		limited: false,
		name: 'Cu Chulainn (Caster)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Cage of Scorching Flames',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Wicker Man',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					10,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 300, 1500))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Rune Spell',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Divine Protection from Arrows',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Disengage',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1222, hp: 1728},
			grail: {atk: 8905, hp: 13022},
			max: {atk: 6580, hp: 9604}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Caster,
		curve: 8,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.81, npDef: 3, starRate: 11, starWeight: 50},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 35,
		limited: false,
		name: 'Mephistopheles',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$CPlus),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Lullaby Explosive',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Ticktock Bomb',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Curse',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(18))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Innocent Monster',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 0, author$project$Database$Skill$BuffBlock, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						5,
						author$project$Database$Skill$Curse,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				icon: author$project$Database$Base$IconHoodX,
				name: 'Clown\'s Laughter',
				rank: author$project$Database$Skill$APlus
			}
			]),
		stats: {
			base: {atk: 1270, hp: 1659},
			grail: {atk: 9255, hp: 12495},
			max: {atk: 6839, hp: 9216}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 3,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.55, npDef: 3, starRate: 10.8, starWeight: 50},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 79,
		limited: false,
		name: 'Paracelsus von Hohenheim',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Magic Sword of the Elementalist',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Sword of Paracelsus',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 48)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 55, 80))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Rapid Casting',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Elemental',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 3, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Philosopher\'s Stone',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1246, hp: 1711},
			grail: {atk: 9082, hp: 12889},
			max: {atk: 6711, hp: 9506}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 3,
		death: 40.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.9, npDef: 3, starRate: 11, starWeight: 49},
		hits: {arts: 2, buster: 1, ex: 4, quick: 2},
		id: 104,
		limited: false,
		name: 'Geronimo',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B),
				author$project$Database$Passive$itemConstruction(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Creator of The Earth and Its People',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 700)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$CritChance,
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Tsago Degi Naleya',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 1000, 2000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Bloody Devil',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Shamanism',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Guardian Beast',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1273, hp: 1642},
			grail: {atk: 9280, hp: 12369},
			max: {atk: 6857, hp: 9123}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Caster,
		curve: 13,
		death: 48,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.58, npDef: 3, starRate: 10.8, starWeight: 48},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 32,
		limited: false,
		name: 'Gilles de Rais (Caster)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Textbook of the Spiral Sunken Castle',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Prelati\'s Spellbook',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Caster),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					4),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Caster),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 24),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalSuccess,
						A2(author$project$Database$Skill$Range, 5, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconStaffUp,
				name: 'Mental Corruption',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 5.5, 11))
					]),
				icon: author$project$Database$Base$IconBeamDown,
				name: 'Aesthetic Appreciation',
				rank: author$project$Database$Skill$EMinus
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						5,
						author$project$Database$Skill$Fear,
						A2(author$project$Database$Skill$Range, 30, 40))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Evil Eye of the Abyss',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1209, hp: 1711},
			grail: {atk: 8816, hp: 12889},
			max: {atk: 6514, hp: 9506}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	}
	]);
var author$project$Database$Base$Avenger = {$: 'Avenger'};
var author$project$Database$Base$Demon = {$: 'Demon'};
var author$project$Database$Base$IconFlex = {$: 'IconFlex'};
var author$project$Database$Base$Lancer = {$: 'Lancer'};
var author$project$Database$Base$Rider = {$: 'Rider'};
var author$project$Database$Base$Ruler = {$: 'Ruler'};
var author$project$Database$Base$Shielder = {$: 'Shielder'};
var author$project$Database$Base$Undead = {$: 'Undead'};
var author$project$Database$Base$pairWith = F2(
	function (val, construc) {
		return elm$core$List$map(
			A2(
				elm$core$Basics$composeR,
				construc,
				function (x) {
					return _Utils_Tuple2(x, val);
				}));
	});
var author$project$Database$Base$IconAvenger = {$: 'IconAvenger'};
var author$project$Database$Skill$NPFromDamage = {$: 'NPFromDamage'};
var author$project$Database$Passive$avenger = A3(
	author$project$Database$Passive$passive,
	'Avenger',
	author$project$Database$Base$IconAvenger,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Others,
			author$project$Database$Skill$DebuffResist,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$C, 6)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$NPFromDamage,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 20),
					_Utils_Tuple2(author$project$Database$Skill$B, 18),
					_Utils_Tuple2(author$project$Database$Skill$C, 16)
				]))
		]));
var author$project$Database$Base$IconEclipse = {$: 'IconEclipse'};
var author$project$Database$Passive$oblivionCorrection = A3(
	author$project$Database$Passive$passive,
	'Oblivion Correction',
	author$project$Database$Base$IconEclipse,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$CritUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 10),
					_Utils_Tuple2(author$project$Database$Skill$B, 8),
					_Utils_Tuple2(author$project$Database$Skill$C, 6)
				]))
		]));
var author$project$Database$Base$IconNiffin = {$: 'IconNiffin'};
var author$project$Database$Passive$selfRestoreMagic = A3(
	author$project$Database$Passive$passive,
	'Self-Restoration (Magical Energy)',
	author$project$Database$Base$IconNiffin,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$GaugePerTurn,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$APlus, 4),
					_Utils_Tuple2(author$project$Database$Skill$A, 3.8),
					_Utils_Tuple2(author$project$Database$Skill$B, 3.5),
					_Utils_Tuple2(author$project$Database$Skill$C, 3.3),
					_Utils_Tuple2(author$project$Database$Skill$D, 3),
					_Utils_Tuple2(author$project$Database$Skill$D, 2)
				]))
		]));
var author$project$Database$Servant$Clear = F4(
	function (a, b, c, d) {
		return {$: 'Clear', a: a, b: b, c: c, d: d};
	});
var author$project$Database$Skill$AMinus = {$: 'AMinus'};
var author$project$Database$Skill$Avenge = {$: 'Avenge'};
var author$project$Database$Servant$Extra$extras = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Lancer])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Lancer])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin, author$project$Database$Base$Berserker]))),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Ruler,
		curve: 10,
		death: 21,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.76, npDef: 3, starRate: 10.1, starWeight: 99},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 59,
		limited: false,
		name: 'Jeanne d\'Arc',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'God is Here With Me',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 5, 25)),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 2, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 0,
			kind: 'Barrier',
			name: 'Luminosité Eternelle',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					2,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			rank: author$project$Database$Skill$AMinus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Lancer])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Lancer])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Lancer])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin, author$project$Database$Base$Berserker])),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Revelation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 15, 30))
					]),
				icon: author$project$Database$Base$IconBeamDown,
				name: 'True Name Revelation',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						70,
						120,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Divine Judgement',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1482, hp: 2420},
			grail: {atk: 10501, hp: 18076},
			max: {atk: 9593, hp: 16500}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$Saberface])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[author$project$Database$Base$Lancer, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Rider, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Archer, author$project$Database$Base$Lancer, author$project$Database$Base$Berserker]))),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Ruler,
		curve: 10,
		death: 21,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.86, npDef: 3, starRate: 10, starWeight: 100},
		hits: {arts: 2, buster: 1, ex: 7, quick: 3},
		id: 93,
		limited: true,
		name: 'Amakusa Shirou',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Dual Arm, Zero-Order Convergence',
			effect: _List_fromArray(
				[
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Twin Arm—Big Crunch',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Lancer, author$project$Database$Base$Archer, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Lancer, author$project$Database$Base$Archer, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[author$project$Database$Base$Rider, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				5,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Lancer, author$project$Database$Base$Archer, author$project$Database$Base$Berserker])),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 3, 9))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Revelation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 12,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$GaugePerTurn,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$EnemyType(author$project$Database$Base$Undead),
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$EnemyType(author$project$Database$Base$Demon),
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1))
					]),
				icon: author$project$Database$Base$IconNobleTurn,
				name: 'Baptism Rite',
				rank: author$project$Database$Skill$BPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						100,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Divine Judgement',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1695, hp: 2069},
			grail: {atk: 12011, hp: 15455},
			max: {atk: 10972, hp: 14107}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Avenger,
		curve: 15,
		death: 5.7,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.83, npDef: 5, starRate: 6, starWeight: 29},
		hits: {arts: 2, buster: 4, ex: 7, quick: 3},
		id: 106,
		limited: true,
		name: 'Jeanne d\'Arc (Alter)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$avenger(author$project$Database$Skill$B),
				author$project$Database$Passive$oblivionCorrection(author$project$Database$Skill$A),
				author$project$Database$Passive$selfRestoreMagic(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Howl Loudly, My Resentment',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 0, author$project$Database$Skill$BuffBlock, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Army',
			name: 'La Grondement Du Haine',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 400, 800))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Self-Modification',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Dragon),
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Dragon Witch',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritHealth,
						author$project$Database$Skill$Flat(1000))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Ephemeral Dream',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 2046, hp: 1724},
			grail: {atk: 14498, hp: 12885},
			max: {atk: 13244, hp: 11761}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$Saberface])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Avenger,
		curve: 15,
		death: 7,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.62, npDef: 6, starRate: 5.9, starWeight: 30},
		hits: {arts: 2, buster: 3, ex: 5, quick: 4},
		id: 96,
		limited: true,
		name: 'Edmond Dantes',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$avenger(author$project$Database$Skill$A),
				author$project$Database$Passive$oblivionCorrection(author$project$Database$Skill$B),
				author$project$Database$Passive$selfRestoreMagic(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Tyger, Tyger, Burning Bright',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 8,
			kind: 'Anti-Army',
			name: 'Enfer Château d\'If',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 1500))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 14, 32))
					]),
				icon: author$project$Database$Base$IconShieldBreak,
				name: 'Iron Determination',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 50))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Wisdom of Crisis',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1953, hp: 1785},
			grail: {atk: 13838, hp: 13340},
			max: {atk: 12641, hp: 12177}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Rider, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Piece,
				_List_fromArray(
					[author$project$Database$Base$Archer, author$project$Database$Base$Lancer, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Rider, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$Monument,
				_List_fromArray(
					[author$project$Database$Base$Archer, author$project$Database$Base$Lancer, author$project$Database$Base$Caster, author$project$Database$Base$Assassin]))),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Ruler,
		curve: 4,
		death: 21,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.76, npDef: 3, starRate: 10, starWeight: 102},
		hits: {arts: 3, buster: 1, ex: 5, quick: 4},
		id: 135,
		limited: true,
		name: 'Martha (Ruler)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'O Tragic Drake Who Knew Naught of Love',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: true,
			hits: 10,
			kind: 'Anti-Unit/Anti-Dragon',
			name: 'Tarasque',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					1,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Rider, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$GemOf,
				_List_fromArray(
					[author$project$Database$Base$Archer, author$project$Database$Base$Lancer, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Rider, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$MagicGemOf,
				_List_fromArray(
					[author$project$Database$Base$Archer, author$project$Database$Base$Lancer, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[author$project$Database$Base$Saber, author$project$Database$Base$Rider, author$project$Database$Base$Berserker])),
			A3(
				author$project$Database$Base$pairWith,
				4,
				author$project$Database$Base$SecretGemOf,
				_List_fromArray(
					[author$project$Database$Base$Archer, author$project$Database$Base$Lancer, author$project$Database$Base$Caster, author$project$Database$Base$Assassin])),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('on Waterside or Beach field'),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Saint of the Shore',
				rank: author$project$Database$Skill$BPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconFlex,
				name: 'Natural Body (Sea)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Demon),
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Divine),
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Undead),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Jacob\'s Limbs',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1591, hp: 1800},
			grail: {atk: 11558, hp: 13640},
			max: {atk: 9546, hp: 11250}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(author$project$Database$Servant$Clear, 'Septem', 'London pt. 4, Arrow II', 'Camelot pt. 15, Arrow I', 'Babylonia'),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Shielder,
		curve: 11,
		death: 24.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 9.9, starWeight: 99},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 1,
		limited: false,
		name: 'Mash Kyrielight',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Castle of the Distant Utopia',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 100, 1000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Others,
					3,
					author$project$Database$Skill$AttackUp,
					author$project$Database$Skill$Flat(30))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Evil',
			name: 'Lord Camelot',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			rank: author$project$Database$Skill$BPlusPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 15, 20)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$DamageDown),
						author$project$Database$Skill$Flat(2000))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Honorable Wall of Snowflakes',
				rank: author$project$Database$Skill$Unknown
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Obscurant Wall of Chalk',
				rank: author$project$Database$Skill$Unknown
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 200, 400))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Shield of Rousing Resolution',
				rank: author$project$Database$Skill$Unknown
			}
			]),
		stats: {
			base: {atk: 1261, hp: 1854},
			grail: {atk: 10575, hp: 15619},
			max: {atk: 6791, hp: 10302}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Avenger,
		curve: 2,
		death: 9,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.79, npDef: 5, starRate: 6, starWeight: 29},
		hits: {arts: 2, buster: 1, ex: 4, quick: 3},
		id: 107,
		limited: false,
		name: 'Angra Mainyu',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$avenger(author$project$Database$Skill$A),
				author$project$Database$Passive$oblivionCorrection(author$project$Database$Skill$A),
				author$project$Database$Passive$selfRestoreMagic(author$project$Database$Skill$E)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Falsely Transcribed Creation',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Stun, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Avenge,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Unit',
			name: 'Verg Avesta',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			rank: author$project$Database$Skill$CMinus
		},
		rarity: 0,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconExclamationDown,
				name: 'Zarich',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$GaugeDown,
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Tawrich',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$When,
						'turn 1',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
							A2(author$project$Database$Skill$Range, 20, 40))),
						A2(
						author$project$Database$Skill$When,
						'turn 2',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
							A2(author$project$Database$Skill$Range, 40, 80))),
						A2(
						author$project$Database$Skill$When,
						'turn 3',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
							A2(author$project$Database$Skill$Range, 60, 120))),
						A2(
						author$project$Database$Skill$When,
						'turn 4',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
							A2(author$project$Database$Skill$Range, 80, 160))),
						A2(
						author$project$Database$Skill$When,
						'turn 5',
						A4(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							1,
							author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
							A2(author$project$Database$Skill$Range, 100, 200))),
						A2(
						author$project$Database$Skill$When,
						'turn 6',
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$DemeritKill, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Annihilation Wish',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1008, hp: 1502},
			grail: {atk: 8235, hp: 11518},
			max: {atk: 5683, hp: 7981}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	}
	]);
var author$project$Database$Base$Summer = {$: 'Summer'};
var author$project$Database$Skill$CharmVuln = {$: 'CharmVuln'};
var author$project$Database$Skill$DemeritCharge = {$: 'DemeritCharge'};
var author$project$Database$Servant$Lancer$lancers = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Lancer,
		curve: 4,
		death: 32,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.71, npDef: 4, starRate: 12.2, starWeight: 88},
		hits: {arts: 3, buster: 6, ex: 7, quick: 2},
		id: 70,
		limited: true,
		name: 'Scathach',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Soaring Spear that Pierces with Death',
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Chance,
					500,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Gáe Bolg Alternative',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 60, 100))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 15),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(80),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$StarAbsorb),
						A2(author$project$Database$Skill$Range, 300, 500))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Wisdom of Dun Scaith',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Primordial Rune',
				rank: author$project$Database$Skill$Unknown
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Divine),
						A2(author$project$Database$Skill$Range, 50, 100)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Undead),
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'God-Slayer',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1758, hp: 2174},
			grail: {atk: 12452, hp: 16241},
			max: {atk: 11375, hp: 14825}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 10,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.72, npDef: 4, starRate: 12.2, starWeight: 88},
		hits: {arts: 3, buster: 1, ex: 4, quick: 3},
		id: 85,
		limited: false,
		name: 'Karna',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'O Sun, Abide to Death',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Divine',
			name: 'Vasavi Shakti',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Divine),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 54),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$DebuffVuln,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconCircuits,
				name: 'Knowledge of the Deprived',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst (Flame)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Uncrowned Arms Mastership',
				rank: author$project$Database$Skill$Unknown
			}
			]),
		stats: {
			base: {atk: 1850, hp: 1999},
			grail: {atk: 13110, hp: 14934},
			max: {atk: 11976, hp: 13632}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Summer]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 6),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 12)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 5,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.05, npDef: 4, starRate: 12.2, starWeight: 91},
		hits: {arts: 2, buster: 3, ex: 4, quick: 4},
		id: 128,
		limited: true,
		name: 'Tamamo-no-Mae (Lancer)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$riding(author$project$Database$Skill$A),
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$A),
				author$project$Database$Passive$divinity(author$project$Database$Skill$APlusPlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Unit',
			name: 'Tokonatsu Nikkou—Goddess\' Love Parasol',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Male),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Male),
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 22, 42))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Beach Flower',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						5,
						author$project$Database$Skill$Curse,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Enemy,
						author$project$Database$Skill$DemeritCharge,
						author$project$Database$Skill$Flat(1))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Midsummer Curse',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$HealingReceived,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Self, 1, author$project$Database$Skill$StunBomb, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Goddess Morph',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1657, hp: 2221},
			grail: {atk: 11741, hp: 16594},
			max: {atk: 10726, hp: 15147}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Divine, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 25,
		death: 32,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 4, starRate: 12.2, starWeight: 87},
		hits: {arts: 2, buster: 1, ex: 5, quick: 3},
		id: 88,
		limited: true,
		name: 'Brynhild',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$A),
				author$project$Database$Passive$divinity(author$project$Database$Skill$E)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Till Death Divides the Two',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$StarUp,
					author$project$Database$Skill$Flat(30))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Personnel',
			name: 'Brynhild Romantia',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Brynhild),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 15),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 15))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst (Flame)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						1,
						author$project$Database$Skill$NPDown,
						A2(author$project$Database$Skill$Range, 15, 30))
					]),
				icon: author$project$Database$Base$IconExclamationDown,
				name: 'Primordial Rune',
				rank: author$project$Database$Skill$Unknown
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Hero\'s Assistant',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1766, hp: 2174},
			grail: {atk: 12514, hp: 16241},
			max: {atk: 11432, hp: 14825}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 20),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 5,
		death: 24,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.1, npDef: 4, starRate: 12.2, starWeight: 89},
		hits: {arts: 2, buster: 1, ex: 5, quick: 3},
		id: 119,
		limited: false,
		name: 'Altria Pendragon (Lancer)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Spear Shining at the End of the World',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 2,
			kind: 'Anti-Fortress',
			name: 'Rhongomyniad',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					5),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 18),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Protection of World\'s End',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1699, hp: 2288},
			grail: {atk: 12036, hp: 17097},
			max: {atk: 10995, hp: 15606}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Arthur, author$project$Database$Base$Dragon, author$project$Database$Base$King, author$project$Database$Base$Riding, author$project$Database$Base$Saberface, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 29,
		death: 23,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.74, npDef: 4, starRate: 11.8, starWeight: 88},
		hits: {arts: 3, buster: 1, ex: 4, quick: 2},
		id: 78,
		limited: false,
		name: 'Altria Pendragon (Lancer Alter)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Spear that Shines to the End of the World',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A2(
					author$project$Database$Skill$Chance,
					60,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Fortress',
			name: 'Rhongomyniad',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 35, 55))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 10))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Protection of World\'s End',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 6, 12))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$E
			}
			]),
		stats: {
			base: {atk: 1661, hp: 1881},
			grail: {atk: 12069, hp: 14260},
			max: {atk: 9968, hp: 11761}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$Arthur, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Lancer,
		curve: 14,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.52, npDef: 4, starRate: 12.2, starWeight: 87},
		hits: {arts: 3, buster: 1, ex: 5, quick: 3},
		id: 102,
		limited: false,
		name: 'Li Shuwen',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Divine Spear—No Second Strike',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 900, 1500)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Unit',
			name: 'Shen Qiang Wu Er Da',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 40, 80))
				]),
			rank: author$project$Database$Skill$Unknown
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconBullseye,
				name: 'Chinese Martial Arts (Liu He Da Qiang)',
				rank: author$project$Database$Skill$APlusPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 500))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Sphere Boundary',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconShieldBreak,
				name: 'Juezhao',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1608, hp: 1817},
			grail: {atk: 11688, hp: 13774},
			max: {atk: 9653, hp: 11360}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$BlackBeastGrease, 5),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 6)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Lancer,
		curve: 4,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.05, npDef: 4, starRate: 12, starWeight: 92},
		hits: {arts: 2, buster: 6, ex: 5, quick: 2},
		id: 134,
		limited: true,
		name: 'Kiyohime (Lancer)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$madness(author$project$Database$Skill$EX),
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Chance,
					150,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 6,
			kind: 'Anti-Personnel',
			name: 'Dojo-ji Bell Form 108—Karyu-nagi',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						3,
						author$project$Database$Skill$CritChance,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconExclamationDown,
				name: 'Passionate Summer',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Bath Transformation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(500),
						A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 3, author$project$Database$Skill$DefenseDown),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20))
					]),
				icon: author$project$Database$Base$IconShieldDown,
				name: 'Stalking',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1489, hp: 1899},
			grail: {atk: 10820, hp: 14392},
			max: {atk: 8936, hp: 11870}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Dragon, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Lancer,
		curve: 4,
		death: 24,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.1, npDef: 4, starRate: 11.8, starWeight: 90},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 18,
		limited: false,
		name: 'Elisabeth Bathory',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$territoryCreation(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Fresh Blood Demoness',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Personnel',
			name: 'Báthory Erzsébet',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$EMinus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 15),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconShieldDown,
				name: 'Torture Technique',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 4, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1520, hp: 1899},
			grail: {atk: 11045, hp: 14392},
			max: {atk: 9122, hp: 11870}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Dragon, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 9,
		death: 32,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.55, npDef: 4, starRate: 12.3, starWeight: 89},
		hits: {arts: 2, buster: 1, ex: 4, quick: 2},
		id: 87,
		limited: false,
		name: 'Fionn mac Cumhaill',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$divinity(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Undefeated Violet Flower',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 900)),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Mac an Luin',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 15),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 19, 38))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Clairvoyance',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 12,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						100,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CharmVuln,
						author$project$Database$Skill$Flat(80))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Trouble with Women',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 24, 40))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Magecraft',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1488, hp: 2040},
			grail: {atk: 10812, hp: 15459},
			max: {atk: 8930, hp: 12750}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 8,
		death: 32,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 4, starRate: 12.1, starWeight: 87},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 17,
		limited: false,
		name: 'Cu Chulainn',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Barbed Spear that Pierces with Death',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Gáe Bolg',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Protection from Arrows',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 1500))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Disengage',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1334, hp: 1726},
			grail: {atk: 9797, hp: 13007},
			max: {atk: 7239, hp: 9593}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Lancer,
		curve: 13,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.08, npDef: 4, starRate: 12.1, starWeight: 88},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 20,
		limited: false,
		name: 'Cu Chulainn (Prototype)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'The Spear which Reverses Causality',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: true,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Gáe Bolg',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 18, 45)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Rune Spell',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Protection from Arrows',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Beast),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Beast Slayer',
				rank: author$project$Database$Skill$BPlus
			}
			]),
		stats: {
			base: {atk: 1315, hp: 1817},
			grail: {atk: 9584, hp: 13691},
			max: {atk: 7082, hp: 10098}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Lancer,
		curve: 7,
		death: 32,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 4, starRate: 11.8, starWeight: 89},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 21,
		limited: false,
		name: 'Leonidas I',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Guardian of the Hot Gates',
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Personnel',
			name: 'Thermopylae Enomotia',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					3),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 36)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Rear Guard\'s Pride',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 15, 25))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Warrior\'s War Cry',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1168, hp: 1498},
			grail: {atk: 9539, hp: 11486},
			max: {atk: 6583, hp: 7959}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Lancer,
		curve: 3,
		death: 32,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.07, npDef: 4, starRate: 12.1, starWeight: 90},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 22,
		limited: false,
		name: 'Romulus',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'All Things Lead to My Spear',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 7,
			kind: 'Anti-Army',
			name: 'Magna Voluisse Magnum',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Natural Body',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1200, 3400)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 22, 44)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 22, 44))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Imperial Privilege',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Ally, 1, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Seven Hills',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1344, hp: 1779},
			grail: {atk: 9797, hp: 13400},
			max: {atk: 7239, hp: 9883}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Roman, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Lancer,
		curve: 3,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.08, npDef: 4, starRate: 12.2, starWeight: 90},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 64,
		limited: false,
		name: 'Hektor',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Ultimate Unbroken Spear',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Durindana',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8.5, 17))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Tactics',
				rank: author$project$Database$Skill$CPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						A2(author$project$Database$Skill$Chances, 60, 80),
						A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$GaugeDown),
						author$project$Database$Skill$Flat(1)),
						A3(
						author$project$Database$Skill$Chances,
						60,
						80,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconDarkMagic,
				name: 'Proof of Friendship',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 800, 2000))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Disengage',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1334, hp: 1726},
			grail: {atk: 9376, hp: 13829},
			max: {atk: 6928, hp: 10200}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish, author$project$Database$Base$GreekMythMale])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					3),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 12)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Lancer,
		curve: 7,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.79, npDef: 4, starRate: 11.9, starWeight: 89},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 19,
		limited: false,
		name: 'Musashibou Benkei',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$CPlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					50,
					80,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Pilgrimage of the Five Hundred Arhat',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					3),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 42)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						100,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconCircuits,
				name: 'Vengeful Spirit Exorcism',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 30, 60))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Imposing Stance',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						80,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconCircuits,
				name: 'Blank Subscription List',
				rank: author$project$Database$Skill$Unknown
			}
			]),
		stats: {
			base: {atk: 1029, hp: 1722},
			grail: {atk: 8406, hp: 13204},
			max: {atk: 5801, hp: 9149}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Lancer),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Lancer,
		curve: 8,
		death: 36,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.79, npDef: 4, starRate: 12.3, starWeight: 87},
		hits: {arts: 2, buster: 2, ex: 4, quick: 2},
		id: 71,
		limited: false,
		name: 'Diarmuid Ua Duibhne',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Crimson Rose of Exorcism and Yellow Rose of Mortality',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 2,
			kind: 'Anti-Personnel',
			name: 'Gáe Dearg and Gáe Buidhe',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Curse,
					A2(author$project$Database$Skill$Range, 500, 1500))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Lancer),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Lancer),
					8),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 36),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (True)',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$EnemiesType(author$project$Database$Base$Female),
						1,
						author$project$Database$Skill$AttackDown,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconSwordDown,
				name: 'Love Spot',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Knight\'s Strategy',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1277, hp: 1817},
			grail: {atk: 9307, hp: 13691},
			max: {atk: 6877, hp: 10098}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish, author$project$Database$Base$Brynhild])
	}
	]);
var author$project$Database$Base$Nonbinary = {$: 'Nonbinary'};
var author$project$Database$Passive$surfing = A3(
	author$project$Database$Passive$passive,
	'Surfing',
	author$project$Database$Base$IconArtsUp,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 5)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$StarUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 5)
				]))
		]));
var author$project$Database$Skill$ApplyTrait = function (a) {
	return {$: 'ApplyTrait', a: a};
};
var author$project$Database$Skill$BuffUp = {$: 'BuffUp'};
var author$project$Database$Skill$MentalVuln = {$: 'MentalVuln'};
var author$project$Database$Servant$Rider$riders = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$ScarabOfWisdom, 5)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Rider,
		curve: 5,
		death: 30,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.59, npDef: 3, starRate: 9, starWeight: 205},
		hits: {arts: 3, buster: 1, ex: 5, quick: 5},
		id: 118,
		limited: false,
		name: 'Ozymandias',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Shining Great Temple Complex',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Fortress',
			name: 'Ramesseum Tentyris',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 29),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 18),
					_Utils_Tuple2(author$project$Database$Base$LampOfEvilSealing, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 20, 40)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Imperial Privilege',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$BuffUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Protection of the Sun God',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1850, hp: 1881},
			grail: {atk: 13104, hp: 14056},
			max: {atk: 11971, hp: 12830}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$Divine, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 22)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Rider,
		curve: 10,
		death: 50,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.42, npDef: 3, starRate: 9, starWeight: 208},
		hits: {arts: 4, buster: 2, ex: 4, quick: 6},
		id: 65,
		limited: false,
		name: 'Francis Drake',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$riding(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Golden Stag and the Eventide Tempest',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Golden Wild Hunt',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 18),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8.5, 17)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8.5, 17))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Voyager of the Storm',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Pioneer of the Stars',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1750, hp: 1881},
			grail: {atk: 12398, hp: 14056},
			max: {atk: 11326, hp: 12830}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 10,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.66, npDef: 3, starRate: 8.8, starWeight: 205},
		hits: {arts: 2, buster: 1, ex: 6, quick: 3},
		id: 108,
		limited: true,
		name: 'Iskandar',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Army of the King',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 8,
			kind: 'Anti-Army',
			name: 'Ionioi Hetairoi',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 22),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Tactics',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Lightning Conqueror',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1786, hp: 1938},
			grail: {atk: 12654, hp: 14482},
			max: {atk: 11560, hp: 13219}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$Divine, author$project$Database$Base$GreekMythMale, author$project$Database$Base$King, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 10),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Rider,
		curve: 5,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.86, npDef: 3, starRate: 9, starWeight: 208},
		hits: {arts: 2, buster: 1, ex: 7, quick: 3},
		id: 99,
		limited: false,
		name: 'Queen Medb',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'My Dear Iron Chariot',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Chariot My Love',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Male),
					A2(author$project$Database$Skill$Range, 150, 200)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$MentalVuln,
					A2(author$project$Database$Skill$Range, 10, 50))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					12),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 18),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 500, 1000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$GaugePerTurn,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconHealTurn,
				name: 'Golden Rule (Body)',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						80,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Siren Song',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1591, hp: 2048},
			grail: {atk: 11270, hp: 15303},
			max: {atk: 10296, hp: 13968}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: author$project$Database$Servant$Welfare('Golden Bear Lighter'),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Rider,
		curve: 9,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 1.15, npDef: 3, starRate: 9, starWeight: 198},
		hits: {arts: 2, buster: 1, ex: 5, quick: 4},
		id: 115,
		limited: true,
		name: 'Sakata Kintoki (Rider)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$divinity(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Army',
			name: 'Golden Drive, Good Night',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 90))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 15),
					_Utils_Tuple2(author$project$Database$Base$WarhorsesYoungHorn, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 20, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Long-Distance Dash',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Animal Communication',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 60, 120)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Natural Body',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1636, hp: 1728},
			grail: {atk: 11889, hp: 13095},
			max: {atk: 9819, hp: 10800}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: author$project$Database$Servant$Welfare('Bucket of Chicken'),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 29,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.87, npDef: 3, starRate: 8.9, starWeight: 204},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 73,
		limited: true,
		name: 'Altria Pendragon (Santa Alter)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Sword of Promised Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 650))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Army',
			name: 'Excalibur Morgan',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1500, 3500)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$StarUp,
						author$project$Database$Skill$Flat(30))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Saint\'s Gift',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 25, 45))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$AMinus
			}
			]),
		stats: {
			base: {atk: 1543, hp: 1805},
			grail: {atk: 11209, hp: 13684},
			max: {atk: 9258, hp: 11286}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Arthur, author$project$Database$Base$Dragon, author$project$Database$Base$Riding, author$project$Database$Base$Saberface, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 4,
		death: 30,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.58, npDef: 3, starRate: 9, starWeight: 205},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 30,
		limited: false,
		name: 'Martha',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlusPlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'O Tragic Drake Who Knew Naught of Love',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Tarasque',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 12),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Protection of the Faith',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Miracle',
				rank: author$project$Database$Skill$DPlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemy,
						3,
						author$project$Database$Skill$DefenseDown,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Enemy, author$project$Database$Skill$RemoveBuffs, author$project$Database$Skill$Full)
					]),
				icon: author$project$Database$Base$IconShieldDown,
				name: 'Oath of the Holy Maiden',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1335, hp: 2090},
			grail: {atk: 9703, hp: 15845},
			max: {atk: 8014, hp: 13068}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Rider,
		curve: 24,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.71, npDef: 3, starRate: 9.2, starWeight: 204},
		hits: {arts: 2, buster: 1, ex: 4, quick: 3},
		id: 132,
		limited: true,
		name: 'Mordred (Rider)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$surfing(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 750))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Wave',
			name: 'Prydwen Tube Riding',
			over: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(author$project$Database$Skill$Chances, 50, 90),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ShellOfReminiscence, 8),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 15),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Cerulean Ride',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Rodeo Flip',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Endless Summer',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1535, hp: 1824},
			grail: {atk: 11154, hp: 13822},
			max: {atk: 9212, hp: 11400}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 9,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1, npDef: 3, starRate: 9, starWeight: 201},
		hits: {arts: 1, buster: 1, ex: 3, quick: 2},
		id: 29,
		limited: false,
		name: 'Marie Antoinette',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Glory to the Crown of Lilies',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Guillotine Breaker',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 500, 2500))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						80,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Male),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Siren Song',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						3,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$HealPerTurn,
						A2(author$project$Database$Skill$Range, 200, 600))
					]),
				icon: author$project$Database$Base$IconShield,
				name: 'Beautiful Princess',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalSuccess,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconStaffUp,
				name: 'God\'s Grace',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1382, hp: 1975},
			grail: {atk: 10041, hp: 14972},
			max: {atk: 8293, hp: 12348}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil, author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 24)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 29,
		death: 50,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 9.1, starWeight: 200},
		hits: {arts: 2, buster: 1, ex: 1, quick: 2},
		id: 66,
		limited: false,
		name: 'Anne Bonny & Mary Read',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Bond of Lovebirds',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			first: false,
			hits: 6,
			kind: 'Anti-Personnel',
			name: 'Caribbean Free Bird',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$LastStand,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			rank: author$project$Database$Skill$CPlusPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconStarHaloUp,
				name: 'Voyage',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Marksmanship',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 600)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Combination',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1504, hp: 1805},
			grail: {atk: 10932, hp: 13684},
			max: {atk: 9029, hp: 11286}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Rider,
		curve: 24,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.66, npDef: 1, starRate: 9, starWeight: 205},
		hits: {arts: 2, buster: 1, ex: 4, quick: 2},
		id: 94,
		limited: false,
		name: 'Astolfo',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Otherworldly Phantom Horse',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 1000)),
					A2(
					author$project$Database$Skill$Times,
					3,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Hippogriff',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					10),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 15),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 28))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Monstrous Strength',
				rank: author$project$Database$Skill$CMinus
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						60,
						90,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Trap of Argalia',
				rank: author$project$Database$Skill$D
			},
				{
				cd: 10,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(65),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$StarsPerTurn),
						A2(author$project$Database$Skill$Range, 5, 10)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(65),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$StarUp),
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(65),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Evaporation of Reason',
				rank: author$project$Database$Skill$D
			}
			]),
		stats: {
			base: {atk: 1489, hp: 1787},
			grail: {atk: 10821, hp: 13546},
			max: {atk: 8937, hp: 11172}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Nonbinary, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					3),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 2,
		death: 45,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.85, npDef: 3, starRate: 8.9, starWeight: 205},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 24,
		limited: false,
		name: 'Georgios',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Blessed Sword of Force Subversion',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$ApplyTrait(author$project$Database$Base$Dragon),
					author$project$Database$Skill$Full),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Personnel',
			name: 'Ascalon',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					3),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 9),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconCrosshairUp,
				name: 'Guardian Knight',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 750, 2000))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Martyr\'s Soul',
				rank: author$project$Database$Skill$BPlus
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 929, hp: 1731},
			grail: {atk: 7587, hp: 13278},
			max: {atk: 5236, hp: 9200}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 7),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 8,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.87, npDef: 3, starRate: 9.1, starWeight: 204},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 27,
		limited: false,
		name: 'Ushiwakamaru',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Dan No Ura—Hassoutobi',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1600, 2400))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Personnel',
			name: 'Dan-No-Ura Eight-Boat Leap',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 50, 90))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Tengu\'s Strategy',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8.5, 17))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$CPlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A2(
						author$project$Database$Skill$Times,
						1,
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Art of the Swallow',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1314, hp: 1625},
			grail: {atk: 9576, hp: 12240},
			max: {atk: 7076, hp: 9028}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Rider,
		curve: 24,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.58, npDef: 3, starRate: 9, starWeight: 194},
		hits: {arts: 3, buster: 1, ex: 3, quick: 2},
		id: 23,
		limited: false,
		name: 'Medusa',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$independentAction(author$project$Database$Skill$C),
				author$project$Database$Passive$divinity(author$project$Database$Skill$EMinus),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Bridle of Chivalry',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Bellerophon',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 13)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						100,
						A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemy, 1, author$project$Database$Skill$Stun, author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconStun,
				name: 'Mystic Eyes',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						2,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Monstrous Strength',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Blood Fort Andromeda',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1337, hp: 1608},
			grail: {atk: 9744, hp: 12117},
			max: {atk: 7200, hp: 8937}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Divine])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 11)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 6)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 12,
		death: 45,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.56, npDef: 3, starRate: 8.8, starWeight: 198},
		hits: {arts: 3, buster: 1, ex: 3, quick: 2},
		id: 25,
		limited: false,
		name: 'Edward Teach',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$E)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: '',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					author$project$Database$Skill$Flat(5))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Queen Anne\'s Revenge',
			over: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(author$project$Database$Skill$Chances, 30, 70),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Enemies, author$project$Database$Skill$GaugeDown),
					author$project$Database$Skill$Flat(1))
				]),
			rank: author$project$Database$Skill$CPlusPlus
		},
		rarity: 2,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					6),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 15),
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HomunculusBaby, 9),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 15)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 16)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Voyager of the Storm',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 27)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffVuln,
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Pirate\'s Glory',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Female),
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$AlliesType(author$project$Database$Base$Nonbinary),
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Gentlemanly Love',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1097, hp: 1488},
			grail: {atk: 8967, hp: 11411},
			max: {atk: 6188, hp: 7907}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 3,
		death: 40,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.86, npDef: 3, starRate: 9, starWeight: 205},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 28,
		limited: false,
		name: 'Alexander',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$divinity(author$project$Database$Skill$E),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'The Beginning of Trampling Conquest',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 800, 1200))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Bucephalus',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 35))
				]),
			rank: author$project$Database$Skill$BPlusPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 48)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$Chances,
						50,
						80,
						A4(
							author$project$Database$Skill$Debuff,
							author$project$Database$Skill$EnemyType(author$project$Database$Base$Human),
							1,
							author$project$Database$Skill$Charm,
							author$project$Database$Skill$Full))
					]),
				icon: author$project$Database$Base$IconHeart,
				name: 'Fair Youth',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Omen of the Conqueror',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1366, hp: 1979},
			grail: {atk: 9955, hp: 11714},
			max: {atk: 7356, hp: 8640}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish, author$project$Database$Base$GreekMythMale, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 7),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 16)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Rider,
		curve: 3,
		death: 45,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.85, npDef: 3, starRate: 8.9, starWeight: 196},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 26,
		limited: false,
		name: 'Boudica',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$D),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Chariot of Promised Protection',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Chariot of Boudica',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Rider),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					4),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Rider),
					8),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 6),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 10),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 32)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Roman),
						A2(author$project$Database$Skill$Range, 40, 60))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Vow to the Goddess',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Battle Continuation',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconArtsUp,
				name: 'Andraste\'s Protection',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1168, hp: 1823},
			grail: {atk: 8511, hp: 13735},
			max: {atk: 6289, hp: 10130}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	}
	]);
var author$project$Database$Base$Bride = {$: 'Bride'};
var author$project$Database$Base$IconFace = {$: 'IconFace'};
var author$project$Database$Passive$connectionRoot = A3(
	author$project$Database$Passive$passive,
	'Connection to the Root',
	author$project$Database$Base$IconDamageUp,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 6),
					_Utils_Tuple2(author$project$Database$Skill$C, 4)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 6),
					_Utils_Tuple2(author$project$Database$Skill$C, 4)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$A, 6),
					_Utils_Tuple2(author$project$Database$Skill$C, 4)
				]))
		]));
var author$project$Database$Skill$KillResist = {$: 'KillResist'};
var author$project$Database$Passive$independentManifestation = A3(
	author$project$Database$Passive$passive,
	'Independent Manifestation',
	author$project$Database$Base$IconDash,
	_List_fromArray(
		[
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$CritUp,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$E, 2)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$MentalResist,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$E, 2)
				])),
			A3(
			author$project$Database$Passive$Give,
			author$project$Database$Skill$Self,
			author$project$Database$Skill$KillResist,
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Skill$C, 6),
					_Utils_Tuple2(author$project$Database$Skill$E, 2)
				]))
		]));
var author$project$Database$Skill$DamageVuln = {$: 'DamageVuln'};
var author$project$Database$Servant$Saber$sabers = _List_fromArray(
	[
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 10,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.09, npDef: 3, starRate: 10.2, starWeight: 98},
		hits: {arts: 2, buster: 1, ex: 3, quick: 5},
		id: 68,
		limited: true,
		name: 'Okita Souji',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$E),
				author$project$Database$Passive$riding(author$project$Database$Skill$E)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'Three-Stage Thrust',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Personnel',
			name: 'Mumyou Sandanzuki',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			rank: author$project$Database$Skill$Unknown
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconQuickUp,
				name: 'Shukuchi',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 500, 1000))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Weak Constitution',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (Fake)',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1865, hp: 1939},
			grail: {atk: 13210, hp: 14489},
			max: {atk: 12068, hp: 13225}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Saberface, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 5,
		death: 24.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 10.1, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 8,
		limited: false,
		name: 'Altera',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$A),
				author$project$Database$Passive$divinity(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Sword of the God of War',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Photon Ray',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 54),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Tactics',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$OffensiveResist,
						A2(author$project$Database$Skill$Range, 40, 80)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Natural Body',
				rank: author$project$Database$Skill$D
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Crest of the Star',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1907, hp: 2039},
			grail: {atk: 13511, hp: 15236},
			max: {atk: 12343, hp: 13907}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Bride]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 30,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.7, npDef: 3, starRate: 10.1, starWeight: 102},
		hits: {arts: 3, buster: 1, ex: 5, quick: 3},
		id: 90,
		limited: true,
		name: 'Nero Claudius (Bride)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Ending of the Rose of Prominence',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 2,
			kind: 'Anti-Personnel',
			name: 'Fax Caelestis',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 500, 900)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$CritChance,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 15),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 35, 45))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Stars for the Sky',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 30, 40)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$StarUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Flowers for the Earth',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Ally,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Love for the People',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1793, hp: 2089},
			grail: {atk: 12706, hp: 15609},
			max: {atk: 11607, hp: 14284}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Saberface, author$project$Database$Base$Roman, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 25,
		death: 24.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.56, npDef: 3, starRate: 10, starWeight: 98},
		hits: {arts: 3, buster: 1, ex: 4, quick: 2},
		id: 76,
		limited: false,
		name: 'Mordred',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Rebellion Against My Beautiful Father',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Clarent Blood Arthur',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Arthur),
					A2(author$project$Database$Skill$Range, 180, 220)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 30, 50)),
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						A2(author$project$Database$Skill$Range, 10, 30))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Secret of Pedigree',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1811, hp: 2153},
			grail: {atk: 12833, hp: 16083},
			max: {atk: 11723, hp: 14680}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 6),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 15,
		death: 24.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 9.9, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 4, quick: 4},
		id: 91,
		limited: true,
		name: 'Ryougi Shiki (Saber)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$connectionRoot(author$project$Database$Skill$A),
				author$project$Database$Passive$independentManifestation(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Mukushiki Kara no Kyoukai',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 450, 750)),
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Unit',
			name: 'Amalavijñāna—Boundary of Emptiness',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Kill,
					A2(author$project$Database$Skill$Range, 60, 100))
				]),
			rank: author$project$Database$Skill$EX
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 20),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 18),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 24)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
						A2(author$project$Database$Skill$Range, 25, 40)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Enemies,
						1,
						author$project$Database$Skill$DeathDown,
						A2(author$project$Database$Skill$Range, 60, 80))
					]),
				icon: author$project$Database$Base$IconMystic,
				name: 'Mystic Eyes of Death Perception',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 18, 36))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Unyou',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 2000, 5000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$DemeritGauge,
						author$project$Database$Skill$Flat(10))
					]),
				icon: author$project$Database$Base$IconYinYang,
				name: 'Yin-Yang',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1656, hp: 2266},
			grail: {atk: 11736, hp: 16929},
			max: {atk: 10721, hp: 15453}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$EnumaElish, author$project$Database$Base$PseudoServant])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 5)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 5,
		death: 21,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.86, npDef: 3, starRate: 10, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 2,
		limited: false,
		name: 'Altria Pendragon',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Sword of Promised Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Fortress',
			name: 'Excalibur',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 50))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 5,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					5),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 29)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					12),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 11),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 15))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1734, hp: 2222},
			grail: {atk: 12283, hp: 16597},
			max: {atk: 11221, hp: 15150}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$Arthur, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 14,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.83, npDef: 3, starRate: 10, starWeight: 100},
		hits: {arts: 2, buster: 4, ex: 5, quick: 3},
		id: 121,
		limited: false,
		name: 'Lancelot (Saber)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Severance of the Binding Chains—Lake\'s Overflowing Light',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					author$project$Database$Skill$Flat(30)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 900, 1500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Arondight Overload',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemy,
					5,
					author$project$Database$Skill$DamageVuln,
					A2(author$project$Database$Skill$Range, 1000, 3000))
				]),
			rank: author$project$Database$Skill$A
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 12)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(30)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Knight of the Lake',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 3000, 6000))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Eternal Arms Mastery',
				rank: author$project$Database$Skill$APlus
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$StarsPerTurn,
						A2(author$project$Database$Skill$Range, 5, 15)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconStarTurn,
				name: 'Knight of Owner',
				rank: author$project$Database$Skill$APlusPlus
			}
			]),
		stats: {
			base: {atk: 1658, hp: 1854},
			grail: {atk: 12046, hp: 14051},
			max: {atk: 9949, hp: 11589}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Evil]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 14,
		death: 19.2,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.86, npDef: 3, starRate: 9.9, starWeight: 99},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 3,
		limited: false,
		name: 'Altria Pendragon (Alter)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Sword of Promised Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 450, 650))
				]),
			first: false,
			hits: 3,
			kind: 'Anti-Fortress',
			name: 'Excalibur Morgan',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			rank: author$project$Database$Skill$APlusPlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 30),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 6, 12))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$E
			}
			]),
		stats: {
			base: {atk: 1708, hp: 1854},
			grail: {atk: 12408, hp: 14051},
			max: {atk: 10248, hp: 11589}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$King, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$Arthur, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 4)
				])),
		attr: author$project$Database$Base$Heaven,
		_class: author$project$Database$Base$Saber,
		curve: 24,
		death: 24.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 10.2, starWeight: 100},
		hits: {arts: 2, buster: 1, ex: 4, quick: 2},
		id: 101,
		limited: false,
		name: 'Rama',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$A),
				author$project$Database$Passive$riding(author$project$Database$Skill$APlus),
				author$project$Database$Passive$divinity(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Rakshasa-Piercing Immortal',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Demon',
			name: 'Brahmastra',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Demonic),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 60)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 6,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$StarAbsorb,
						A2(author$project$Database$Skill$Range, 300, 500)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconStarUp,
				name: 'Blessing of Martial Arts',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 9,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Guts),
						author$project$Database$Skill$Flat(1000)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 3000))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Curse of Separation',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1642, hp: 1901},
			grail: {atk: 11931, hp: 14541},
			max: {atk: 9854, hp: 11882}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 10)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 15,
		death: 24.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.84, npDef: 3, starRate: 10.1, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 5, quick: 2},
		id: 5,
		limited: false,
		name: 'Nero Claudius',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Imperium of the Maiden\'s Flowery Words',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageThruDef,
					A2(author$project$Database$Skill$Range, 600, 900))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Encampment',
			name: 'Laus St. Claudius',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					1,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 20, 40))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 20)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 50, 100)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 500, 2000))
					]),
				icon: author$project$Database$Base$IconHoodUp,
				name: 'Migraine',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1200, 3400)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$AttackUp),
						A2(author$project$Database$Skill$Range, 22, 44)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(60),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$DefenseUp),
						A2(author$project$Database$Skill$Range, 22, 44))
					]),
				icon: author$project$Database$Base$IconHeal,
				name: 'Imperial Privilege',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 12,
				effect: _List_fromArray(
					[
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(3),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 5, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 300, 600))
					]),
				icon: author$project$Database$Base$IconKneel,
				name: 'Invictus Spiritus',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1574, hp: 1880},
			grail: {atk: 11441, hp: 14250},
			max: {atk: 9449, hp: 11753}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Roman, author$project$Database$Base$Saberface, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$PhoenixFeather, 7),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 8)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 9,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.83, npDef: 3, starRate: 10, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 10,
		limited: false,
		name: 'Chevalier d\'Eon',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Gorgeous Blooming Lilies',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					2,
					author$project$Database$Skill$AttackDown,
					A2(author$project$Database$Skill$Range, 10, 30)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					2,
					author$project$Database$Skill$DefenseDown,
					A2(author$project$Database$Skill$Range, 10, 30))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Army',
			name: 'Fleur de Lis',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Chances,
					10,
					50,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$Charm, author$project$Database$Skill$Full))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 15),
					_Utils_Tuple2(author$project$Database$Base$SerpentJewel, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (True)',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 50, 100))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Self-Suggestion',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconFace,
				name: 'Beautiful Appearance',
				rank: author$project$Database$Skill$C
			}
			]),
		stats: {
			base: {atk: 1734, hp: 2121},
			grail: {atk: 10613, hp: 16073},
			max: {atk: 8765, hp: 13256}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Nonbinary, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Chaotic, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 4,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.83, npDef: 3, starRate: 10, starWeight: 97},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 6,
		limited: false,
		name: 'Siegfried',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Illusory Greatsword: Felling of the Sky Demon',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500))
				]),
			first: false,
			hits: 1,
			kind: 'Anti-Army',
			name: 'Balmung',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$DamageVs(author$project$Database$Base$Dragon),
					A2(author$project$Database$Skill$Range, 150, 200))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 6),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 15, 37.5))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$CMinus
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$Heal,
						A2(author$project$Database$Skill$Range, 1000, 2500))
					]),
				icon: author$project$Database$Base$IconBubbles,
				name: 'Disengage',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackVs(author$project$Database$Base$Dragon),
						A2(author$project$Database$Skill$Range, 50, 80)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseVs(author$project$Database$Base$Dragon),
						author$project$Database$Skill$Flat(30))
					]),
				icon: author$project$Database$Base$IconDamageUp,
				name: 'Dragon-Slayer',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1363, hp: 2266},
			grail: {atk: 9905, hp: 17175},
			max: {atk: 8181, hp: 14165}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$Dragon, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 6)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 30)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 4,
		death: 21,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.14, npDef: 3, starRate: 10, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 5, quick: 2},
		id: 123,
		limited: false,
		name: 'Gawain',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'The Reborn Sword of Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 500)),
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Enemies, 1, author$project$Database$Skill$SealSkills, author$project$Database$Skill$Full)
				]),
			first: false,
			hits: 4,
			kind: 'Anti-Army',
			name: 'Excalibur Galatine',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					5,
					author$project$Database$Skill$Burn,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 8),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 36),
					_Utils_Tuple2(author$project$Database$Base$SpiritRoot, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						author$project$Database$Skill$Flat(20)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$When('on Open Field with Sunshine'),
						A3(
							author$project$Database$Skill$Grant,
							author$project$Database$Skill$Self,
							3,
							author$project$Database$Skill$Performance(author$project$Database$Base$Buster)),
						A2(author$project$Database$Skill$Range, 20, 30))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Numeral of The Saint',
				rank: author$project$Database$Skill$EX
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 6, 12))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$E
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(20)),
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 5, 10)),
						A3(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Times(1),
						A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Guts),
						A2(author$project$Database$Skill$Range, 1000, 2000))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Belt of Bertilak',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1695, hp: 1827},
			grail: {atk: 12317, hp: 13845},
			max: {atk: 10173, hp: 11419}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 18)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 10),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 4)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 14,
		death: 21,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 0.86, npDef: 3, starRate: 10, starWeight: 102},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 4,
		limited: true,
		name: 'Altria Pendragon (Lily)',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$C)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Golden Sword of Assured Victory',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 300, 600))
				]),
			first: false,
			hits: 8,
			kind: 'Anti-Personnel',
			name: 'Caliburn',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$Heal,
					A2(author$project$Database$Skill$Range, 1000, 5000))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 4,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$DragonFang, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					10),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 12)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 24),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 3)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 9),
					_Utils_Tuple2(author$project$Database$Base$DragonsReverseScale, 8)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$GainStars,
						A2(author$project$Database$Skill$Range, 4, 14))
					]),
				icon: author$project$Database$Base$IconStar,
				name: 'Intuition',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Mana Burst',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Journey of the Flowers',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1287, hp: 1699},
			grail: {atk: 9355, hp: 12880},
			max: {atk: 7726, hp: 10623}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Female, author$project$Database$Base$Riding, author$project$Database$Base$Dragon, author$project$Database$Base$Saberface, author$project$Database$Base$Arthur, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Neutral, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ForbiddenPage, 7),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 5)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 13,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.1, npDef: 3, starRate: 10, starWeight: 99},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 7,
		limited: false,
		name: 'Gaius Julius Caesar',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$C),
				author$project$Database$Passive$riding(author$project$Database$Skill$B),
				author$project$Database$Passive$divinity(author$project$Database$Skill$D)
			]),
		phantasm: {
			card: author$project$Database$Base$Quick,
			desc: 'The Yellow Death',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 1200, 2000))
				]),
			first: false,
			hits: 10,
			kind: 'Anti-Personnel',
			name: 'Crocea Mors',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			rank: author$project$Database$Skill$BPlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 12),
					_Utils_Tuple2(author$project$Database$Base$ClawOfChaos, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 9, 18))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Tactics',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Charisma',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$CritUp,
						A2(author$project$Database$Skill$Range, 20, 40)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Ally,
						3,
						author$project$Database$Skill$DefenseDown,
						author$project$Database$Skill$Flat(20))
					]),
				icon: author$project$Database$Base$IconExclamationUp,
				name: 'Incite',
				rank: author$project$Database$Skill$EX
			}
			]),
		stats: {
			base: {atk: 1392, hp: 1727},
			grail: {atk: 10146, hp: 13009},
			max: {atk: 7497, hp: 9595}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$King, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$Roman, author$project$Database$Base$Divine, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Balanced]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 2)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 3),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 8)
				])),
		attr: author$project$Database$Base$Earth,
		_class: author$project$Database$Base$Saber,
		curve: 23,
		death: 35,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 1.09, npDef: 3, starRate: 10, starWeight: 99},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 72,
		limited: false,
		name: 'Fergus mac Roich',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$B)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Rainbow Sword',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemies,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			first: false,
			hits: 5,
			kind: 'Anti-Army',
			name: 'Caladbolg',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Enemies,
					3,
					author$project$Database$Skill$DebuffVuln,
					A2(author$project$Database$Skill$Range, 20, 60))
				]),
			rank: author$project$Database$Skill$APlus
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$OctupletCrystals, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 5)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$SeedOfYggdrasil, 15),
					_Utils_Tuple2(author$project$Database$Base$MeteorHorseshoe, 16)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$AttackUp,
						A2(author$project$Database$Skill$Range, 10, 30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$MentalResist,
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconSwordUp,
				name: 'Valor',
				rank: author$project$Database$Skill$A
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 15, 25)),
						A4(
						author$project$Database$Skill$Debuff,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$BuffFail,
						author$project$Database$Skill$Flat(50))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Defiant',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DefenseUp,
						A2(author$project$Database$Skill$Range, 10, 20))
					]),
				icon: author$project$Database$Base$IconDodge,
				name: 'Mind\'s Eye (True)',
				rank: author$project$Database$Skill$A
			}
			]),
		stats: {
			base: {atk: 1385, hp: 1761},
			grail: {atk: 10096, hp: 13268},
			max: {atk: 7460, hp: 9786}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish, author$project$Database$Base$King])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$EternalGear, 7),
					_Utils_Tuple2(author$project$Database$Base$GreatKnightMedal, 16)
				])),
		attr: author$project$Database$Base$Star,
		_class: author$project$Database$Base$Saber,
		curve: 13,
		death: 28,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: true,
		gen: {npAtk: 1.11, npDef: 3, starRate: 10.2, starWeight: 100},
		hits: {arts: 2, buster: 1, ex: 5, quick: 2},
		id: 126,
		limited: false,
		name: 'Bedivere',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$A)
			]),
		phantasm: {
			card: author$project$Database$Base$Buster,
			desc: 'Be my Sword, Silver Arm',
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Enemy,
					author$project$Database$Skill$Damage,
					A2(author$project$Database$Skill$Range, 600, 1000))
				]),
			first: true,
			hits: 2,
			kind: 'Anti-Unit',
			name: 'Switch On—Airgetlám',
			over: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 30, 70))
				]),
			rank: author$project$Database$Skill$C
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 12),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$FoolsChain, 36),
					_Utils_Tuple2(author$project$Database$Base$TearstoneOfBlood, 10)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Tactics',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Self,
						author$project$Database$Skill$GaugeUp,
						author$project$Database$Skill$Flat(30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconNoble,
				name: 'Calm and Collected',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$DefenseUp,
						author$project$Database$Skill$Flat(30)),
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						1,
						author$project$Database$Skill$DebuffResist,
						A2(author$project$Database$Skill$Range, 30, 50))
					]),
				icon: author$project$Database$Base$IconShieldUp,
				name: 'Oath of Protection',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1416, hp: 1727},
			grail: {atk: 10322, hp: 13009},
			max: {atk: 7627, hp: 9595}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Brynhild, author$project$Database$Base$Riding, author$project$Database$Base$EnumaElish])
	},
		{
		align: _List_fromArray(
			[author$project$Database$Base$Lawful, author$project$Database$Base$Good]),
		ascendUp: A4(
			author$project$Database$Servant$Ascension,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Piece(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 15)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$Monument(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$EvilBone, 20),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 4)
				])),
		attr: author$project$Database$Base$Mankind,
		_class: author$project$Database$Base$Saber,
		curve: 13,
		death: 31.5,
		deck: A5(author$project$Database$Servant$Deck, author$project$Database$Base$Quick, author$project$Database$Base$Arts, author$project$Database$Base$Arts, author$project$Database$Base$Buster, author$project$Database$Base$Buster),
		free: false,
		gen: {npAtk: 0.82, npDef: 3, starRate: 9.9, starWeight: 98},
		hits: {arts: 2, buster: 1, ex: 3, quick: 2},
		id: 9,
		limited: false,
		name: 'Gilles de Rais',
		passives: _List_fromArray(
			[
				author$project$Database$Passive$magicResistance(author$project$Database$Skill$B),
				author$project$Database$Passive$riding(author$project$Database$Skill$B),
				author$project$Database$Passive$madness(author$project$Database$Skill$EX)
			]),
		phantasm: {
			card: author$project$Database$Base$Arts,
			desc: 'Rally Thy War Cries Under the Holy Flag',
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					2,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 50, 100)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(50))
				]),
			first: false,
			hits: 0,
			kind: 'Anti-Personnel',
			name: 'Saint War Order',
			over: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 5, 25))
				]),
			rank: author$project$Database$Skill$B
		},
		rarity: 3,
		skillUp: A8(
			author$project$Database$Servant$Reinforcement,
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$GemOf(author$project$Database$Base$Saber),
					8)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$MagicGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 7)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					4),
					_Utils_Tuple2(author$project$Database$Base$VoidsDust, 13)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(
					author$project$Database$Base$SecretGemOf(author$project$Database$Base$Saber),
					8),
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 10)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$ProofOfHero, 20),
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 4)
				]),
			_List_fromArray(
				[
					_Utils_Tuple2(author$project$Database$Base$GhostLantern, 12),
					_Utils_Tuple2(author$project$Database$Base$HeartOfTheForeignGod, 7)
				])),
		skills: _List_fromArray(
			[
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$NPUp,
						A2(author$project$Database$Skill$Range, 8, 16))
					]),
				icon: author$project$Database$Base$IconBeamUp,
				name: 'Tactics',
				rank: author$project$Database$Skill$C
			},
				{
				cd: 8,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						3,
						author$project$Database$Skill$NPGen,
						A2(author$project$Database$Skill$Range, 18, 45))
					]),
				icon: author$project$Database$Base$IconNobleUp,
				name: 'Golden Rule',
				rank: author$project$Database$Skill$B
			},
				{
				cd: 7,
				effect: _List_fromArray(
					[
						A4(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						5,
						author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
						A2(author$project$Database$Skill$Range, 20, 40))
					]),
				icon: author$project$Database$Base$IconBusterUp,
				name: 'Prelati\'s Encouragement',
				rank: author$project$Database$Skill$B
			}
			]),
		stats: {
			base: {atk: 1228, hp: 1889},
			grail: {atk: 8952, hp: 14234},
			max: {atk: 6615, hp: 10498}
		},
		traits: _List_fromArray(
			[author$project$Database$Base$Male, author$project$Database$Base$Riding, author$project$Database$Base$Brynhild, author$project$Database$Base$EnumaElish])
	}
	]);
var elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);
		}
	});
var elm$core$List$concat = function (lists) {
	return A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);
};
var elm$core$List$sortBy = _List_sortBy;
var author$project$Database$servants = function () {
	var addUniversal = function (s) {
		return _Utils_update(
			s,
			{
				passives: A2(
					elm$core$List$sortBy,
					function ($) {
						return $.name;
					},
					s.passives),
				traits: A2(
					elm$core$List$sortBy,
					author$project$Class$Show$trait,
					A2(elm$core$List$cons, author$project$Database$Base$Humanoid, s.traits))
			});
	};
	var addHeavenOrEarth = function (s) {
		var _n0 = s.attr;
		switch (_n0.$) {
			case 'Earth':
				return _Utils_update(
					s,
					{
						traits: A2(elm$core$List$cons, author$project$Database$Base$HeavenOrEarth, s.traits)
					});
			case 'Heaven':
				return _Utils_update(
					s,
					{
						traits: A2(elm$core$List$cons, author$project$Database$Base$HeavenOrEarth, s.traits)
					});
			default:
				return s;
		}
	};
	return A3(
		elm$core$Basics$composeR,
		elm$core$List$concat,
		elm$core$List$map(
			A2(elm$core$Basics$composeR, addHeavenOrEarth, addUniversal)),
		_List_fromArray(
			[author$project$Database$Servant$Archer$archers, author$project$Database$Servant$Assassin$assassins, author$project$Database$Servant$Berserker$berserkers, author$project$Database$Servant$Caster$casters, author$project$Database$Servant$Extra$extras, author$project$Database$Servant$Lancer$lancers, author$project$Database$Servant$Rider$riders, author$project$Database$Servant$Saber$sabers]));
}();
var author$project$Database$Base$IconArtsQuickUp = {$: 'IconArtsQuickUp'};
var author$project$Database$Base$IconBusterArtsUp = {$: 'IconBusterArtsUp'};
var author$project$Database$Base$IconFire = {$: 'IconFire'};
var author$project$Database$Base$IconNobleRedUp = {$: 'IconNobleRedUp'};
var author$project$Database$Base$IconQuartz = {$: 'IconQuartz'};
var author$project$Database$Base$IconQuickBusterUp = {$: 'IconQuickBusterUp'};
var author$project$Database$Base$IconRainbow = {$: 'IconRainbow'};
var author$project$Database$Base$IconRoad = {$: 'IconRoad'};
var author$project$Database$Base$IconSwordShieldUp = {$: 'IconSwordShieldUp'};
var author$project$Class$Show$class = function (a) {
	switch (a.$) {
		case 'Saber':
			return 'Saber';
		case 'Archer':
			return 'Archer';
		case 'Lancer':
			return 'Lancer';
		case 'Caster':
			return 'Caster';
		case 'Rider':
			return 'Rider';
		case 'Assassin':
			return 'Assassin';
		case 'Berserker':
			return 'Berserker';
		case 'Shielder':
			return 'Shielder';
		case 'Ruler':
			return 'Ruler';
		default:
			return 'Avenger';
	}
};
var author$project$Database$CraftEssence$equipped = A2(
	elm$core$Basics$composeL,
	A2(
		elm$core$Basics$composeL,
		author$project$Database$Skill$When,
		elm$core$Basics$append('equipped by a ')),
	author$project$Class$Show$class);
var author$project$Database$Skill$Bond = {$: 'Bond'};
var author$project$Database$Skill$Bonus = F3(
	function (a, b, c) {
		return {$: 'Bonus', a: a, b: b, c: c};
	});
var author$project$Database$Skill$EXP = {$: 'EXP'};
var author$project$Database$Skill$FriendPoints = {$: 'FriendPoints'};
var author$project$Database$Skill$GutsPercent = {$: 'GutsPercent'};
var author$project$Database$Skill$HealthLoss = {$: 'HealthLoss'};
var author$project$Database$Skill$MysticCode = {$: 'MysticCode'};
var author$project$Database$Skill$QPDrop = {$: 'QPDrop'};
var author$project$Database$Skill$QPQuest = {$: 'QPQuest'};
var author$project$Database$Skill$StarDown = {$: 'StarDown'};
var author$project$Database$Skill$Target = {$: 'Target'};
var author$project$Database$Skill$ToMax = F2(
	function (a, b) {
		return {$: 'ToMax', a: a, b: b};
	});
var author$project$Database$CraftEssence$craftEssences = function () {
	var party = function (buff) {
		return A2(
			elm$core$Basics$composeL,
			A2(
				elm$core$Basics$composeL,
				A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, buff),
				author$project$Database$Skill$Flat),
			elm$core$Basics$toFloat);
	};
	var party_ = function (card) {
		return party(
			author$project$Database$Skill$Performance(card));
	};
	var np30 = A4(
		author$project$Database$Skill$Grant,
		author$project$Database$Skill$Self,
		0,
		author$project$Database$Skill$NPUp,
		author$project$Database$Skill$Flat(30));
	var gutsPercent = A2(
		elm$core$Basics$composeL,
		A2(
			elm$core$Basics$composeL,
			A2(
				elm$core$Basics$composeL,
				author$project$Database$Skill$Times(1),
				A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$GutsPercent)),
			author$project$Database$Skill$Flat),
		elm$core$Basics$toFloat);
	var bond = F5(
		function (id, name, servant, icon, effect) {
			return {
				bond: elm$core$Maybe$Just(servant),
				effect: effect,
				icon: icon,
				id: id,
				limited: false,
				name: name,
				rarity: 4,
				stats: {
					base: {atk: 100, hp: 100},
					max: {atk: 100, hp: 100}
				}
			};
		});
	var atkChance = function (chance) {
		return A2(
			elm$core$Basics$composeL,
			author$project$Database$Skill$When('attacking'),
			author$project$Database$Skill$Chance(chance));
	};
	return _List_fromArray(
		[
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 1,
			limited: false,
			name: 'Tenacity',
			rarity: 1,
			stats: {
				base: {atk: 0, hp: 100},
				max: {atk: 0, hp: 300}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 2,
			limited: false,
			name: 'Meditation',
			rarity: 1,
			stats: {
				base: {atk: 0, hp: 150},
				max: {atk: 0, hp: 450}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 3,
			limited: false,
			name: 'Technique',
			rarity: 1,
			stats: {
				base: {atk: 100, hp: 0},
				max: {atk: 300, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 4,
			limited: false,
			name: 'Preemption',
			rarity: 1,
			stats: {
				base: {atk: 100, hp: 0},
				max: {atk: 300, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 5,
			limited: false,
			name: 'Destruction',
			rarity: 1,
			stats: {
				base: {atk: 100, hp: 0},
				max: {atk: 300, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 6,
			limited: false,
			name: 'Flash',
			rarity: 2,
			stats: {
				base: {atk: 150, hp: 0},
				max: {atk: 500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconStarHaloUp,
			id: 7,
			limited: false,
			name: 'Opportunity',
			rarity: 2,
			stats: {
				base: {atk: 75, hp: 112},
				max: {atk: 250, hp: 375}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 8,
			limited: false,
			name: 'Fruitful',
			rarity: 2,
			stats: {
				base: {atk: 75, hp: 112},
				max: {atk: 250, hp: 375}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 9,
			limited: false,
			name: 'Concentration',
			rarity: 2,
			stats: {
				base: {atk: 75, hp: 112},
				max: {atk: 250, hp: 375}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 10,
			limited: false,
			name: 'Divine Oracle',
			rarity: 2,
			stats: {
				base: {atk: 150, hp: 0},
				max: {atk: 500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 11,
			limited: false,
			name: 'Azoth Blade',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 200},
				max: {atk: 0, hp: 1000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 12,
			limited: false,
			name: 'False Attendant\'s Writings',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 13,
			limited: false,
			name: 'The Azure Black Keys',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 14,
			limited: false,
			name: 'The Verdant Black Keys',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 15,
			limited: false,
			name: 'The Crimson Black Keys',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 16,
			limited: false,
			name: 'Rin\'s Pendant',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconStarHaloUp,
			id: 17,
			limited: false,
			name: 'Spell Tome',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 150},
				max: {atk: 500, hp: 750}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 18,
			limited: false,
			name: 'Dragon\'s Meridian',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 150},
				max: {atk: 500, hp: 750}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 19,
			limited: false,
			name: 'Sorcery Ore',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 150},
				max: {atk: 500, hp: 750}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 20,
			limited: false,
			name: 'Dragonkin',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 21,
			limited: false,
			name: 'Iron-Willed Training',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 400},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 22,
			limited: false,
			name: 'Primeval Curse',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 23,
			limited: false,
			name: 'Projection',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 24,
			limited: false,
			name: 'Gandr',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 25,
			limited: false,
			name: 'Verdant Sound of Destruction',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 26,
			limited: false,
			name: 'Gem Magecraft: Antumbra',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconStarHaloUp,
			id: 27,
			limited: false,
			name: 'Be Elegant',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 300},
				max: {atk: 750, hp: 1125}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 60, 75))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 28,
			limited: false,
			name: 'The Imaginary Element',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 300},
				max: {atk: 750, hp: 1125}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 29,
			limited: false,
			name: 'Divine Banquet',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 300},
				max: {atk: 750, hp: 1125}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 30,
			limited: false,
			name: 'Angel\'s Song',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 31,
			limited: false,
			name: 'Formal Craft',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 32,
			limited: false,
			name: 'Imaginary Around',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 33,
			limited: false,
			name: 'Limited/Zero Over',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 80, 100))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 34,
			limited: false,
			name: 'Kaleidoscope',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 35,
			limited: false,
			name: 'Heaven\'s Feel',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$FriendPoints,
					false,
					author$project$Database$Skill$Flat(75))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 36,
			limited: true,
			name: 'Beginning of the Journey',
			rarity: 4,
			stats: {
				base: {atk: 50, hp: 50},
				max: {atk: 50, hp: 50}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconDodge,
			id: 37,
			limited: false,
			name: 'Parted Sea',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 600, 800))
				]),
			icon: author$project$Database$Base$IconStarUp,
			id: 38,
			limited: false,
			name: 'Seal Designation Enforcer',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseVs(author$project$Database$Base$Male),
					A2(author$project$Database$Skill$Range, 25, 35))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 39,
			limited: false,
			name: 'Holy Shroud of Magdalene',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 400},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconNobleTurn,
			id: 40,
			limited: false,
			name: 'Prisma Cosmos',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 375},
				max: {atk: 1000, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					A2(author$project$Database$Skill$Range, 500, 1000))
				]),
			icon: author$project$Database$Base$IconKneel,
			id: 41,
			limited: true,
			name: 'Nightless Rose',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 500},
				max: {atk: 0, hp: 2000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					A2(author$project$Database$Skill$Range, 500, 1000))
				]),
			icon: author$project$Database$Base$IconAllUp,
			id: 42,
			limited: false,
			name: 'Mooncell Automaton',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Resist(author$project$Database$Skill$Charm),
					A2(author$project$Database$Skill$Range, 80, 100))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 43,
			limited: true,
			name: 'Moony Jewel',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 500, 750))
				]),
			icon: author$project$Database$Base$IconHealTurn,
			id: 44,
			limited: true,
			name: 'Moon Goddess\' Bath',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 500},
				max: {atk: 0, hp: 2000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconStarHaloUp,
			id: 45,
			limited: true,
			name: 'Moonlight Fest',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 375},
				max: {atk: 1000, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 100, 200))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 46,
			limited: false,
			name: 'Runestone',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 150},
				max: {atk: 500, hp: 750}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconBullseye,
			id: 47,
			limited: false,
			name: 'With One Strike',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 60, 80)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealthLoss,
					author$project$Database$Skill$Flat(500))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 48,
			limited: false,
			name: 'The Black Grail',
			rarity: 5,
			stats: {
				base: {atk: 600, hp: 0},
				max: {atk: 2400, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 100, 200))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 49,
			limited: true,
			name: 'Jack-o\'-lantern',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 10, 12))
				]),
			icon: author$project$Database$Base$IconStaffUp,
			id: 50,
			limited: true,
			name: 'Trick or Treat',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 150},
				max: {atk: 500, hp: 750}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					1,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			icon: author$project$Database$Base$IconCrosshairUp,
			id: 51,
			limited: true,
			name: 'Halloween Arrangement',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 52,
			limited: true,
			name: 'Halloween Princess',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 375},
				max: {atk: 1000, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 53,
			limited: true,
			name: 'Little Halloween Devil',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 60, 75))
				]),
			icon: author$project$Database$Base$IconHealUp,
			id: 54,
			limited: true,
			name: 'Maid in Halloween',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 100, 200))
				]),
			icon: author$project$Database$Base$IconHealTurn,
			id: 55,
			limited: false,
			name: 'Anchors Aweigh',
			rarity: 3,
			stats: {
				base: {atk: 300, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 25, 30)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconSwordShieldUp,
			id: 56,
			limited: false,
			name: 'Code Cast',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 300},
				max: {atk: 750, hp: 1125}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 57,
			limited: false,
			name: 'Victor of the Moon',
			rarity: 5,
			stats: {
				base: {atk: 600, hp: 0},
				max: {atk: 2400, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 58,
			limited: false,
			name: 'Another Ending',
			rarity: 5,
			stats: {
				base: {atk: 600, hp: 0},
				max: {atk: 2400, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 1, 2))
				]),
			icon: author$project$Database$Base$IconAllUp,
			id: 59,
			limited: true,
			name: 'Fate GUDAGUDA Order',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 150},
				max: {atk: 500, hp: 750}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconQuickBusterUp,
			id: 60,
			limited: true,
			name: 'After-Party Order!',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 61,
			limited: true,
			name: 'Guda-o',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			icon: author$project$Database$Base$IconCrosshairUp,
			id: 62,
			limited: true,
			name: 'GUDAGUDA Poster Girl',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 65,
			limited: false,
			name: 'Demon Boar',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 40, 50)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(20))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 66,
			limited: false,
			name: 'Knight\'s Dignity',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 300},
				max: {atk: 750, hp: 1125}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconStarTurn,
			id: 67,
			limited: false,
			name: 'A Fragment of 2030',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 68,
			limited: true,
			name: 'Lightning Reindeer',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			icon: author$project$Database$Base$IconHealTurn,
			id: 69,
			limited: true,
			name: 'March of the Saint',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			icon: author$project$Database$Base$IconStarUp,
			id: 70,
			limited: true,
			name: 'Present For My Master',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 71,
			limited: true,
			name: 'Holy Night Sign',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 375},
				max: {atk: 1000, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 2, 3))
				]),
			icon: author$project$Database$Base$IconNobleTurn,
			id: 72,
			limited: false,
			name: 'Clock Tower',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					A2(
						elm$core$Basics$composeL,
						author$project$Database$Skill$Chance(50),
						author$project$Database$Skill$Times(1)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					A2(author$project$Database$Skill$Range, 500, 1000))
				]),
			icon: author$project$Database$Base$IconKneel,
			id: 73,
			limited: false,
			name: 'Necromancy',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2400}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(60),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$GaugePerTurn),
					A2(author$project$Database$Skill$Range, 12, 15)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealthLoss,
					author$project$Database$Skill$Flat(500))
				]),
			icon: author$project$Database$Base$IconNobleTurn,
			id: 74,
			limited: false,
			name: 'Awakened Will',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 300},
				max: {atk: 750, hp: 1125}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$When,
					'defeated by an enemy',
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 2, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated by an enemy'),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 10, author$project$Database$Skill$Curse),
					A2(author$project$Database$Skill$Range, 1000, 2000))
				]),
			icon: author$project$Database$Base$IconCircuits,
			id: 75,
			limited: false,
			name: '500-Year Obsession',
			rarity: 5,
			stats: {
				base: {atk: 600, hp: 0},
				max: {atk: 2400, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackDown,
					author$project$Database$Skill$Flat(10))
				]),
			icon: author$project$Database$Base$IconHealTurn,
			id: 76,
			limited: true,
			name: 'Peacefulness of 2018',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 77,
			limited: true,
			name: 'Heroic New Year',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$QPQuest,
					false,
					A2(author$project$Database$Skill$Range, 2017, 2018))
				]),
			icon: author$project$Database$Base$IconQuartz,
			id: 78,
			limited: true,
			name: 'Law of the Jungle',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Taunt, author$project$Database$Skill$Full),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 1, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			icon: author$project$Database$Base$IconShield,
			id: 79,
			limited: true,
			name: 'Grand New Year',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$QPDrop,
					true,
					A2(author$project$Database$Skill$Range, 2, 10))
				]),
			icon: author$project$Database$Base$IconQuartz,
			id: 80,
			limited: true,
			name: 'Mona Lisa',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 0, 1))
				]),
			icon: author$project$Database$Base$IconStarTurn,
			id: 81,
			limited: true,
			name: 'Happy x3 Order',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 2018},
				max: {atk: 0, hp: 2018}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$ToMax(
						A2(author$project$Database$Skill$Range, 40, 50)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					author$project$Database$Skill$Flat(5))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 82,
			limited: true,
			name: 'Purely Bloom',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(1)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconKneel,
			id: 83,
			limited: true,
			name: 'Star of Altria',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconBullseye,
			id: 84,
			limited: true,
			name: 'Trueshot',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Chance(65),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$HealPerTurn),
					A2(author$project$Database$Skill$Range, 750, 1000))
				]),
			icon: author$project$Database$Base$IconHealTurn,
			id: 85,
			limited: true,
			name: 'Mikotto! Bride Training',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$ToMax(
						A2(author$project$Database$Skill$Range, 1000, 1200)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DamageUp),
					author$project$Database$Skill$Flat(100))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 86,
			limited: true,
			name: 'The Crimson Land of Shadows',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 89,
			limited: false,
			name: 'Ryudoji Temple',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 160},
				max: {atk: 500, hp: 800}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$ClassAffinity(author$project$Database$Base$Caster),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 90,
			limited: false,
			name: 'Mana Gauge',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Success(author$project$Database$Skill$Charm),
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			icon: author$project$Database$Base$IconHeart,
			id: 91,
			limited: false,
			name: 'Elixir of Love',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 160},
				max: {atk: 500, hp: 800}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$CraftEssence$equipped(author$project$Database$Base$Berserker),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					A2(author$project$Database$Skill$Range, 15, 25))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 92,
			limited: false,
			name: 'Storch Ritter',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 93,
			limited: false,
			name: 'Hermitage',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$ClassAffinity(author$project$Database$Base$Rider),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 94,
			limited: false,
			name: 'Motored Cuirassier',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$Heal),
					A2(author$project$Database$Skill$Range, 800, 1000))
				]),
			icon: author$project$Database$Base$IconHeal,
			id: 95,
			limited: false,
			name: 'Stuffed Lion',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Resist(author$project$Database$Skill$Stun),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 96,
			limited: false,
			name: 'Lugh\'s Halo',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					3,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 97,
			limited: false,
			name: 'Vessel of the Saint',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$ToMax(
						author$project$Database$Skill$Flat(3000)),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$MaxHP),
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			icon: author$project$Database$Base$IconHPUp,
			id: 98,
			limited: false,
			name: 'Golden Millennium Tree',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 99,
			limited: true,
			name: 'Heroic Portrait: Mash Kyrielight',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 100,
			limited: true,
			name: 'Heroic Portrait: Altria Pendragon',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 101,
			limited: true,
			name: 'Heroic Portrait: Jeanne d\'Arc',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 102,
			limited: true,
			name: 'Heroic Portrait: Altera',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 103,
			limited: true,
			name: 'Heroic Portrait: Arjuna',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 104,
			limited: true,
			name: 'Heroic Portrait: Scathach',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 105,
			limited: true,
			name: 'Heroic Portrait: Ushiwakamaru',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 106,
			limited: true,
			name: 'Heroic Portrait: Henry Jekyll & Hyde',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 107,
			limited: true,
			name: 'Heroic Portrait: Mephistopheles',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 108,
			limited: true,
			name: 'Heroic Portrait: Darius III',
			rarity: 4,
			stats: {
				base: {atk: 500, hp: 500},
				max: {atk: 500, hp: 500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CharmVuln,
					author$project$Database$Skill$Flat(10))
				]),
			icon: author$project$Database$Base$IconBullseye,
			id: 109,
			limited: true,
			name: 'Valentine Dojo of Tears',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconStarHaloUp,
			id: 110,
			limited: true,
			name: 'Kitchen ☆ Patissiere',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			icon: author$project$Database$Base$IconArtsQuickUp,
			id: 111,
			limited: true,
			name: 'Street Choco-Maid',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(3),
					A3(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Self,
						0,
						author$project$Database$Skill$DefenseVs(author$project$Database$Base$Male)),
					author$project$Database$Skill$Flat(100)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 112,
			limited: true,
			name: 'Melty Sweetheart',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconShieldBreak,
			id: 154,
			limited: true,
			name: 'Decapitating Bunny 2018',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$KillResist,
					A2(author$project$Database$Skill$Range, 60, 80))
				]),
			icon: author$project$Database$Base$IconFire,
			id: 155,
			limited: true,
			name: 'Mature Gentleman',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 156,
			limited: true,
			name: 'Grand Puppeteer',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(3),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DamageDown),
					A2(author$project$Database$Skill$Range, 1000, 1200))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 157,
			limited: true,
			name: 'Threefold Barrier',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 800, 1000))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 158,
			limited: true,
			name: 'Vivid Dance of Fists',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(15))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 159,
			limited: true,
			name: 'Mystic Eyes of Distortion',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconDodge,
			id: 160,
			limited: true,
			name: 'Summer\'s Precognition',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 300, 400)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconStarUp,
			id: 161,
			limited: true,
			name: 'Chorus',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 5, 8)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 162,
			limited: true,
			name: 'Sprinter',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 20, 30)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 163,
			limited: true,
			name: 'Repeat Magic',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 10, 12)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 12)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 12))
				]),
			icon: author$project$Database$Base$IconAllUp,
			id: 165,
			limited: true,
			name: 'Kiss Your Hand',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 5, 60)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 300, 400))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 166,
			limited: true,
			name: 'Teacher and I',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Divine),
					A2(author$project$Database$Skill$Range, 80, 100)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$DefenseVs(author$project$Database$Base$Divine),
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 167,
			limited: true,
			name: 'Versus',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 12, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 12, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 168,
			limited: true,
			name: 'Beasts Under the Moon',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			icon: author$project$Database$Base$IconBullseye,
			id: 169,
			limited: true,
			name: 'Glass Full Sweet Time',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconDodge,
			id: 170,
			limited: true,
			name: 'Salon de Marie',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Dragon),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconStarTurn,
			id: 171,
			limited: true,
			name: 'Prince of Slayer',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 160},
				max: {atk: 500, hp: 800}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Success(author$project$Database$Skill$Charm),
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 172,
			limited: true,
			name: 'Noisy Obsession',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$MaxHP,
					A2(author$project$Database$Skill$Range, 1000, 1200))
				]),
			icon: author$project$Database$Base$IconHPUp,
			id: 175,
			limited: false,
			name: 'Ideal Holy King',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconStaffUp,
			id: 176,
			limited: false,
			name: 'Record Holder',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$CraftEssence$equipped(author$project$Database$Base$Lancer),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					A2(author$project$Database$Skill$Range, 15, 25))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 177,
			limited: false,
			name: 'Beast of Billows',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					true,
					A2(author$project$Database$Skill$Range, 2, 10))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 178,
			limited: true,
			name: 'Personal Training',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 179,
			limited: true,
			name: 'The Scholars of Chaldea',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconStarTurn,
			id: 180,
			limited: true,
			name: 'Maiden Leading Chaldea',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$GaugeUp),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 181,
			limited: true,
			name: 'The Merciless One',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 30, 40))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 182,
			limited: false,
			name: 'Art of the Poisonous Snake',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Humanoid),
					A2(author$project$Database$Skill$Range, 25, 30))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 183,
			limited: false,
			name: 'Art of Death',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconHealUp,
			id: 184,
			limited: false,
			name: 'Gentle Affection',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					3,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 200, 500))
				]),
			icon: author$project$Database$Base$IconShield,
			id: 185,
			limited: false,
			name: 'Volumen Hydrargyrum',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$GaugePerTurn,
					A2(author$project$Database$Skill$Range, 4, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 12))
				]),
			icon: author$project$Database$Base$IconNobleTurn,
			id: 186,
			limited: false,
			name: 'Innocent Maiden',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Success(author$project$Database$Skill$Stun),
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			icon: author$project$Database$Base$IconStaffUp,
			id: 187,
			limited: false,
			name: 'Self Geas Scroll',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconAllUp,
			id: 188,
			limited: false,
			name: 'Before Awakening',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			icon: author$project$Database$Base$IconStarTurn,
			id: 189,
			limited: true,
			name: 'His Rightful Place',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			A5(
			bond,
			191,
			'Crown of the Star',
			'Altria Pendragon',
			author$project$Database$Base$IconDamageUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			192,
			'Relic of the King',
			'Zhuge Liang (Lord El-Melloi II)',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			193,
			'Triumph of the Lord Impaler',
			'Vlad III',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$GaugeUp),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			194,
			'Revelation from Heaven',
			'Jeanne d\'Arc',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			195,
			'Memories of the Dragon',
			'Altria Pendragon (Alter)',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 3, author$project$Database$Skill$DefenseDown),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			196,
			'Hunter of the Red Plains',
			'EMIYA',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$GainStars),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			197,
			'Castle of Snow',
			'Heracles',
			author$project$Database$Base$IconKneel,
			_List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(3),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(500))
				])),
			A5(
			bond,
			198,
			'Yggdrasil Tree',
			'Cu Chulainn (Caster)',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$Heal),
					author$project$Database$Skill$Flat(500))
				])),
			A5(
			bond,
			199,
			'Scorching Embrace',
			'Kiyohime',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 5, author$project$Database$Skill$Burn),
					author$project$Database$Skill$Flat(500))
				])),
			A5(
			bond,
			200,
			'Worthless Jewel',
			'Mata Hari',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			201,
			'Eternal Solitude',
			'Altera',
			author$project$Database$Base$IconSwordUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			202,
			'Queen\'s Present',
			'Chevalier d\'Eon',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			203,
			'Elixir',
			'Elisabeth Bathory',
			author$project$Database$Base$IconHealTurn,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealPerTurn, 500)
				])),
			A5(
			bond,
			204,
			'My Necklace',
			'Marie Antoinette',
			author$project$Database$Base$IconStarHaloUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			205,
			'Staff He Gave Me',
			'Martha',
			author$project$Database$Base$IconHealUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealingReceived, 30)
				])),
			A5(
			bond,
			206,
			'Iron Maiden',
			'Carmilla',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A2(
					atkChance,
					10,
					A4(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 1, author$project$Database$Skill$SealNP, author$project$Database$Skill$Full))
				])),
			A5(
			bond,
			207,
			'Cat Apron',
			'Tamamo Cat',
			author$project$Database$Base$IconHeal,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$MaxHP, 2000)
				])),
			A5(
			bond,
			208,
			'Thirst for Victory',
			'Boudica',
			author$project$Database$Base$IconStarHaloUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			209,
			'To My Dear Friend',
			'Hans Christian Andersen',
			author$project$Database$Base$IconHoodUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$DebuffResist, 30)
				])),
			A5(
			bond,
			210,
			'Sacred Devotion',
			'Arash',
			author$project$Database$Base$IconHeal,
			_List_fromArray(
				[
					A2(
					author$project$Database$Skill$When,
					'defeated',
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$RemoveDebuffs, author$project$Database$Skill$Full)),
					A2(
					author$project$Database$Skill$When,
					'defeated',
					A3(
						author$project$Database$Skill$To,
						author$project$Database$Skill$Party,
						author$project$Database$Skill$Heal,
						author$project$Database$Skill$Flat(5000)))
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A3(
						author$project$Database$Skill$Grant,
						author$project$Database$Skill$Party,
						1,
						author$project$Database$Skill$Performance(author$project$Database$Base$Quick)),
					A2(author$project$Database$Skill$Range, 20, 30))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 211,
			limited: true,
			name: 'The Wandering Tales of Shana-oh',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Party,
					author$project$Database$Skill$GainStars,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 212,
			limited: true,
			name: 'Golden Captures the Carp',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 213,
			limited: true,
			name: 'A Fox Night\'s Dream',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Male),
					A2(author$project$Database$Skill$Range, 25, 30)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffSuccess,
					A2(author$project$Database$Skill$Range, 12, 15))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 214,
			limited: true,
			name: 'Burning Tale of Love',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$DebuffResist, author$project$Database$Skill$Full))
				]),
			icon: author$project$Database$Base$IconHoodUp,
			id: 215,
			limited: true,
			name: 'Reciting the Subscription List',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			A5(
			bond,
			216,
			'Key of the King\'s Law',
			'Gilgamesh',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			217,
			'Golden Glass',
			'Sakata Kintoki',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Self, author$project$Database$Skill$GaugeUp),
					author$project$Database$Skill$Flat(5))
				])),
			A5(
			bond,
			218,
			'Thunderous Applause',
			'Nero Claudius',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			219,
			'Das Rheingold',
			'Siegfried',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			220,
			'Radiance of the Goddess',
			'Stheno',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			221,
			'Voyage of the Flowers',
			'Altria Pendragon (Lily)',
			author$project$Database$Base$IconSwordUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 10),
					A2(party, author$project$Database$Skill$StarUp, 10)
				])),
			A5(
			bond,
			222,
			'Ark of the Covenant',
			'David',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A2(
					atkChance,
					10,
					A3(author$project$Database$Skill$To, author$project$Database$Skill$Target, author$project$Database$Skill$Kill, author$project$Database$Skill$Full))
				])),
			A5(
			bond,
			223,
			'Door to Babylon',
			'Darius III',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			224,
			'Blood-Thirsting Axe',
			'Eric Bloodaxe',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			225,
			'Insurrection',
			'Spartacus',
			author$project$Database$Base$IconKneel,
			_List_fromArray(
				[
					gutsPercent(50)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 226,
			limited: true,
			name: 'Go West!!',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 25, 40))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 227,
			limited: true,
			name: 'The Classic Three Great Heroes',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 228,
			limited: true,
			name: 'True Samadhi Fire',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconStarUp,
			id: 229,
			limited: true,
			name: 'All Three Together',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			A5(
			bond,
			230,
			'Tristar Belt',
			'Orion',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			231,
			'Golden Helm',
			'Francis Drake',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			232,
			'Black Knight\'s Helmet',
			'Lancelot',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Debuff, author$project$Database$Skill$Target, 3, author$project$Database$Skill$CritChance),
					author$project$Database$Skill$Flat(30))
				])),
			A5(
			bond,
			233,
			'Golden Apple',
			'Atalante',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			234,
			'Holy Pumpkin Grail',
			'Elisabeth Bathory (Halloween)',
			author$project$Database$Base$IconHoodUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$DebuffResist, 30)
				])),
			A5(
			bond,
			235,
			'Rotary Matchlock',
			'Oda Nobunaga',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			236,
			'Llamrei Unit II',
			'Altria Pendragon (Santa Alter)',
			author$project$Database$Base$IconStarHaloUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			237,
			'Things to Calm the Heart',
			'Henry Jekyll & Hyde',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			238,
			'Glory of the Past Days',
			'Edward Teach',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			239,
			'Heaven Among the Mountains',
			'Sasaki Kojirou',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$DefenseUp),
					A2(author$project$Database$Skill$Range, 20, 25))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 240,
			limited: true,
			name: 'Divine Princess of the Storm',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					3,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 241,
			limited: true,
			name: 'Ox-Demon King',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$MysticCode,
					true,
					author$project$Database$Skill$Flat(2))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 242,
			limited: true,
			name: 'Personal Lesson',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					3,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconSwordUp,
			id: 243,
			limited: false,
			name: 'Bronze-Link Manipulator',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 244,
			limited: false,
			name: 'Ath nGabla',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 160},
				max: {atk: 500, hp: 800}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$CraftEssence$equipped(author$project$Database$Base$Assassin),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$NPUp),
					A2(author$project$Database$Skill$Range, 15, 25))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 245,
			limited: false,
			name: 'Bygone Dream',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			icon: author$project$Database$Base$IconHealUp,
			id: 246,
			limited: false,
			name: 'Extremely Spicy Mapo Tofu',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 25, 40))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 247,
			limited: false,
			name: 'Jeweled Sword Zelretch',
			rarity: 3,
			stats: {
				base: {atk: 100, hp: 160},
				max: {atk: 500, hp: 800}
			}
		},
			A5(
			bond,
			248,
			'Tamamo\'s Club',
			'Tamamo-no-Mae',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			249,
			'Headband of Resolve',
			'Okita Souji',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			250,
			'Calico Jack',
			'Anne Bonny & Mary Read',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			251,
			'Gazing Upon Dun Scaith',
			'Scathach',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			252,
			'Star of Prophecy',
			'Cu Chulainn',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$CritUp),
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			253,
			'Hekate\'s Staff',
			'Medea',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			254,
			'Formless Island',
			'Medusa',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			255,
			'Cask of the Wise',
			'Alexander',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			256,
			'Shaytan\'s Arm',
			'Hassan of the Cursed Arm',
			author$project$Database$Base$IconReaperUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$KillUp, 20)
				])),
			A5(
			bond,
			257,
			'Ariadne\'s Thread',
			'Asterios',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 258,
			limited: true,
			name: 'Dumplings Over Flowers',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 259,
			limited: true,
			name: 'Faithful Companions',
			rarity: 4,
			stats: {
				base: {atk: 0, hp: 600},
				max: {atk: 0, hp: 2250}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 260,
			limited: true,
			name: 'Hidden Sword: Pheasant Reversal',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackUp,
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			icon: author$project$Database$Base$IconSwordUp,
			id: 261,
			limited: true,
			name: 'Golden Sumo: Boulder Tournament',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 20, 25)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 262,
			limited: true,
			name: 'Hot Spring Under the Moon',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$ClassAffinity(author$project$Database$Base$Caster),
					A2(author$project$Database$Skill$Range, 35, 40))
				]),
			icon: author$project$Database$Base$IconShieldBreak,
			id: 263,
			limited: false,
			name: 'Origin Bullet',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageUp,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconDamageUp,
			id: 264,
			limited: false,
			name: 'Covering Fire',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A2(author$project$Database$Skill$To, author$project$Database$Skill$Party, author$project$Database$Skill$GaugeUp),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconNoble,
			id: 265,
			limited: false,
			name: 'Battle of Camlann',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			A5(
			bond,
			266,
			'Who Am I?',
			'Mordred',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			267,
			'The Misty Night of London',
			'Jack the Ripper',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			268,
			'Wonderland',
			'Nursery Rhyme',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 15),
					A2(party, author$project$Database$Skill$HealingReceived, 10)
				])),
			A5(
			bond,
			269,
			'Faceless King',
			'Robin Hood',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			270,
			'Usumidori',
			'Ushiwakamaru',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			271,
			'Etiquette of Nine Guests',
			'Jing Ke',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A3(
					elm$core$Basics$composeL,
					atkChance(30),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 3, author$project$Database$Skill$KillUp),
					author$project$Database$Skill$Flat(30))
				])),
			A5(
			bond,
			272,
			'Heaven Scorcher Halberd',
			'Lu Bu Fengxian',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			273,
			'What can be Left Behind',
			'Georgios',
			author$project$Database$Base$IconShield,
			_List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					author$project$Database$Skill$Times(1),
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 0, author$project$Database$Skill$Invincibility, author$project$Database$Skill$Full)),
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$When('defeated'),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Party, 3, author$project$Database$Skill$DamageDown),
					author$project$Database$Skill$Flat(1000))
				])),
			A5(
			bond,
			274,
			'Thermopylae',
			'Leonidas I',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			275,
			'Haydn Quartets',
			'Wolfgang Amadeus Mozart',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackUp,
					author$project$Database$Skill$Flat(10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					author$project$Database$Skill$Flat(3))
				]),
			icon: author$project$Database$Base$IconSwordUp,
			id: 276,
			limited: true,
			name: 'Anniversary Heroines',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 400, 600)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 10, 15))
				]),
			icon: author$project$Database$Base$IconStarUp,
			id: 277,
			limited: true,
			name: 'Leisure Stroll',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 278,
			limited: true,
			name: 'Partake with the King',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$SureHit, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconBullseye,
			id: 279,
			limited: true,
			name: 'Goldfish Scooping',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 5, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconStarHaloUp,
			id: 280,
			limited: true,
			name: 'Fire Flower',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			A5(
			bond,
			281,
			'Arm of Raiden',
			'Nikola Tesla',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			282,
			'Endowed Hero',
			'Arjuna',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					np30,
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarAbsorb,
					author$project$Database$Skill$Flat(1000))
				])),
			A5(
			bond,
			283,
			'Lamp of the Unfortunate',
			'Karna',
			author$project$Database$Base$IconAllUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 8),
					A2(party_, author$project$Database$Base$Arts, 8),
					A2(party_, author$project$Database$Base$Buster, 8)
				])),
			A5(
			bond,
			284,
			'Procedure to Humanity',
			'Frankenstein',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			285,
			'Black Helmet',
			'Altria Pendragon (Lancer Alter)',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			286,
			'Legend of the Gallic War',
			'Gaius Julius Caesar',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			287,
			'Rome',
			'Romulus',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			288,
			'Encounter at Gojou Bridge',
			'Musashibou Benkei',
			author$project$Database$Base$IconNobleRedUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPFromDamage, 20)
				])),
			A5(
			bond,
			289,
			'Impure Death Mask',
			'Phantom of the Opera',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			290,
			'Really Convenient',
			'William Shakespeare',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$IgnoreInvinc, author$project$Database$Skill$Full),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			icon: author$project$Database$Base$IconShieldBreak,
			id: 291,
			limited: true,
			name: 'Pirates Party!',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 30, 50))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 292,
			limited: true,
			name: 'Summertime Mistress',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A2(
					author$project$Database$Skill$Times,
					1,
					A4(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Evasion, author$project$Database$Skill$Full)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 293,
			limited: true,
			name: 'Twilight Memory',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 3, 5)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 3, 5))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 294,
			limited: true,
			name: 'Shiny Goddess',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Quick),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 50, 60))
				]),
			icon: author$project$Database$Base$IconQuickUp,
			id: 295,
			limited: true,
			name: 'Knights of Marines',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(1)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconKneel,
			id: 296,
			limited: true,
			name: 'Chaldea Lifesavers',
			rarity: 5,
			stats: {
				base: {atk: 0, hp: 750},
				max: {atk: 0, hp: 3000}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealPerTurn,
					A2(author$project$Database$Skill$Range, 200, 300)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconHealTurn,
			id: 297,
			limited: true,
			name: 'Meat Wars',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 298,
			limited: true,
			name: 'Shaved Ice (Void\'s Dust Flavor)',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			A5(
			bond,
			299,
			'Annihilation List',
			'Mysterious Heroine X',
			author$project$Database$Base$IconDamageUp,
			_List_fromArray(
				[
					A2(
					party,
					author$project$Database$Skill$ClassAffinity(author$project$Database$Base$Saber),
					20)
				])),
			A5(
			bond,
			300,
			'Imperishable Flames',
			'Brynhild',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 10),
					A2(party, author$project$Database$Skill$NPGen, 10)
				])),
			A5(
			bond,
			301,
			'Ring of Bay Laurel',
			'Nero Claudius (Bride)',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			302,
			'Final Battle',
			'Beowulf',
			author$project$Database$Base$IconDamageUp,
			_List_fromArray(
				[
					A2(
					party,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Dragon),
					20)
				])),
			A5(
			bond,
			303,
			'Bratan of Wisdom',
			'Fionn mac Cumhaill',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			304,
			'Prelati\'s Spellbook',
			'Gilles de Rais',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$DebuffVuln,
					author$project$Database$Skill$Flat(20))
				])),
			A5(
			bond,
			305,
			'Parasitic Bomb',
			'Mephistopheles',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			306,
			'Seethe of a Warrior',
			'Fergus mac Roich',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			307,
			'My Loathsome Life',
			'Charles-Henri Sanson',
			author$project$Database$Base$IconReaperUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$KillUp, 10),
					A2(party, author$project$Database$Skill$NPGen, 10)
				])),
			A5(
			bond,
			308,
			'There is No Love Here',
			'Caligula',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPGen,
					A2(author$project$Database$Skill$Range, 25, 30)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 40, 50))
				]),
			icon: author$project$Database$Base$IconNobleUp,
			id: 309,
			limited: true,
			name: 'Magical Girl of Sapphire',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 8, 10)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 310,
			limited: true,
			name: 'Kill on Sight',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DamageDown,
					A2(author$project$Database$Skill$Range, 100, 200)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$HealingReceived,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 311,
			limited: true,
			name: 'Zunga Zunga!',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 312,
			limited: true,
			name: 'Kaleid Ruby',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Arts),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 8, 10))
				]),
			icon: author$project$Database$Base$IconArtsUp,
			id: 313,
			limited: true,
			name: 'Kaleid Sapphire',
			rarity: 4,
			stats: {
				base: {atk: 400, hp: 0},
				max: {atk: 1500, hp: 0}
			}
		},
			A5(
			bond,
			315,
			'Mugashiki—Shinkuu Myou',
			'Ryougi Shiki (Saber)',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			317,
			'Château d\'If',
			'Edmond Dantes',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			318,
			'Unlimited Pancakes',
			'Medea (Lily)',
			author$project$Database$Base$IconHealUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealingReceived, 30)
				])),
			A5(
			bond,
			319,
			'Red Leather Jacket',
			'Ryougi Shiki (Assassin)',
			author$project$Database$Base$IconReaperUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$KillUp, 30)
				])),
			A5(
			bond,
			321,
			'Letter From a Friend',
			'Gilles de Rais (Caster)',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarDown,
					author$project$Database$Skill$Flat(20))
				])),
			A5(
			bond,
			322,
			'Hound of Culann',
			'Cu Chulainn (Prototype)',
			author$project$Database$Base$IconDamageUp,
			_List_fromArray(
				[
					A2(
					party,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Beast),
					20)
				])),
			A5(
			bond,
			323,
			'Radiance of the Goddess (Euryale)',
			'Euryale',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			324,
			'Hero\'s Armament',
			'Hektor',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 3, 4))
				]),
			icon: author$project$Database$Base$IconBeamUp,
			id: 325,
			limited: true,
			name: 'Glory Is With Me',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DefenseUp,
					A2(author$project$Database$Skill$Range, 8, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$NPUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconShieldUp,
			id: 326,
			limited: true,
			name: 'Original Legion',
			rarity: 4,
			stats: {
				base: {atk: 200, hp: 320},
				max: {atk: 750, hp: 1200}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 10, 15)),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffVuln,
					author$project$Database$Skill$Flat(20))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 327,
			limited: true,
			name: 'Howl at the Moon',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					elm$core$Basics$composeL,
					author$project$Database$Skill$Times(1),
					A3(author$project$Database$Skill$Grant, author$project$Database$Skill$Self, 0, author$project$Database$Skill$Guts),
					author$project$Database$Skill$Flat(1)),
					A3(
					author$project$Database$Skill$To,
					author$project$Database$Skill$Self,
					author$project$Database$Skill$GaugeUp,
					A2(author$project$Database$Skill$Range, 10, 20))
				]),
			icon: author$project$Database$Base$IconKneel,
			id: 328,
			limited: true,
			name: 'Princess of the White Rose',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$Performance(author$project$Database$Base$Buster),
					A2(author$project$Database$Skill$Range, 15, 20)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					A2(author$project$Database$Skill$Range, 15, 20))
				]),
			icon: author$project$Database$Base$IconBusterUp,
			id: 329,
			limited: true,
			name: 'Joint Recital',
			rarity: 5,
			stats: {
				base: {atk: 500, hp: 0},
				max: {atk: 2000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$Bond,
					true,
					A2(author$project$Database$Skill$Range, 2, 10))
				]),
			icon: author$project$Database$Base$IconRainbow,
			id: 330,
			limited: true,
			name: 'Chaldea Lunchtime',
			rarity: 5,
			stats: {
				base: {atk: 250, hp: 400},
				max: {atk: 1000, hp: 1600}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarUp,
					A2(author$project$Database$Skill$Range, 200, 300))
				]),
			icon: author$project$Database$Base$IconStarUp,
			id: 331,
			limited: true,
			name: 'Fragarach',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$StarsPerTurn,
					A2(author$project$Database$Skill$Range, 1, 2)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$DebuffResist,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconStarTurn,
			id: 332,
			limited: true,
			name: 'Inverted Moon of the Heavens',
			rarity: 3,
			stats: {
				base: {atk: 0, hp: 300},
				max: {atk: 0, hp: 1500}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$KillUp,
					A2(author$project$Database$Skill$Range, 5, 10))
				]),
			icon: author$project$Database$Base$IconReaperUp,
			id: 333,
			limited: true,
			name: 'Hydra Dagger',
			rarity: 3,
			stats: {
				base: {atk: 200, hp: 0},
				max: {atk: 1000, hp: 0}
			}
		},
			A5(
			bond,
			334,
			'Indomitableness',
			'Florence Nightingale',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 10),
					A2(party, author$project$Database$Skill$HealingReceived, 20)
				])),
			A5(
			bond,
			335,
			'One-Man War',
			'Cu Chulainn (Alter)',
			author$project$Database$Base$IconKneel,
			_List_fromArray(
				[
					np30,
					gutsPercent(20)
				])),
			A5(
			bond,
			336,
			'Sacred Spring',
			'Queen Medb',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			337,
			'Indestructible Blade',
			'Rama',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			338,
			'Concealed Goddess',
			'Helena Blavatsky',
			author$project$Database$Base$IconDamageUp,
			_List_fromArray(
				[
					A2(
					party,
					author$project$Database$Skill$ClassAffinity(author$project$Database$Base$Assassin),
					20)
				])),
			A5(
			bond,
			339,
			'Lights of Civilization',
			'Thomas Edison',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			340,
			'Reaching the Zenith of My Skill',
			'Li Shuwen',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 15)
				])),
			A5(
			bond,
			341,
			'Knight\'s Oath',
			'Diarmuid Ua Duibhne',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 10),
					A2(party_, author$project$Database$Base$Arts, 10)
				])),
			A5(
			bond,
			342,
			'Elemental',
			'Paracelsus von Hohenheim',
			author$project$Database$Base$IconArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			343,
			'NEO Difference Engine',
			'Charles Babbage',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			350,
			'Hell of Blazing Punishment',
			'Jeanne d\'Arc (Alter)',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			351,
			'Gordian Knot',
			'Iskandar',
			author$project$Database$Base$IconSwordUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			352,
			'Bai Long',
			'Xuanzang Sanzang',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			353,
			'The Sun Shines Here',
			'Emiya (Assassin)',
			author$project$Database$Base$IconArtsQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 10),
					A2(party_, author$project$Database$Base$Arts, 10)
				])),
			A5(
			bond,
			354,
			'Dress of Heaven',
			'Irisviel (Dress of Heaven)',
			author$project$Database$Base$IconHealUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealingReceived, 30)
				])),
			A5(
			bond,
			355,
			'Manifestation of The Golden Rule',
			'Gilgamesh (Child)',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			356,
			'Spirit of The Vast Land',
			'Geronimo',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 15)
				])),
			A5(
			bond,
			357,
			'Extolling The Revolver',
			'Billy the Kid',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			358,
			'Library of Hundred Men',
			'Hassan of the Hundred Personas',
			author$project$Database$Base$IconAllUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 8),
					A2(party_, author$project$Database$Base$Quick, 8),
					A2(party_, author$project$Database$Base$Arts, 8)
				])),
			A5(
			bond,
			359,
			'Last Splinter',
			'Angra Mainyu',
			author$project$Database$Base$IconDamageUp,
			_List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$AttackVs(author$project$Database$Base$Beast),
					author$project$Database$Skill$Flat(200)),
					gutsPercent(20)
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Self,
					0,
					author$project$Database$Skill$CritUp,
					author$project$Database$Skill$Flat(15)),
					A4(
					author$project$Database$Skill$Grant,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$StarsPerTurn,
					author$project$Database$Skill$Flat(3))
				]),
			icon: author$project$Database$Base$IconExclamationUp,
			id: 360,
			limited: true,
			name: 'Fate/EXTELLA',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 361,
			limited: true,
			name: 'Spiritron Portrait: Nero Claudius',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 362,
			limited: true,
			name: 'Spiritron Portrait: Nameless',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 363,
			limited: true,
			name: 'Spiritron Portrait: Tamamo-no-Mae',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 364,
			limited: true,
			name: 'Spiritron Portrait: Karna',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 365,
			limited: true,
			name: 'Spiritron Portrait: Altera',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 366,
			limited: true,
			name: 'Spiritron Portrait: Gilgamesh',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		},
			A5(
			bond,
			367,
			'Divine Oni-Poison Sake',
			'Shuten-Douji',
			author$project$Database$Base$IconArtsQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 10),
					A2(party_, author$project$Database$Base$Arts, 10)
				])),
			A5(
			bond,
			368,
			'Doujigiri Yasutsuna',
			'Minamoto-no-Raikou',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 10),
					A2(party, author$project$Database$Skill$CritUp, 15)
				])),
			A5(
			bond,
			369,
			'Ramesseum',
			'Ozymandias',
			author$project$Database$Base$IconBusterArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Arts, 10),
					A2(party_, author$project$Database$Base$Buster, 10)
				])),
			A5(
			bond,
			370,
			'Bone Sword (Nameless)',
			'Ibaraki-Douji',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			371,
			'Unit Golden Bear',
			'Sakata Kintoki (Rider)',
			author$project$Database$Base$IconStarHaloUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$StarUp, 20)
				])),
			A5(
			bond,
			372,
			'Gringolet',
			'Gawain',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			373,
			'But I Lied Once',
			'Tristan',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			374,
			'Exercising the Royal Authority',
			'Nitocris',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			375,
			'Mask of A Demon',
			'Fuuma \"Evil-wind\" Kotarou',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			376,
			'Cook Despite of Exhaustion',
			'Tawara Touta',
			author$project$Database$Base$IconHealTurn,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$HealPerTurn, 500)
				])),
			A5(
			bond,
			377,
			'Dun Stallion',
			'Altria Pendragon (Lancer)',
			author$project$Database$Base$IconSwordUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 10),
					A2(party, author$project$Database$Skill$NPUp, 10)
				])),
			A5(
			bond,
			378,
			'All-Encompassing Wisdom',
			'Leonardo da Vinci',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			379,
			'Sunset Beach',
			'Tamamo-no-Mae (Lancer)',
			author$project$Database$Base$IconQuickBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 10),
					A2(party_, author$project$Database$Base$Buster, 10)
				])),
			A5(
			bond,
			380,
			'Lady of the Lake',
			'Lancelot (Saber)',
			author$project$Database$Base$IconNobleUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPGen, 10),
					A2(party, author$project$Database$Skill$CritUp, 10)
				])),
			A5(
			bond,
			381,
			'Reminiscence of the Summer',
			'Marie Antoinette (Caster)',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 25)
				])),
			A5(
			bond,
			382,
			'Currently In The Middle Of A Shower',
			'Anne Bonny & Mary Read (Archer)',
			author$project$Database$Base$IconBusterArtsUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 10),
					A2(party_, author$project$Database$Base$Arts, 10)
				])),
			A5(
			bond,
			383,
			'Prydwen',
			'Mordred (Rider)',
			author$project$Database$Base$IconBeamUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$NPUp, 20)
				])),
			A5(
			bond,
			384,
			'Beach Love Letter (Terror)',
			'Kiyohime (Lancer)',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 20),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$DefenseDown,
					author$project$Database$Skill$Flat(10))
				])),
			A5(
			bond,
			385,
			'My Long Lost Right Arm',
			'Bedivere',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 10),
					A2(party, author$project$Database$Skill$NPGen, 10)
				])),
			A5(
			bond,
			386,
			'Proof of Existence',
			'Hassan of the Serenity',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			391,
			'Champion Cup',
			'Altria Pendragon (Archer)',
			author$project$Database$Base$IconSwordUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$AttackUp, 15)
				])),
			A5(
			bond,
			392,
			'Phantasmal Summoning (Install)',
			'Illyasviel von Einzbern',
			author$project$Database$Base$IconAllUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 8),
					A2(party_, author$project$Database$Base$Quick, 8),
					A2(party_, author$project$Database$Base$Arts, 8)
				])),
			A5(
			bond,
			394,
			'Holy Knuckle',
			'Martha (Ruler)',
			author$project$Database$Base$IconBusterUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Buster, 15)
				])),
			A5(
			bond,
			395,
			'Minimal Prudence',
			'Scathach (Assassin)',
			author$project$Database$Base$IconQuickUp,
			_List_fromArray(
				[
					A2(party_, author$project$Database$Base$Quick, 15)
				])),
			A5(
			bond,
			396,
			'Sharing of Pain',
			'Chloe von Einzbern',
			author$project$Database$Base$IconExclamationUp,
			_List_fromArray(
				[
					A2(party, author$project$Database$Skill$CritUp, 30),
					A4(
					author$project$Database$Skill$Debuff,
					author$project$Database$Skill$Party,
					0,
					author$project$Database$Skill$HealthLoss,
					author$project$Database$Skill$Flat(200))
				])),
			{
			bond: elm$core$Maybe$Nothing,
			effect: _List_fromArray(
				[
					A3(
					author$project$Database$Skill$Bonus,
					author$project$Database$Skill$EXP,
					false,
					author$project$Database$Skill$Flat(50))
				]),
			icon: author$project$Database$Base$IconRoad,
			id: 399,
			limited: true,
			name: 'First Order',
			rarity: 4,
			stats: {
				base: {atk: 100, hp: 100},
				max: {atk: 100, hp: 100}
			}
		}
		]);
}();
var elm$core$Basics$neq = _Utils_notEqual;
var elm$core$String$filter = _String_filter;
var author$project$Printing$urlName = elm$core$String$filter(
	elm$core$Basics$neq(
		_Utils_chr(' ')));
var author$project$StandardLibrary$flip = F3(
	function (f, b, a) {
		return A2(f, a, b);
	});
var elm$core$List$concatMap = F2(
	function (f, list) {
		return elm$core$List$concat(
			A2(elm$core$List$map, f, list));
	});
var elm$core$Basics$identity = function (x) {
	return x;
};
var elm$json$Json$Decode$map = _Json_map1;
var elm$json$Json$Decode$map2 = _Json_map2;
var elm$json$Json$Decode$succeed = _Json_succeed;
var elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 'Normal':
			return 0;
		case 'MayStopPropagation':
			return 1;
		case 'MayPreventDefault':
			return 2;
		default:
			return 3;
	}
};
var elm$html$Html$br = _VirtualDom_node('br');
var elm$html$Html$div = _VirtualDom_node('div');
var elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var elm$html$Html$text = elm$virtual_dom$VirtualDom$text;
var author$project$Main$view = function (st) {
	return A3(
		elm$core$Basics$composeL,
		A2(
			elm$core$Basics$composeL,
			A2(
				elm$core$Basics$composeL,
				elm$html$Html$div(_List_Nil),
				elm$core$List$concatMap(
					A2(
						author$project$StandardLibrary$flip,
						elm$core$List$cons,
						_List_fromArray(
							[
								A2(elm$html$Html$br, _List_Nil, _List_Nil)
							])))),
			elm$core$List$map(elm$html$Html$text)),
		elm$core$List$map(
			elm$core$Basics$append('https://jnbooth.github.io/chaldeas/')),
		_Utils_ap(
			_List_fromArray(
				['Servants', 'CraftEssences']),
			_Utils_ap(
				A2(
					elm$core$List$map,
					A2(
						elm$core$Basics$composeR,
						function ($) {
							return $.name;
						},
						A2(
							elm$core$Basics$composeR,
							author$project$Printing$urlName,
							elm$core$Basics$append('Servants/'))),
					author$project$Database$servants),
				A2(
					elm$core$List$map,
					A2(
						elm$core$Basics$composeR,
						function ($) {
							return $.name;
						},
						A2(
							elm$core$Basics$composeR,
							author$project$Printing$urlName,
							elm$core$Basics$append('CraftEssences/'))),
					author$project$Database$CraftEssence$craftEssences))));
};
var elm$browser$Browser$External = function (a) {
	return {$: 'External', a: a};
};
var elm$browser$Browser$Internal = function (a) {
	return {$: 'Internal', a: a};
};
var elm$browser$Browser$Dom$NotFound = function (a) {
	return {$: 'NotFound', a: a};
};
var elm$core$Basics$never = function (_n0) {
	never:
	while (true) {
		var nvr = _n0.a;
		var $temp$_n0 = nvr;
		_n0 = $temp$_n0;
		continue never;
	}
};
var elm$core$Task$Perform = function (a) {
	return {$: 'Perform', a: a};
};
var elm$core$Task$succeed = _Scheduler_succeed;
var elm$core$Task$init = elm$core$Task$succeed(_Utils_Tuple0);
var elm$core$Task$andThen = _Scheduler_andThen;
var elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			elm$core$Task$andThen,
			function (a) {
				return elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			elm$core$Task$andThen,
			function (a) {
				return A2(
					elm$core$Task$andThen,
					function (b) {
						return elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var elm$core$Task$sequence = function (tasks) {
	return A3(
		elm$core$List$foldr,
		elm$core$Task$map2(elm$core$List$cons),
		elm$core$Task$succeed(_List_Nil),
		tasks);
};
var elm$core$Platform$sendToApp = _Platform_sendToApp;
var elm$core$Task$spawnCmd = F2(
	function (router, _n0) {
		var task = _n0.a;
		return _Scheduler_spawn(
			A2(
				elm$core$Task$andThen,
				elm$core$Platform$sendToApp(router),
				task));
	});
var elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			elm$core$Task$map,
			function (_n0) {
				return _Utils_Tuple0;
			},
			elm$core$Task$sequence(
				A2(
					elm$core$List$map,
					elm$core$Task$spawnCmd(router),
					commands)));
	});
var elm$core$Task$onSelfMsg = F3(
	function (_n0, _n1, _n2) {
		return elm$core$Task$succeed(_Utils_Tuple0);
	});
var elm$core$Task$cmdMap = F2(
	function (tagger, _n0) {
		var task = _n0.a;
		return elm$core$Task$Perform(
			A2(elm$core$Task$map, tagger, task));
	});
_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);
var elm$core$Task$command = _Platform_leaf('Task');
var elm$core$Task$perform = F2(
	function (toMessage, task) {
		return elm$core$Task$command(
			elm$core$Task$Perform(
				A2(elm$core$Task$map, toMessage, task)));
	});
var elm$core$String$length = _String_length;
var elm$core$String$slice = _String_slice;
var elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			elm$core$String$slice,
			n,
			elm$core$String$length(string),
			string);
	});
var elm$core$String$startsWith = _String_startsWith;
var elm$url$Url$Http = {$: 'Http'};
var elm$url$Url$Https = {$: 'Https'};
var elm$core$String$indexes = _String_indexes;
var elm$core$String$isEmpty = function (string) {
	return string === '';
};
var elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);
	});
var elm$core$String$contains = _String_contains;
var elm$core$String$toInt = _String_toInt;
var elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};
	});
var elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, ':', str);
			if (!_n0.b) {
				return elm$core$Maybe$Just(
					A6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_n0.b.b) {
					var i = _n0.a;
					var _n1 = elm$core$String$toInt(
						A2(elm$core$String$dropLeft, i + 1, str));
					if (_n1.$ === 'Nothing') {
						return elm$core$Maybe$Nothing;
					} else {
						var port_ = _n1;
						return elm$core$Maybe$Just(
							A6(
								elm$url$Url$Url,
								protocol,
								A2(elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return elm$core$Maybe$Nothing;
				}
			}
		}
	});
var elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if (elm$core$String$isEmpty(str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, '/', str);
			if (!_n0.b) {
				return A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _n0.a;
				return A5(
					elm$url$Url$chompBeforePath,
					protocol,
					A2(elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2(elm$core$String$left, i, str));
			}
		}
	});
var elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if (elm$core$String$isEmpty(str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, '?', str);
			if (!_n0.b) {
				return A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _n0.a;
				return A4(
					elm$url$Url$chompBeforeQuery,
					protocol,
					elm$core$Maybe$Just(
						A2(elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2(elm$core$String$left, i, str));
			}
		}
	});
var elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if (elm$core$String$isEmpty(str)) {
			return elm$core$Maybe$Nothing;
		} else {
			var _n0 = A2(elm$core$String$indexes, '#', str);
			if (!_n0.b) {
				return A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);
			} else {
				var i = _n0.a;
				return A3(
					elm$url$Url$chompBeforeFragment,
					protocol,
					elm$core$Maybe$Just(
						A2(elm$core$String$dropLeft, i + 1, str)),
					A2(elm$core$String$left, i, str));
			}
		}
	});
var elm$url$Url$fromString = function (str) {
	return A2(elm$core$String$startsWith, 'http://', str) ? A2(
		elm$url$Url$chompAfterProtocol,
		elm$url$Url$Http,
		A2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(
		elm$url$Url$chompAfterProtocol,
		elm$url$Url$Https,
		A2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);
};
var elm$browser$Browser$element = _Browser_element;
var elm$core$Basics$always = F2(
	function (a, _n0) {
		return a;
	});
var elm$core$Platform$Sub$batch = _Platform_batch;
var elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);
var author$project$Main$main = elm$browser$Browser$element(
	{
		init: author$project$Main$init,
		subscriptions: elm$core$Basics$always(elm$core$Platform$Sub$none),
		update: author$project$Main$update,
		view: author$project$Main$view
	});
_Platform_export({'Main':{'init':author$project$Main$main(
	elm$json$Json$Decode$succeed(_Utils_Tuple0))(0)}});}(this));